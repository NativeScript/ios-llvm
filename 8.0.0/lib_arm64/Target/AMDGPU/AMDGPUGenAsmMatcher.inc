/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Matcher Source Fragment                                           *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_ASSEMBLER_HEADER
#undef GET_ASSEMBLER_HEADER
  // This should be included into the middle of the declaration of
  // your subclasses implementation of MCTargetAsmParser.
  uint64_t ComputeAvailableFeatures(const FeatureBitset& FB) const;
  void convertToMCInst(unsigned Kind, MCInst &Inst, unsigned Opcode,
                       const OperandVector &Operands,
                       const SmallBitVector &OptionalOperandsMask);
  void convertToMapAndConstraints(unsigned Kind,
                           const OperandVector &Operands) override;
  unsigned MatchInstructionImpl(const OperandVector &Operands,
                                MCInst &Inst,
                                uint64_t &ErrorInfo,
                                bool matchingInlineAsm,
                                unsigned VariantID = 0);
  OperandMatchResultTy MatchOperandParserImpl(
    OperandVector &Operands,
    StringRef Mnemonic,
    bool ParseForAllFeatures = false);
  OperandMatchResultTy tryCustomParseOperand(
    OperandVector &Operands,
    unsigned MCK);

#endif // GET_ASSEMBLER_HEADER_INFO


#ifdef GET_OPERAND_DIAGNOSTIC_TYPES
#undef GET_OPERAND_DIAGNOSTIC_TYPES

#endif // GET_OPERAND_DIAGNOSTIC_TYPES


#ifdef GET_REGISTER_MATCHER
#undef GET_REGISTER_MATCHER

// Flags for subtarget features that participate in instruction matching.
enum SubtargetFeatureFlag : uint64_t {
  Feature_isSICI = (1ULL << 31),
  Feature_isVI = (1ULL << 32),
  Feature_isGFX9 = (1ULL << 29),
  Feature_isCIVI = (1ULL << 27),
  Feature_HasFlatAddressSpace = (1ULL << 9),
  Feature_HasFlatGlobalInsts = (1ULL << 10),
  Feature_HasFlatScratchInsts = (1ULL << 11),
  Feature_HasD16LoadStore = (1ULL << 4),
  Feature_HasUnpackedD16VMem = (1ULL << 21),
  Feature_HasPackedD16VMem = (1ULL << 16),
  Feature_D16PreservesUnusedBits = (1ULL << 0),
  Feature_HasDSAddTid = (1ULL << 7),
  Feature_HasAddNoCarryInsts = (1ULL << 3),
  Feature_NotHasAddNoCarryInsts = (1ULL << 24),
  Feature_Has16BitInsts = (1ULL << 2),
  Feature_HasVOP3PInsts = (1ULL << 23),
  Feature_NotHasVOP3PInsts = (1ULL << 25),
  Feature_HasSDWA = (1ULL << 18),
  Feature_HasSDWA9 = (1ULL << 19),
  Feature_HasDPP = (1ULL << 6),
  Feature_HasR128A16 = (1ULL << 17),
  Feature_HasIntClamp = (1ULL << 13),
  Feature_HasMadMixInsts = (1ULL << 14),
  Feature_HasScalarAtomics = (1ULL << 20),
  Feature_HasVGPRIndexMode = (1ULL << 22),
  Feature_HasMovrel = (1ULL << 15),
  Feature_HasFmaMixInsts = (1ULL << 12),
  Feature_HasDLInsts = (1ULL << 5),
  Feature_HasDotInsts = (1ULL << 8),
  Feature_isCIOnly = (1ULL << 26),
  Feature_isVIOnly = (1ULL << 33),
  Feature_DisableInst = (1ULL << 1),
  Feature_isGCN = (1ULL << 28),
  Feature_isSI = (1ULL << 30),
  Feature_None = 0
};

#endif // GET_REGISTER_MATCHER


#ifdef GET_SUBTARGET_FEATURE_NAME
#undef GET_SUBTARGET_FEATURE_NAME

// User-level names for subtarget features that participate in
// instruction matching.
static const char *getSubtargetFeatureName(uint64_t Val) {
  switch(Val) {
  case Feature_isSICI: return "";
  case Feature_isVI: return "";
  case Feature_isGFX9: return "";
  case Feature_isCIVI: return "";
  case Feature_HasFlatAddressSpace: return "";
  case Feature_HasFlatGlobalInsts: return "";
  case Feature_HasFlatScratchInsts: return "";
  case Feature_HasD16LoadStore: return "";
  case Feature_HasUnpackedD16VMem: return "";
  case Feature_HasPackedD16VMem: return "";
  case Feature_D16PreservesUnusedBits: return "";
  case Feature_HasDSAddTid: return "";
  case Feature_HasAddNoCarryInsts: return "";
  case Feature_NotHasAddNoCarryInsts: return "";
  case Feature_Has16BitInsts: return "";
  case Feature_HasVOP3PInsts: return "";
  case Feature_NotHasVOP3PInsts: return "";
  case Feature_HasSDWA: return "";
  case Feature_HasSDWA9: return "";
  case Feature_HasDPP: return "";
  case Feature_HasR128A16: return "";
  case Feature_HasIntClamp: return "";
  case Feature_HasMadMixInsts: return "";
  case Feature_HasScalarAtomics: return "";
  case Feature_HasVGPRIndexMode: return "";
  case Feature_HasMovrel: return "";
  case Feature_HasFmaMixInsts: return "";
  case Feature_HasDLInsts: return "";
  case Feature_HasDotInsts: return "";
  case Feature_isCIOnly: return "";
  case Feature_isVIOnly: return "";
  case Feature_DisableInst: return "";
  case Feature_isGCN: return "";
  case Feature_isSI: return "";
  default: return "(unknown)";
  }
}

#endif // GET_SUBTARGET_FEATURE_NAME


#ifdef GET_MATCHER_IMPLEMENTATION
#undef GET_MATCHER_IMPLEMENTATION

static void applyMnemonicAliases(StringRef &Mnemonic, uint64_t Features, unsigned VariantID) {
  switch (VariantID) {
    case 0:
      switch (Mnemonic.size()) {
      default: break;
      case 9:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_nop_e32", 9) != 0)
          break;
        Mnemonic = "v_nop";	 // "v_nop_e32"
        return;
      case 10:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_swap_b32", 10) != 0)
          break;
        Mnemonic = "v_swap_b32";	 // "v_swap_b32"
        return;
      case 11:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_mad", 5) != 0)
          break;
        switch (Mnemonic[5]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+6, "k_f16", 5) != 0)
            break;
          Mnemonic = "v_madak_f16";	 // "v_madak_f16"
          return;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+6, "k_f16", 5) != 0)
            break;
          Mnemonic = "v_madmk_f16";	 // "v_madmk_f16"
          return;
        }
        break;
      case 12:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_or_b32_e32", 12) != 0)
          break;
        if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_or_b32_e32"
          Mnemonic = "v_or_b32";
        return;
      case 13:	 // 46 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_f32_e32"
                  Mnemonic = "v_add_f32";
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e32", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_i32_e32"
                Mnemonic = "v_add_i32";
              return;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_add_u16";	 // "v_add_u16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_u32_e32"
                  Mnemonic = "v_add_u32";
                return;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_e32", 9) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_and_b32_e32"
              Mnemonic = "v_and_b32";
            return;
          }
          break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "fm_b32_e32", 10) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_bfm_b32_e32"
            Mnemonic = "v_bfm_b32";
          return;
        case 'c':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "rexcp_e32", 9) != 0)
              break;
            Mnemonic = "v_clrexcp";	 // "v_clrexcp_e32"
            return;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "s_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_cos_f16";	 // "v_cos_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_cos_f32";	 // "v_cos_f32_e32"
              return;
            }
            break;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_e32"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "og_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_log_f16";	 // "v_log_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_log_f32";	 // "v_log_f32_e32"
            return;
          }
          break;
        case 'm':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 8 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mac_f32_e32"
                  Mnemonic = "v_mac_f32";
                return;
              }
              break;
            case 'x':	 // 6 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_e32"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_f32_e32"
                    Mnemonic = "v_max_f32";
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_e32"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_i32_e32"
                    Mnemonic = "v_max_i32";
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_e32"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_u32_e32"
                    Mnemonic = "v_max_u32";
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_f32_e32"
                  Mnemonic = "v_min_f32";
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_i32_e32"
                  Mnemonic = "v_min_i32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_u32_e32"
                  Mnemonic = "v_min_u32";
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_e32", 9) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_e32"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_f32_e32"
                Mnemonic = "v_mul_f32";
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_e32", 10) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_e32"
          return;
        case 'r':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_rcp_f64";	 // "v_rcp_f64_e32"
              return;
            }
            break;
          case 's':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_f64";	 // "v_rsq_f64_e32"
              return;
            }
            break;
          }
          break;
        case 's':	 // 7 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_e32"
              return;
            }
            break;
          case 'u':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_f32_e32"
                  Mnemonic = "v_sub_f32";
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e32", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_i32_e32"
                Mnemonic = "v_sub_i32";
              return;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_sub_u16";	 // "v_sub_u16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_u32_e32"
                  Mnemonic = "v_sub_u32";
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "or_b32_e32", 10) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_xor_b32_e32"
            Mnemonic = "v_xor_b32";
          return;
        }
        break;
      case 14:	 // 16 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dc_u32_e32", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_addc_u32_e32"
              Mnemonic = "v_addc_u32";
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "hr_i32_e32", 10) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_ashr_i32_e32"
              Mnemonic = "v_ashr_i32";
            return;
          }
          break;
        case 'c':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_ceil_f64";	 // "v_ceil_f64_e32"
            return;
          }
          break;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'f':	 // 3 strings to match.
            if (Mnemonic[4] != 'b')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_e32", 6) != 0)
                  break;
                Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_e32"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_e32", 6) != 0)
                  break;
                Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_e32"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "_b32_e32", 8) != 0)
                break;
              Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_e32"
              return;
            }
            break;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ac_f32_e32", 10) != 0)
              break;
            Mnemonic = "v_fmac_f32";	 // "v_fmac_f32_e32"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_e32", 8) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshl_b32_e32"
              Mnemonic = "v_lshl_b32";
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_e32", 8) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshr_b32_e32"
              Mnemonic = "v_lshr_b32";
            return;
          }
          break;
        case 's':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f64";	 // "v_sqrt_f64_e32"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_e32", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subb_u32_e32"
              Mnemonic = "v_subb_u32";
            return;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nor_b32_e32", 11) != 0)
            break;
          Mnemonic = "v_xnor_b32";	 // "v_xnor_b32_e32"
          return;
        }
        break;
      case 15:	 // 17 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_e32", 12) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_e32"
          return;
        case 'f':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_floor_f64";	 // "v_floor_f64_e32"
              return;
            }
            break;
          case 'r':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_fract_f64";	 // "v_fract_f64_e32"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_ldexp_f32_e32"
              Mnemonic = "v_ldexp_f32";
            return;
          }
          break;
        case 'm':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "ad", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'a':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "k_f32_e32", 9) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_madak_f32_e32"
              Mnemonic = "v_madak_f32";
            return;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "k_f32_e32", 9) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_madmk_f32_e32"
              Mnemonic = "v_madmk_f32";
            return;
          }
          break;
        case 'r':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_rndne_f64";	 // "v_rndne_f64_e32"
            return;
          }
          break;
        case 't':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_trunc_f64";	 // "v_trunc_f64_e32"
            return;
          }
          break;
        }
        break;
      case 16:	 // 6 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ul_lo_u16_e32", 13) != 0)
            break;
          Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_e32"
          return;
        case 's':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_e32", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_f32_e32"
                Mnemonic = "v_subrev_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_e32", 6) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_i32_e32"
              Mnemonic = "v_subrev_i32";
            return;
          case 'u':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_e32", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_u32_e32"
                Mnemonic = "v_subrev_u32";
              return;
            }
            break;
          }
          break;
        }
        break;
      case 17:	 // 29 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_ashrrev_i32_e32"
              Mnemonic = "v_ashrrev_i32";
            return;
          }
          break;
        case 'c':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dmask_b32_e32", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cndmask_b32_e32"
              Mnemonic = "v_cndmask_b32";
            return;
          case 'v':	 // 16 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 10 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_e32"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_e32"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_e32"
                  return;
                }
                break;
              case '3':	 // 4 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_e32"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e32", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f64";	 // "v_cvt_f32_f64_e32"
                    return;
                  }
                  break;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_e32"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_e32"
                  return;
                }
                break;
              case '6':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "4_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_f32";	 // "v_cvt_f64_f32_e32"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_i32";	 // "v_cvt_f64_i32_e32"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_u32";	 // "v_cvt_f64_u32_e32"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e32", 9) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_e32"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_e32"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f64";	 // "v_cvt_i32_f64_e32"
                  return;
                }
                break;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e32", 9) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_e32"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_e32"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f64";	 // "v_cvt_u32_f64_e32"
                  return;
                }
                break;
              }
              break;
            }
            break;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshlrev_b32_e32"
                Mnemonic = "v_lshlrev_b32";
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshrrev_b32_e32"
                Mnemonic = "v_lshrrev_b32";
              return;
            }
            break;
          }
          break;
        case 'm':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'o':	 // 3 strings to match.
            if (Mnemonic[4] != 'v')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "fed_b32_e32", 11) != 0)
                break;
              Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_e32"
              return;
            case 'r':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+6, "el", 2) != 0)
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'd':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e32", 8) != 0)
                  break;
                Mnemonic = "v_movreld_b32";	 // "v_movreld_b32_e32"
                return;
              case 's':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e32", 8) != 0)
                  break;
                Mnemonic = "v_movrels_b32";	 // "v_movrels_b32_e32"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_e32", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_i32_i24_e32"
                Mnemonic = "v_mul_i32_i24";
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_e32", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_u32_u24_e32"
                Mnemonic = "v_mul_u32_u24";
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_e32", 14) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subbrev_u32_e32"
            Mnemonic = "v_subbrev_u32";
          return;
        }
        break;
      case 18:	 // 3 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "cnt_u32_b32_e32", 15) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_bcnt_u32_b32_e32"
            Mnemonic = "v_bcnt_u32_b32";
          return;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ovrelsd_b32_e32", 15) != 0)
            break;
          Mnemonic = "v_movrelsd_b32";	 // "v_movrelsd_b32_e32"
          return;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "eadlane_b32_e32", 15) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_readlane_b32_e32"
            Mnemonic = "v_readlane_b32";
          return;
        }
        break;
      case 19:	 // 8 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_e32", 16) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_e32"
          return;
        case 'r':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f", 6) != 0)
                break;
              switch (Mnemonic[13]) {
              default: break;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_e32"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "4_e32", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f64";	 // "v_rcp_clamp_f64_e32"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_e32", 12) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_e32"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f", 9) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f64";	 // "v_rsq_clamp_f64_e32"
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "at_pk_u8_i16_e32", 16) != 0)
            break;
          Mnemonic = "v_sat_pk_u8_i16";	 // "v_sat_pk_u8_i16_e32"
          return;
        case 'w':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ritelane_b32_e32", 16) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_writelane_b32_e32"
            Mnemonic = "v_writelane_b32";
          return;
        }
        break;
      case 20:	 // 20 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 7 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
              break;
            switch (Mnemonic[15]) {
            default: break;
            case '0':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_e32"
              return;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_e32"
              return;
            case '2':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_e32"
              return;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "ff_f32_i4_e32", 13) != 0)
              break;
            Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_e32"
            return;
          case 'p':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "k_", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_i32_e32", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pk_i16_i32_e32"
                Mnemonic = "v_cvt_pk_i16_i32";
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_u32_e32", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pk_u16_u32_e32"
                Mnemonic = "v_cvt_pk_u16_u32";
              return;
            }
            break;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_e32", 17) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_e32"
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f64";	 // "v_frexp_mant_f64_e32"
            return;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_e32", 17) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_e32"
          return;
        case 'm':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e32", 15) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_mac_legacy_f32_e32"
                Mnemonic = "v_mac_legacy_f32";
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e32", 15) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_max_legacy_f32_e32"
                Mnemonic = "v_max_legacy_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_e32", 16) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_min_legacy_f32_e32"
              Mnemonic = "v_min_legacy_f32";
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_e32", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_i32_i24_e32"
                  Mnemonic = "v_mul_hi_i32_i24";
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_e32", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_u32_u24_e32"
                  Mnemonic = "v_mul_hi_u32_u24";
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_e32", 13) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_legacy_f32_e32"
                Mnemonic = "v_mul_legacy_f32";
              return;
            }
            break;
          }
          break;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_e32", 16) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_e32"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_e32", 16) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_e32"
            return;
          }
          break;
        }
        break;
      case 21:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_", 6) != 0)
          break;
        switch (Mnemonic[6]) {
        default: break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "lr_i32_f32_e32", 14) != 0)
            break;
          Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_e32"
          return;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "pi_i32_f32_e32", 14) != 0)
            break;
          Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_e32"
          return;
        }
        break;
      case 22:	 // 4 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_norm_", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "16_f16_e32", 10) != 0)
              break;
            Mnemonic = "v_cvt_norm_i16_f16";	 // "v_cvt_norm_i16_f16_e32"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "16_f16_e32", 10) != 0)
              break;
            Mnemonic = "v_cvt_norm_u16_f16";	 // "v_cvt_norm_u16_f16_e32"
            return;
          }
          break;
        case 'm':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "bcnt_", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case 'h':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "i_u32_b32_e32", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mbcnt_hi_u32_b32_e32"
              Mnemonic = "v_mbcnt_hi_u32_b32";
            return;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "o_u32_b32_e32", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mbcnt_lo_u32_b32_e32"
              Mnemonic = "v_mbcnt_lo_u32_b32";
            return;
          }
          break;
        }
        break;
      case 23:	 // 4 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "vt_pkrtz_f16_f32_e32", 20) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pkrtz_f16_f32_e32"
            Mnemonic = "v_cvt_pkrtz_f16_f32";
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_exp_i", 10) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "6_f16_e32", 9) != 0)
              break;
            Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_e32"
            return;
          case '3':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+14, "2_f", 3) != 0)
              break;
            switch (Mnemonic[17]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f64";	 // "v_frexp_exp_i32_f64_e32"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 24:	 // 3 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_pk", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "ccum_u8_f32_e32", 15) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pkaccum_u8_f32_e32"
            Mnemonic = "v_cvt_pkaccum_u8_f32";
          return;
        case 'n':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+9, "orm_", 4) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_e32", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pknorm_i16_f32_e32"
              Mnemonic = "v_cvt_pknorm_i16_f32";
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_e32", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pknorm_u16_f32_e32"
              Mnemonic = "v_cvt_pknorm_u16_f32";
            return;
          }
          break;
        }
        break;
      case 30:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_screen_partition_4se_b32_e32", 30) != 0)
          break;
        Mnemonic = "v_screen_partition_4se_b32";	 // "v_screen_partition_4se_b32_e32"
        return;
      }
    break;
    case 1:
      switch (Mnemonic.size()) {
      default: break;
      case 9:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_nop_e64", 9) != 0)
          break;
        Mnemonic = "v_nop";	 // "v_nop_e64"
        return;
      case 12:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'o':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "r_b32_e64", 9) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_or_b32_e64"
            Mnemonic = "v_or_b32";
          return;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ad_u8_e64", 9) != 0)
            break;
          Mnemonic = "v_sad_u8";	 // "v_sad_u8_e64"
          return;
        }
        break;
      case 13:	 // 68 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 8 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_f32_e64"
                  Mnemonic = "v_add_f32";
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_f64";	 // "v_add_f64_e64"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_i16";	 // "v_add_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_i32_e64"
                  Mnemonic = "v_add_i32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_u16";	 // "v_add_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_u32_e64"
                  Mnemonic = "v_add_u32";
                return;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_e64", 9) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_and_b32_e64"
              Mnemonic = "v_and_b32";
            return;
          }
          break;
        case 'b':	 // 4 strings to match.
          if (Mnemonic[3] != 'f')
            break;
          switch (Mnemonic[4]) {
          default: break;
          case 'e':	 // 2 strings to match.
            if (Mnemonic[5] != '_')
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_bfe_i32";	 // "v_bfe_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_bfe_u32";	 // "v_bfe_u32_e64"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+5, "_b32_e64", 8) != 0)
              break;
            Mnemonic = "v_bfi_b32";	 // "v_bfi_b32_e64"
            return;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+5, "_b32_e64", 8) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_bfm_b32_e64"
              Mnemonic = "v_bfm_b32";
            return;
          }
          break;
        case 'c':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "rexcp_e64", 9) != 0)
              break;
            Mnemonic = "v_clrexcp";	 // "v_clrexcp_e64"
            return;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "s_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cos_f16";	 // "v_cos_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cos_f32";	 // "v_cos_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_e64"
            return;
          }
          break;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "ma_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
              break;
            if ((Features & (Feature_Has16BitInsts|Feature_isVIOnly)) == (Feature_Has16BitInsts|Feature_isVIOnly))	 // "v_fma_f16_e64"
              Mnemonic = "v_fma_f16";
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_fma_f32";	 // "v_fma_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_fma_f64";	 // "v_fma_f64_e64"
            return;
          }
          break;
        case 'l':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'e':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "rp_u8_e64", 9) != 0)
              break;
            Mnemonic = "v_lerp_u8";	 // "v_lerp_u8_e64"
            return;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "g_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_log_f16";	 // "v_log_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_log_f32";	 // "v_log_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 25 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 13 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mac_f32_e64"
                  Mnemonic = "v_mac_f32";
                return;
              }
              break;
            case 'd':	 // 4 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_f16";	 // "v_mad_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_f32";	 // "v_mad_f32_e64"
                  return;
                }
                break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+7, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_mad_i16";	 // "v_mad_i16_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+7, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_mad_u16";	 // "v_mad_u16_e64"
                return;
              }
              break;
            case 'x':	 // 7 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 3 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_f32_e64"
                    Mnemonic = "v_max_f32";
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_f64";	 // "v_max_f64_e64"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_i32_e64"
                    Mnemonic = "v_max_i32";
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_u32_e64"
                    Mnemonic = "v_max_u32";
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_f32_e64"
                  Mnemonic = "v_min_f32";
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_f64";	 // "v_min_f64_e64"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_i32_e64"
                  Mnemonic = "v_min_i32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_u32_e64"
                  Mnemonic = "v_min_u32";
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_e64", 9) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_e64"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ad_u8_e64", 9) != 0)
              break;
            Mnemonic = "v_msad_u8";	 // "v_msad_u8_e64"
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_f32_e64"
                Mnemonic = "v_mul_f32";
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_mul_f64";	 // "v_mul_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_e64", 10) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_e64"
          return;
        case 'o':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "r3_b32_e64", 10) != 0)
            break;
          Mnemonic = "v_or3_b32";	 // "v_or3_b32_e64"
          return;
        case 'r':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_rcp_f64";	 // "v_rcp_f64_e64"
              return;
            }
            break;
          case 's':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_f64";	 // "v_rsq_f64_e64"
              return;
            }
            break;
          }
          break;
        case 's':	 // 10 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_u", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_sad_u16";	 // "v_sad_u16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_sad_u32";	 // "v_sad_u32_e64"
              return;
            }
            break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_e64"
              return;
            }
            break;
          case 'u':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_f32_e64"
                  Mnemonic = "v_sub_f32";
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_sub_i16";	 // "v_sub_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_i32_e64"
                  Mnemonic = "v_sub_i32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_sub_u16";	 // "v_sub_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_u32_e64"
                  Mnemonic = "v_sub_u32";
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'x':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_u32_e64", 9) != 0)
              break;
            Mnemonic = "v_xad_u32";	 // "v_xad_u32_e64"
            return;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "r_b32_e64", 9) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_xor_b32_e64"
              Mnemonic = "v_xor_b32";
            return;
          }
          break;
        }
        break;
      case 14:	 // 39 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 2 strings to match.
            if (Mnemonic[4] != 'd')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "_u32_e64", 8) != 0)
                break;
              Mnemonic = "v_add3_u32";	 // "v_add3_u32_e64"
              return;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "_u32_e64", 8) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_addc_u32_e64"
                Mnemonic = "v_addc_u32";
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "hr_i", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_ashr_i32_e64"
                Mnemonic = "v_ashr_i32";
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_ashr_i64_e64"
                Mnemonic = "v_ashr_i64";
              return;
            }
            break;
          }
          break;
        case 'c':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_ceil_f64";	 // "v_ceil_f64_e64"
            return;
          }
          break;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'f':	 // 3 strings to match.
            if (Mnemonic[4] != 'b')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_e64"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "_b32_e64", 8) != 0)
                break;
              Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_e64"
              return;
            }
            break;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ac_f32_e64", 10) != 0)
              break;
            Mnemonic = "v_fmac_f32";	 // "v_fmac_f32_e64"
            return;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "_b", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshl_b32_e64"
                Mnemonic = "v_lshl_b32";
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshl_b64_e64"
                Mnemonic = "v_lshl_b64";
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "_b", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshr_b32_e64"
                Mnemonic = "v_lshr_b32";
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshr_b64_e64"
                Mnemonic = "v_lshr_b64";
              return;
            }
            break;
          }
          break;
        case 'm':	 // 18 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "x3_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_max3_f16";	 // "v_max3_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_max3_f32";	 // "v_max3_f32_e64"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_max3_i16";	 // "v_max3_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_max3_i32";	 // "v_max3_i32_e64"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_max3_u16";	 // "v_max3_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_max3_u32";	 // "v_max3_u32_e64"
                return;
              }
              break;
            }
            break;
          case 'e':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "d3_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_med3_f16";	 // "v_med3_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_med3_f32";	 // "v_med3_f32_e64"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_med3_i16";	 // "v_med3_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_med3_i32";	 // "v_med3_i32_e64"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_med3_u16";	 // "v_med3_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_med3_u32";	 // "v_med3_u32_e64"
                return;
              }
              break;
            }
            break;
          case 'i':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "n3_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min3_f16";	 // "v_min3_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_min3_f32";	 // "v_min3_f32_e64"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min3_i16";	 // "v_min3_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_min3_i32";	 // "v_min3_i32_e64"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min3_u16";	 // "v_min3_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_min3_u32";	 // "v_min3_u32_e64"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'p':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "erm_b32_e64", 11) != 0)
            break;
          Mnemonic = "v_perm_b32";	 // "v_perm_b32_e64"
          return;
        case 's':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f64";	 // "v_sqrt_f64_e64"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_e64", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subb_u32_e64"
              Mnemonic = "v_subb_u32";
            return;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nor_b32_e64", 11) != 0)
            break;
          Mnemonic = "v_xnor_b32";	 // "v_xnor_b32_e64"
          return;
        }
        break;
      case 15:	 // 38 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_e64", 12) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_e64"
          return;
        case 'c':	 // 21 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 9 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'f':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_f16";	 // "v_cmp_f_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_f32";	 // "v_cmp_f_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_f64";	 // "v_cmp_f_f64_e64"
                return;
              }
              break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_i16";	 // "v_cmp_f_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_i32";	 // "v_cmp_f_i32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_i64";	 // "v_cmp_f_i64_e64"
                return;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_u16";	 // "v_cmp_f_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_u32";	 // "v_cmp_f_u32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_u64";	 // "v_cmp_f_u64_e64"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_o_f16";	 // "v_cmp_o_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_o_f32";	 // "v_cmp_o_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_o_f64";	 // "v_cmp_o_f64_e64"
              return;
            }
            break;
          case 't':	 // 6 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_i16";	 // "v_cmp_t_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_i32";	 // "v_cmp_t_i32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_i64";	 // "v_cmp_t_i64_e64"
                return;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_u16";	 // "v_cmp_t_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_u32";	 // "v_cmp_t_u32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_u64";	 // "v_cmp_t_u64_e64"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_u_f16";	 // "v_cmp_u_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_u_f32";	 // "v_cmp_u_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_u_f64";	 // "v_cmp_u_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_floor_f64";	 // "v_floor_f64_e64"
              return;
            }
            break;
          case 'r':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_fract_f64";	 // "v_fract_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_ldexp_f32_e64"
              Mnemonic = "v_ldexp_f32";
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f64";	 // "v_ldexp_f64_e64"
            return;
          }
          break;
        case 'r':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_rndne_f64";	 // "v_rndne_f64_e64"
            return;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ad_hi_u8_e64", 12) != 0)
            break;
          Mnemonic = "v_sad_hi_u8";	 // "v_sad_hi_u8_e64"
          return;
        case 't':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_trunc_f64";	 // "v_trunc_f64_e64"
            return;
          }
          break;
        }
        break;
      case 16:	 // 112 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nd_or_b32_e64", 13) != 0)
            break;
          Mnemonic = "v_and_or_b32";	 // "v_and_or_b32_e64"
          return;
        case 'c':	 // 85 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 81 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 54 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case 'e':	 // 9 strings to match.
                if (memcmp(Mnemonic.data()+7, "q_", 2) != 0)
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_f16";	 // "v_cmp_eq_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_f32";	 // "v_cmp_eq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_f64";	 // "v_cmp_eq_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_i16";	 // "v_cmp_eq_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_i32";	 // "v_cmp_eq_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_i64";	 // "v_cmp_eq_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_u16";	 // "v_cmp_eq_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_u32";	 // "v_cmp_eq_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_u64";	 // "v_cmp_eq_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 18 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_f16";	 // "v_cmp_ge_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_f32";	 // "v_cmp_ge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_f64";	 // "v_cmp_ge_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_i16";	 // "v_cmp_ge_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_i32";	 // "v_cmp_ge_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_i64";	 // "v_cmp_ge_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_u16";	 // "v_cmp_ge_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_u32";	 // "v_cmp_ge_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_u64";	 // "v_cmp_ge_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_f16";	 // "v_cmp_gt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_f32";	 // "v_cmp_gt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_f64";	 // "v_cmp_gt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_i16";	 // "v_cmp_gt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_i32";	 // "v_cmp_gt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_i64";	 // "v_cmp_gt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_u16";	 // "v_cmp_gt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_u32";	 // "v_cmp_gt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_u64";	 // "v_cmp_gt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'l':	 // 21 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_f16";	 // "v_cmp_le_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_f32";	 // "v_cmp_le_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_f64";	 // "v_cmp_le_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_i16";	 // "v_cmp_le_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_i32";	 // "v_cmp_le_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_i64";	 // "v_cmp_le_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_u16";	 // "v_cmp_le_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_u32";	 // "v_cmp_le_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_u64";	 // "v_cmp_le_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'g':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_lg_f16";	 // "v_cmp_lg_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_lg_f32";	 // "v_cmp_lg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_lg_f64";	 // "v_cmp_lg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_f16";	 // "v_cmp_lt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_f32";	 // "v_cmp_lt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_f64";	 // "v_cmp_lt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_i16";	 // "v_cmp_lt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_i32";	 // "v_cmp_lt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_i64";	 // "v_cmp_lt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_u16";	 // "v_cmp_lt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_u32";	 // "v_cmp_lt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_u64";	 // "v_cmp_lt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'n':	 // 6 strings to match.
                if (memcmp(Mnemonic.data()+7, "e_", 2) != 0)
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_i16";	 // "v_cmp_ne_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_i32";	 // "v_cmp_ne_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_i64";	 // "v_cmp_ne_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_u16";	 // "v_cmp_ne_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_u32";	 // "v_cmp_ne_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_u64";	 // "v_cmp_ne_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 's':	 // 6 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'f':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_f_f32";	 // "v_cmps_f_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_f_f64";	 // "v_cmps_f_f64_e64"
                  return;
                }
                break;
              case 'o':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_o_f32";	 // "v_cmps_o_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_o_f64";	 // "v_cmps_o_f64_e64"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_u_f32";	 // "v_cmps_u_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_u_f64";	 // "v_cmps_u_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 'x':	 // 21 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'f':	 // 9 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_f16";	 // "v_cmpx_f_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_f32";	 // "v_cmpx_f_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_f64";	 // "v_cmpx_f_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_i16";	 // "v_cmpx_f_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_i32";	 // "v_cmpx_f_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_i64";	 // "v_cmpx_f_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_u16";	 // "v_cmpx_f_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_u32";	 // "v_cmpx_f_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_u64";	 // "v_cmpx_f_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'o':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_o_f16";	 // "v_cmpx_o_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_o_f32";	 // "v_cmpx_o_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_o_f64";	 // "v_cmpx_o_f64_e64"
                  return;
                }
                break;
              case 't':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_i16";	 // "v_cmpx_t_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_i32";	 // "v_cmpx_t_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_i64";	 // "v_cmpx_t_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_u16";	 // "v_cmpx_t_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_u32";	 // "v_cmpx_t_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_u64";	 // "v_cmpx_t_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'u':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_u_f16";	 // "v_cmpx_u_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_u_f32";	 // "v_cmpx_u_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_u_f64";	 // "v_cmpx_u_f64_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'u':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "be", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "d_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubeid_f32";	 // "v_cubeid_f32_e64"
              return;
            case 'm':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "a_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubema_f32";	 // "v_cubema_f32_e64"
              return;
            case 's':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "c_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubesc_f32";	 // "v_cubesc_f32_e64"
              return;
            case 't':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "c_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubetc_f32";	 // "v_cubetc_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 6 strings to match.
          if (memcmp(Mnemonic.data()+3, "ul", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '_':	 // 5 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_mul_hi_i32";	 // "v_mul_hi_i32_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_mul_hi_u32";	 // "v_mul_hi_u32_e64"
                return;
              }
              break;
            case 'l':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+7, "o_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_mul_lo_i32";	 // "v_mul_lo_i32_e64"
                return;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mul_lo_u32";	 // "v_mul_lo_u32_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "it_f32_e64", 10) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_mullit_f32_e64"
              Mnemonic = "v_mullit_f32";
            return;
          }
          break;
        case 'p':	 // 15 strings to match.
          if (memcmp(Mnemonic.data()+3, "k_", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'a':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+6, "dd_", 3) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_pk_add_f16";	 // "v_pk_add_f16_e64"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_pk_add_i16";	 // "v_pk_add_i16_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_pk_add_u16";	 // "v_pk_add_u16_e64"
              return;
            }
            break;
          case 'f':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "ma_f16_e64", 10) != 0)
              break;
            Mnemonic = "v_pk_fma_f16";	 // "v_pk_fma_f16_e64"
            return;
          case 'm':	 // 9 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case 'a':	 // 5 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'd':	 // 2 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_pk_mad_i16";	 // "v_pk_mad_i16_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_pk_mad_u16";	 // "v_pk_mad_u16_e64"
                  return;
                }
                break;
              case 'x':	 // 3 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_pk_max_f16";	 // "v_pk_max_f16_e64"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_pk_max_i16";	 // "v_pk_max_i16_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_pk_max_u16";	 // "v_pk_max_u16_e64"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+7, "n_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'f':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_pk_min_f16";	 // "v_pk_min_f16_e64"
                return;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_pk_min_i16";	 // "v_pk_min_i16_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_pk_min_u16";	 // "v_pk_min_u16_e64"
                return;
              }
              break;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "l_f16_e64", 9) != 0)
                break;
              Mnemonic = "v_pk_mul_f16";	 // "v_pk_mul_f16_e64"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "ub_", 3) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_pk_sub_i16";	 // "v_pk_sub_i16_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_pk_sub_u16";	 // "v_pk_sub_u16_e64"
              return;
            }
            break;
          }
          break;
        case 's':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_f32_e64"
                Mnemonic = "v_subrev_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_i32_e64"
              Mnemonic = "v_subrev_i32";
            return;
          case 'u':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_u32_e64"
                Mnemonic = "v_subrev_u32";
              return;
            }
            break;
          }
          break;
        }
        break;
      case 17:	 // 138 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_ashrrev_i32_e64"
              Mnemonic = "v_ashrrev_i32";
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i64";	 // "v_ashrrev_i64_e64"
            return;
          }
          break;
        case 'c':	 // 110 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 93 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 21 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case 'n':	 // 18 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+8, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f16";	 // "v_cmp_neq_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f32";	 // "v_cmp_neq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f64";	 // "v_cmp_neq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 6 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f16";	 // "v_cmp_nge_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f32";	 // "v_cmp_nge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f64";	 // "v_cmp_nge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f16";	 // "v_cmp_ngt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f32";	 // "v_cmp_ngt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f64";	 // "v_cmp_ngt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 9 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f16";	 // "v_cmp_nle_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f32";	 // "v_cmp_nle_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f64";	 // "v_cmp_nle_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f16";	 // "v_cmp_nlg_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f32";	 // "v_cmp_nlg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f64";	 // "v_cmp_nlg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f16";	 // "v_cmp_nlt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f32";	 // "v_cmp_nlt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f64";	 // "v_cmp_nlt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+7, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f16";	 // "v_cmp_tru_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f32";	 // "v_cmp_tru_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f64";	 // "v_cmp_tru_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 's':	 // 18 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case '_':	 // 12 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+8, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_eq_f32";	 // "v_cmps_eq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_eq_f64";	 // "v_cmps_eq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ge_f32";	 // "v_cmps_ge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ge_f64";	 // "v_cmps_ge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_gt_f32";	 // "v_cmps_gt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_gt_f64";	 // "v_cmps_gt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_le_f32";	 // "v_cmps_le_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_le_f64";	 // "v_cmps_le_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lg_f32";	 // "v_cmps_lg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lg_f64";	 // "v_cmps_lg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lt_f32";	 // "v_cmps_lt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lt_f64";	 // "v_cmps_lt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'x':	 // 6 strings to match.
                if (Mnemonic[7] != '_')
                  break;
                switch (Mnemonic[8]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_f_f32";	 // "v_cmpsx_f_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_f_f64";	 // "v_cmpsx_f_f64_e64"
                    return;
                  }
                  break;
                case 'o':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_o_f32";	 // "v_cmpsx_o_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_o_f64";	 // "v_cmpsx_o_f64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_u_f32";	 // "v_cmpsx_u_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_u_f64";	 // "v_cmpsx_u_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 'x':	 // 54 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 9 strings to match.
                if (memcmp(Mnemonic.data()+8, "q_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f16";	 // "v_cmpx_eq_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f32";	 // "v_cmpx_eq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f64";	 // "v_cmpx_eq_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i16";	 // "v_cmpx_eq_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i32";	 // "v_cmpx_eq_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i64";	 // "v_cmpx_eq_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u16";	 // "v_cmpx_eq_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u32";	 // "v_cmpx_eq_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u64";	 // "v_cmpx_eq_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 18 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f16";	 // "v_cmpx_ge_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f32";	 // "v_cmpx_ge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f64";	 // "v_cmpx_ge_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i16";	 // "v_cmpx_ge_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i32";	 // "v_cmpx_ge_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i64";	 // "v_cmpx_ge_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u16";	 // "v_cmpx_ge_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u32";	 // "v_cmpx_ge_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u64";	 // "v_cmpx_ge_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f16";	 // "v_cmpx_gt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f32";	 // "v_cmpx_gt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f64";	 // "v_cmpx_gt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i16";	 // "v_cmpx_gt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i32";	 // "v_cmpx_gt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i64";	 // "v_cmpx_gt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u16";	 // "v_cmpx_gt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u32";	 // "v_cmpx_gt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u64";	 // "v_cmpx_gt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'l':	 // 21 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f16";	 // "v_cmpx_le_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f32";	 // "v_cmpx_le_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f64";	 // "v_cmpx_le_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i16";	 // "v_cmpx_le_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i32";	 // "v_cmpx_le_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i64";	 // "v_cmpx_le_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u16";	 // "v_cmpx_le_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u32";	 // "v_cmpx_le_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u64";	 // "v_cmpx_le_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'g':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f16";	 // "v_cmpx_lg_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f32";	 // "v_cmpx_lg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f64";	 // "v_cmpx_lg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f16";	 // "v_cmpx_lt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f32";	 // "v_cmpx_lt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f64";	 // "v_cmpx_lt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i16";	 // "v_cmpx_lt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i32";	 // "v_cmpx_lt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i64";	 // "v_cmpx_lt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u16";	 // "v_cmpx_lt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u32";	 // "v_cmpx_lt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u64";	 // "v_cmpx_lt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'n':	 // 6 strings to match.
                if (memcmp(Mnemonic.data()+8, "e_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i16";	 // "v_cmpx_ne_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i32";	 // "v_cmpx_ne_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i64";	 // "v_cmpx_ne_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u16";	 // "v_cmpx_ne_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u32";	 // "v_cmpx_ne_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u64";	 // "v_cmpx_ne_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dmask_b32_e64", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cndmask_b32_e64"
              Mnemonic = "v_cndmask_b32";
            return;
          case 'v':	 // 16 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 10 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_e64"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_e64"
                  return;
                }
                break;
              case '3':	 // 4 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f64";	 // "v_cvt_f32_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_e64"
                  return;
                }
                break;
              case '6':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "4_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_f32";	 // "v_cvt_f64_f32_e64"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_i32";	 // "v_cvt_f64_i32_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_u32";	 // "v_cvt_f64_u32_e64"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e64", 9) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_e64"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f64";	 // "v_cvt_i32_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e64", 9) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_e64"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f64";	 // "v_cvt_u32_f64_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          }
          break;
        case 'd':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "ot", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '4':	 // 2 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_i8_e64", 9) != 0)
                break;
              Mnemonic = "v_dot4_i32_i8";	 // "v_dot4_i32_i8_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_u8_e64", 9) != 0)
                break;
              Mnemonic = "v_dot4_u32_u8";	 // "v_dot4_u32_u8_e64"
              return;
            }
            break;
          case '8':	 // 2 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_i4_e64", 9) != 0)
                break;
              Mnemonic = "v_dot8_i32_i4";	 // "v_dot8_i32_i4_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_u4_e64", 9) != 0)
                break;
              Mnemonic = "v_dot8_u32_u4";	 // "v_dot8_u32_u4_e64"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ma_mix_f32_e64", 14) != 0)
            break;
          Mnemonic = "v_fma_mix_f32";	 // "v_fma_mix_f32_e64"
          return;
        case 'l':	 // 7 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 4 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case '_':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "or_b32_e64", 10) != 0)
                break;
              Mnemonic = "v_lshl_or_b32";	 // "v_lshl_or_b32_e64"
              return;
            case 'r':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+7, "ev_b", 4) != 0)
                break;
              switch (Mnemonic[11]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshlrev_b32_e64"
                  Mnemonic = "v_lshlrev_b32";
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_lshlrev_b64";	 // "v_lshlrev_b64_e64"
                return;
              }
              break;
            }
            break;
          case 'r':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshrrev_b32_e64"
                Mnemonic = "v_lshrrev_b32";
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b64";	 // "v_lshrrev_b64_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 12 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_i", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_i32_i16";	 // "v_mad_i32_i16_e64"
                  return;
                case '2':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_i32_i24";	 // "v_mad_i32_i24_e64"
                  return;
                }
                break;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_i32_e64", 9) != 0)
                  break;
                Mnemonic = "v_mad_i64_i32";	 // "v_mad_i64_i32_e64"
                return;
              }
              break;
            case 'm':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "ix_f32_e64", 10) != 0)
                break;
              Mnemonic = "v_mad_mix_f32";	 // "v_mad_mix_f32_e64"
              return;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_u", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_u32_u16";	 // "v_mad_u32_u16_e64"
                  return;
                case '2':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_u32_u24";	 // "v_mad_u32_u24_e64"
                  return;
                }
                break;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_u32_e64", 9) != 0)
                  break;
                Mnemonic = "v_mad_u64_u32";	 // "v_mad_u64_u32_e64"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 3 strings to match.
            if (Mnemonic[4] != 'v')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "fed_b32_e64", 11) != 0)
                break;
              Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_e64"
              return;
            case 'r':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+6, "el", 2) != 0)
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'd':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e64", 8) != 0)
                  break;
                Mnemonic = "v_movreld_b32";	 // "v_movreld_b32_e64"
                return;
              case 's':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e64", 8) != 0)
                  break;
                Mnemonic = "v_movrels_b32";	 // "v_movrels_b32_e64"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_e64", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_i32_i24_e64"
                Mnemonic = "v_mul_i32_i24";
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_e64", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_u32_u24_e64"
                Mnemonic = "v_mul_u32_u24";
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_e64", 14) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subbrev_u32_e64"
            Mnemonic = "v_subbrev_u32";
          return;
        }
        break;
      case 18:	 // 65 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_gfx9_e64", 11) != 0)
                break;
              Mnemonic = "v_add_i32_gfx9";	 // "v_add_i32_gfx9_e64"
              return;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "shl_u32_e64", 11) != 0)
                break;
              Mnemonic = "v_add_lshl_u32";	 // "v_add_lshl_u32_e64"
              return;
            }
            break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ignbit_b32_e64", 14) != 0)
              break;
            Mnemonic = "v_alignbit_b32";	 // "v_alignbit_b32_e64"
            return;
          }
          break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "cnt_u32_b32_e64", 15) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_bcnt_u32_b32_e64"
            Mnemonic = "v_bcnt_u32_b32";
          return;
        case 'c':	 // 47 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 's':	 // 26 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case '_':	 // 14 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'n':	 // 12 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_neq_f32";	 // "v_cmps_neq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_neq_f64";	 // "v_cmps_neq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nge_f32";	 // "v_cmps_nge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nge_f64";	 // "v_cmps_nge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ngt_f32";	 // "v_cmps_ngt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ngt_f64";	 // "v_cmps_ngt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nle_f32";	 // "v_cmps_nle_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nle_f64";	 // "v_cmps_nle_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlg_f32";	 // "v_cmps_nlg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlg_f64";	 // "v_cmps_nlg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlt_f32";	 // "v_cmps_nlt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlt_f64";	 // "v_cmps_nlt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_tru_f32";	 // "v_cmps_tru_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_tru_f64";	 // "v_cmps_tru_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 'x':	 // 12 strings to match.
              if (Mnemonic[7] != '_')
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_eq_f32";	 // "v_cmpsx_eq_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_eq_f64";	 // "v_cmpsx_eq_f64_e64"
                  return;
                }
                break;
              case 'g':	 // 4 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_ge_f32";	 // "v_cmpsx_ge_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_ge_f64";	 // "v_cmpsx_ge_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_gt_f32";	 // "v_cmpsx_gt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_gt_f64";	 // "v_cmpsx_gt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'l':	 // 6 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_le_f32";	 // "v_cmpsx_le_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_le_f64";	 // "v_cmpsx_le_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lg_f32";	 // "v_cmpsx_lg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lg_f64";	 // "v_cmpsx_lg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lt_f32";	 // "v_cmpsx_lt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lt_f64";	 // "v_cmpsx_lt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          case 'x':	 // 21 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'n':	 // 18 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f16";	 // "v_cmpx_neq_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f32";	 // "v_cmpx_neq_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f64";	 // "v_cmpx_neq_f64_e64"
                  return;
                }
                break;
              case 'g':	 // 6 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f16";	 // "v_cmpx_nge_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f32";	 // "v_cmpx_nge_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f64";	 // "v_cmpx_nge_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f16";	 // "v_cmpx_ngt_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f32";	 // "v_cmpx_ngt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f64";	 // "v_cmpx_ngt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'l':	 // 9 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f16";	 // "v_cmpx_nle_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f32";	 // "v_cmpx_nle_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f64";	 // "v_cmpx_nle_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f16";	 // "v_cmpx_nlg_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f32";	 // "v_cmpx_nlg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f64";	 // "v_cmpx_nlg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f16";	 // "v_cmpx_nlt_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f32";	 // "v_cmpx_nlt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f64";	 // "v_cmpx_nlt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 't':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+8, "ru_f", 4) != 0)
                break;
              switch (Mnemonic[12]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f16";	 // "v_cmpx_tru_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f32";	 // "v_cmpx_tru_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f64";	 // "v_cmpx_tru_f64_e64"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'd':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "v_fmas_f", 8) != 0)
              break;
            switch (Mnemonic[12]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fmas_f32";	 // "v_div_fmas_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fmas_f64";	 // "v_div_fmas_f64_e64"
              return;
            }
            break;
          case 'o':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "t2_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_f16_e64", 10) != 0)
                break;
              Mnemonic = "v_dot2_f32_f16";	 // "v_dot2_f32_f16_e64"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_i16_e64", 10) != 0)
                break;
              Mnemonic = "v_dot2_i32_i16";	 // "v_dot2_i32_i16_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_u16_e64", 10) != 0)
                break;
              Mnemonic = "v_dot2_u32_u16";	 // "v_dot2_u32_u16_e64"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ma_f16_gfx9_e64", 15) != 0)
            break;
          if ((Features & (Feature_Has16BitInsts|Feature_isGFX9)) == (Feature_Has16BitInsts|Feature_isGFX9))	 // "v_fma_f16_gfx9_e64"
            Mnemonic = "v_fma_f16_gfx9";
          return;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "shl_add_u32_e64", 15) != 0)
            break;
          Mnemonic = "v_lshl_add_u32";	 // "v_lshl_add_u32_e64"
          return;
        case 'm':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_gfx9_e64", 11) != 0)
                break;
              Mnemonic = "v_mad_f16_gfx9";	 // "v_mad_f16_gfx9_e64"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_gfx9_e64", 11) != 0)
                break;
              Mnemonic = "v_mad_i16_gfx9";	 // "v_mad_i16_gfx9_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_gfx9_e64", 11) != 0)
                break;
              Mnemonic = "v_mad_u16_gfx9";	 // "v_mad_u16_gfx9_e64"
              return;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "vrelsd_b32_e64", 14) != 0)
              break;
            Mnemonic = "v_movrelsd_b32";	 // "v_movrelsd_b32_e64"
            return;
          case 'q':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "sad_u32_u8_e64", 14) != 0)
              break;
            Mnemonic = "v_mqsad_u32_u8";	 // "v_mqsad_u32_u8_e64"
            return;
          }
          break;
        case 'p':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ack_b32_f16_e64", 15) != 0)
            break;
          Mnemonic = "v_pack_b32_f16";	 // "v_pack_b32_f16_e64"
          return;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ub_i32_gfx9_e64", 15) != 0)
            break;
          Mnemonic = "v_sub_i32_gfx9";	 // "v_sub_i32_gfx9_e64"
          return;
        }
        break;
      case 19:	 // 39 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "lignbyte_b32_e64", 16) != 0)
            break;
          Mnemonic = "v_alignbyte_b32";	 // "v_alignbyte_b32_e64"
          return;
        case 'c':	 // 18 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 17 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+6, "class_f", 7) != 0)
                break;
              switch (Mnemonic[13]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_class_f16";	 // "v_cmp_class_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_class_f32";	 // "v_cmp_class_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_class_f64";	 // "v_cmp_class_f64_e64"
                return;
              }
              break;
            case 's':	 // 14 strings to match.
              if (memcmp(Mnemonic.data()+6, "x_", 2) != 0)
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'n':	 // 12 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[13]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_neq_f32";	 // "v_cmpsx_neq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_neq_f64";	 // "v_cmpsx_neq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nge_f32";	 // "v_cmpsx_nge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nge_f64";	 // "v_cmpsx_nge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_ngt_f32";	 // "v_cmpsx_ngt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_ngt_f64";	 // "v_cmpsx_ngt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nle_f32";	 // "v_cmpsx_nle_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nle_f64";	 // "v_cmpsx_nle_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlg_f32";	 // "v_cmpsx_nlg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlg_f64";	 // "v_cmpsx_nlg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlt_f32";	 // "v_cmpsx_nlt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlt_f64";	 // "v_cmpsx_nlt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+9, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[13]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_tru_f32";	 // "v_cmpsx_tru_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_tru_f64";	 // "v_cmpsx_tru_f64_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'v':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "t_pk_u8_f32_e64", 15) != 0)
              break;
            Mnemonic = "v_cvt_pk_u8_f32";	 // "v_cvt_pk_u8_f32_e64"
            return;
          }
          break;
        case 'd':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "iv_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+7, "ixup_f", 6) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "6_e64", 5) != 0)
                break;
              if ((Features & (Feature_Has16BitInsts|Feature_isVIOnly)) == (Feature_Has16BitInsts|Feature_isVIOnly))	 // "v_div_fixup_f16_e64"
                Mnemonic = "v_div_fixup_f16";
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fixup_f32";	 // "v_div_fixup_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fixup_f64";	 // "v_div_fixup_f64_e64"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "cale_f", 6) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_div_scale_f32";	 // "v_div_scale_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_div_scale_f64";	 // "v_div_scale_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "ma_mix", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'h':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "i_f16_e64", 9) != 0)
              break;
            Mnemonic = "v_fma_mixhi_f16";	 // "v_fma_mixhi_f16_e64"
            return;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "o_f16_e64", 9) != 0)
              break;
            Mnemonic = "v_fma_mixlo_f16";	 // "v_fma_mixlo_f16_e64"
            return;
          }
          break;
        case 'i':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "nterp_p", 7) != 0)
            break;
          switch (Mnemonic[10]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+11, "_f32_e64", 8) != 0)
              break;
            Mnemonic = "v_interp_p1_f32";	 // "v_interp_p1_f32_e64"
            return;
          case '2':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_interp_p2_f16";	 // "v_interp_p2_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_interp_p2_f32";	 // "v_interp_p2_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_e64", 16) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_e64"
          return;
        case 'm':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "ad_mix", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'h':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "i_f16_e64", 9) != 0)
              break;
            Mnemonic = "v_mad_mixhi_f16";	 // "v_mad_mixhi_f16_e64"
            return;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "o_f16_e64", 9) != 0)
              break;
            Mnemonic = "v_mad_mixlo_f16";	 // "v_mad_mixlo_f16_e64"
            return;
          }
          break;
        case 'p':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "k_mul_lo_u16_e64", 16) != 0)
            break;
          Mnemonic = "v_pk_mul_lo_u16";	 // "v_pk_mul_lo_u16_e64"
          return;
        case 'r':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f", 6) != 0)
                break;
              switch (Mnemonic[13]) {
              default: break;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f64";	 // "v_rcp_clamp_f64_e64"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_e64", 12) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_e64"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f", 9) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f64";	 // "v_rsq_clamp_f64_e64"
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "at_pk_u8_i16_e64", 16) != 0)
            break;
          Mnemonic = "v_sat_pk_u8_i16";	 // "v_sat_pk_u8_i16_e64"
          return;
        }
        break;
      case 20:	 // 30 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 10 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "px_class_f", 10) != 0)
              break;
            switch (Mnemonic[14]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cmpx_class_f16";	 // "v_cmpx_class_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cmpx_class_f32";	 // "v_cmpx_class_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_cmpx_class_f64";	 // "v_cmpx_class_f64_e64"
              return;
            }
            break;
          case 'v':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 4 strings to match.
              if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
                break;
              switch (Mnemonic[15]) {
              default: break;
              case '0':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_e64"
                return;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_e64"
                return;
              case '2':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_e64"
                return;
              }
              break;
            case 'o':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "ff_f32_i4_e64", 13) != 0)
                break;
              Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_e64"
              return;
            case 'p':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "k_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_i32_e64", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pk_i16_i32_e64"
                  Mnemonic = "v_cvt_pk_i16_i32";
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_u32_e64", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pk_u16_u32_e64"
                  Mnemonic = "v_cvt_pk_u16_u32";
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_e64", 17) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_e64"
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f64";	 // "v_frexp_mant_f64_e64"
            return;
          }
          break;
        case 'i':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nterp_mov_f32_e64", 17) != 0)
            break;
          Mnemonic = "v_interp_mov_f32";	 // "v_interp_mov_f32_e64"
          return;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_e64", 17) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_e64"
          return;
        case 'm':	 // 7 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 3 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e64", 15) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_mac_legacy_f32_e64"
                Mnemonic = "v_mac_legacy_f32";
              return;
            case 'd':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e64", 15) != 0)
                break;
              Mnemonic = "v_mad_legacy_f32";	 // "v_mad_legacy_f32_e64"
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e64", 15) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_max_legacy_f32_e64"
                Mnemonic = "v_max_legacy_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_e64", 16) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_min_legacy_f32_e64"
              Mnemonic = "v_min_legacy_f32";
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_e64", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_i32_i24_e64"
                  Mnemonic = "v_mul_hi_i32_i24";
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_e64", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_u32_u24_e64"
                  Mnemonic = "v_mul_hi_u32_u24";
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_e64", 13) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_legacy_f32_e64"
                Mnemonic = "v_mul_legacy_f32";
              return;
            }
            break;
          }
          break;
        case 'p':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "k_", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'a':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "shrrev_i16_e64", 14) != 0)
              break;
            Mnemonic = "v_pk_ashrrev_i16";	 // "v_pk_ashrrev_i16_e64"
            return;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "sh", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "rev_b16_e64", 11) != 0)
                break;
              Mnemonic = "v_pk_lshlrev_b16";	 // "v_pk_lshlrev_b16_e64"
              return;
            case 'r':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "rev_b16_e64", 11) != 0)
                break;
              Mnemonic = "v_pk_lshrrev_b16";	 // "v_pk_lshrrev_b16_e64"
              return;
            }
            break;
          }
          break;
        case 'q':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "sad_pk_u16_u8_e64", 17) != 0)
            break;
          Mnemonic = "v_qsad_pk_u16_u8";	 // "v_qsad_pk_u16_u8_e64"
          return;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_e64", 16) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_e64"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_e64", 16) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_e64"
            return;
          }
          break;
        case 't':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "rig_preop_f64_e64", 17) != 0)
            break;
          Mnemonic = "v_trig_preop_f64";	 // "v_trig_preop_f64_e64"
          return;
        }
        break;
      case 21:	 // 5 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "lr_i32_f32_e64", 14) != 0)
              break;
            Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_e64"
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "pi_i32_f32_e64", 14) != 0)
              break;
            Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_e64"
            return;
          }
          break;
        case 'i':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "nterp_p1l", 9) != 0)
            break;
          switch (Mnemonic[12]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+13, "_f16_e64", 8) != 0)
              break;
            Mnemonic = "v_interp_p1ll_f16";	 // "v_interp_p1ll_f16_e64"
            return;
          case 'v':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+13, "_f16_e64", 8) != 0)
              break;
            Mnemonic = "v_interp_p1lv_f16";	 // "v_interp_p1lv_f16_e64"
            return;
          }
          break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "qsad_pk_u16_u8_e64", 18) != 0)
            break;
          Mnemonic = "v_mqsad_pk_u16_u8";	 // "v_mqsad_pk_u16_u8_e64"
          return;
        }
        break;
      case 22:	 // 4 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_norm_", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "16_f16_e64", 10) != 0)
              break;
            Mnemonic = "v_cvt_norm_i16_f16";	 // "v_cvt_norm_i16_f16_e64"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "16_f16_e64", 10) != 0)
              break;
            Mnemonic = "v_cvt_norm_u16_f16";	 // "v_cvt_norm_u16_f16_e64"
            return;
          }
          break;
        case 'm':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "bcnt_", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case 'h':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "i_u32_b32_e64", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mbcnt_hi_u32_b32_e64"
              Mnemonic = "v_mbcnt_hi_u32_b32";
            return;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "o_u32_b32_e64", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mbcnt_lo_u32_b32_e64"
              Mnemonic = "v_mbcnt_lo_u32_b32";
            return;
          }
          break;
        }
        break;
      case 23:	 // 4 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "vt_pkrtz_f16_f32_e64", 20) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pkrtz_f16_f32_e64"
            Mnemonic = "v_cvt_pkrtz_f16_f32";
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_exp_i", 10) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "6_f16_e64", 9) != 0)
              break;
            Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_e64"
            return;
          case '3':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+14, "2_f", 3) != 0)
              break;
            switch (Mnemonic[17]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f64";	 // "v_frexp_exp_i32_f64_e64"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 24:	 // 7 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_pk", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case 'a':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "ccum_u8_f32_e64", 15) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pkaccum_u8_f32_e64"
              Mnemonic = "v_cvt_pkaccum_u8_f32";
            return;
          case 'n':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+9, "orm_", 4) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case 'i':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+14, "16_f", 4) != 0)
                break;
              switch (Mnemonic[18]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+19, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cvt_pknorm_i16_f16";	 // "v_cvt_pknorm_i16_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+19, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pknorm_i16_f32_e64"
                  Mnemonic = "v_cvt_pknorm_i16_f32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+14, "16_f", 4) != 0)
                break;
              switch (Mnemonic[18]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+19, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cvt_pknorm_u16_f16";	 // "v_cvt_pknorm_u16_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+19, "2_e64", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cvt_pknorm_u16_f32_e64"
                  Mnemonic = "v_cvt_pknorm_u16_f32";
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'd':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "iv_fixup_f16_gfx9_e64", 21) != 0)
            break;
          if ((Features & (Feature_Has16BitInsts|Feature_isGFX9)) == (Feature_Has16BitInsts|Feature_isGFX9))	 // "v_div_fixup_f16_gfx9_e64"
            Mnemonic = "v_div_fixup_f16_gfx9";
          return;
        case 'i':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nterp_p2_f16_gfx9_e64", 21) != 0)
            break;
          Mnemonic = "v_interp_p2_f16_gfx9";	 // "v_interp_p2_f16_gfx9_e64"
          return;
        }
        break;
      case 30:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_screen_partition_4se_b32_e64", 30) != 0)
          break;
        Mnemonic = "v_screen_partition_4se_b32";	 // "v_screen_partition_4se_b32_e64"
        return;
      }
    break;
    case 2:
      switch (Mnemonic.size()) {
      default: break;
      case 10:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_nop_sdwa", 10) != 0)
          break;
        Mnemonic = "v_nop";	 // "v_nop_sdwa"
        return;
      case 13:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_or_b32_sdwa", 13) != 0)
          break;
        if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_or_b32_sdwa"
          Mnemonic = "v_or_b32";
        return;
      case 14:	 // 42 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_f32_sdwa"
                  Mnemonic = "v_add_f32";
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_sdwa", 7) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_i32_sdwa"
                Mnemonic = "v_add_i32";
              return;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_add_u16";	 // "v_add_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_u32_sdwa"
                  Mnemonic = "v_add_u32";
                return;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_sdwa", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_and_b32_sdwa"
              Mnemonic = "v_and_b32";
            return;
          }
          break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "os_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_cos_f16";	 // "v_cos_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_cos_f32";	 // "v_cos_f32_sdwa"
            return;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_sdwa"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "og_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_log_f16";	 // "v_log_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_log_f32";	 // "v_log_f32_sdwa"
            return;
          }
          break;
        case 'm':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 8 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mac_f32_sdwa"
                  Mnemonic = "v_mac_f32";
                return;
              }
              break;
            case 'x':	 // 6 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_f32_sdwa"
                    Mnemonic = "v_max_f32";
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_i32_sdwa"
                    Mnemonic = "v_max_i32";
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_u32_sdwa"
                    Mnemonic = "v_max_u32";
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_f32_sdwa"
                  Mnemonic = "v_min_f32";
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_i32_sdwa"
                  Mnemonic = "v_min_i32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_u32_sdwa"
                  Mnemonic = "v_min_u32";
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_sdwa", 10) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_sdwa"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_f32_sdwa"
                Mnemonic = "v_mul_f32";
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_sdwa", 11) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_sdwa"
          return;
        case 'r':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_sdwa"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 's':	 // 7 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_sdwa"
              return;
            }
            break;
          case 'u':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_f32_sdwa"
                  Mnemonic = "v_sub_f32";
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_sdwa", 7) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_i32_sdwa"
                Mnemonic = "v_sub_i32";
              return;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_sub_u16";	 // "v_sub_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_u32_sdwa"
                  Mnemonic = "v_sub_u32";
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "or_b32_sdwa", 11) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_xor_b32_sdwa"
            Mnemonic = "v_xor_b32";
          return;
        }
        break;
      case 15:	 // 14 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dc_u32_sdwa", 11) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_addc_u32_sdwa"
              Mnemonic = "v_addc_u32";
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "hr_i32_sdwa", 11) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_ashr_i32_sdwa"
              Mnemonic = "v_ashr_i32";
            return;
          }
          break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_sdwa"
            return;
          }
          break;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'f':	 // 3 strings to match.
            if (Mnemonic[4] != 'b')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_sdwa", 7) != 0)
                  break;
                Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_sdwa"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_sdwa", 7) != 0)
                  break;
                Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_sdwa"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "_b32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_sdwa"
              return;
            }
            break;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ac_f32_sdwa", 11) != 0)
              break;
            Mnemonic = "v_fmac_f32";	 // "v_fmac_f32_sdwa"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_sdwa", 9) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshl_b32_sdwa"
              Mnemonic = "v_lshl_b32";
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_sdwa", 9) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshr_b32_sdwa"
              Mnemonic = "v_lshr_b32";
            return;
          }
          break;
        case 's':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_sdwa"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_sdwa", 11) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subb_u32_sdwa"
              Mnemonic = "v_subb_u32";
            return;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nor_b32_sdwa", 12) != 0)
            break;
          Mnemonic = "v_xnor_b32";	 // "v_xnor_b32_sdwa"
          return;
        }
        break;
      case 16:	 // 24 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_sdwa", 13) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_sdwa"
          return;
        case 'c':	 // 14 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 6 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_f16";	 // "v_cmp_f_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_f32";	 // "v_cmp_f_f32_sdwa"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_i16";	 // "v_cmp_f_i16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_i32";	 // "v_cmp_f_i32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_u16";	 // "v_cmp_f_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_u32";	 // "v_cmp_f_u32_sdwa"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_o_f16";	 // "v_cmp_o_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_o_f32";	 // "v_cmp_o_f32_sdwa"
              return;
            }
            break;
          case 't':	 // 4 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_i16";	 // "v_cmp_t_i16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_i32";	 // "v_cmp_t_i32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_u16";	 // "v_cmp_t_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_u32";	 // "v_cmp_t_u32_sdwa"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_u_f16";	 // "v_cmp_u_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_u_f32";	 // "v_cmp_u_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_sdwa"
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f16_sdwa", 13) != 0)
            break;
          Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_sdwa"
          return;
        case 'r':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_sdwa"
            return;
          }
          break;
        case 't':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_sdwa"
            return;
          }
          break;
        }
        break;
      case 17:	 // 59 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 53 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '_':	 // 36 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case 'e':	 // 6 strings to match.
              if (memcmp(Mnemonic.data()+7, "q_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_f16";	 // "v_cmp_eq_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_f32";	 // "v_cmp_eq_f32_sdwa"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_i16";	 // "v_cmp_eq_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_i32";	 // "v_cmp_eq_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_u16";	 // "v_cmp_eq_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_u32";	 // "v_cmp_eq_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'g':	 // 12 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_f16";	 // "v_cmp_ge_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_f32";	 // "v_cmp_ge_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_i16";	 // "v_cmp_ge_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_i32";	 // "v_cmp_ge_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_u16";	 // "v_cmp_ge_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_u32";	 // "v_cmp_ge_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 't':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_f16";	 // "v_cmp_gt_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_f32";	 // "v_cmp_gt_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_i16";	 // "v_cmp_gt_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_i32";	 // "v_cmp_gt_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_u16";	 // "v_cmp_gt_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_u32";	 // "v_cmp_gt_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 'l':	 // 14 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_f16";	 // "v_cmp_le_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_f32";	 // "v_cmp_le_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_i16";	 // "v_cmp_le_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_i32";	 // "v_cmp_le_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_u16";	 // "v_cmp_le_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_u32";	 // "v_cmp_le_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_lg_f16";	 // "v_cmp_lg_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_lg_f32";	 // "v_cmp_lg_f32_sdwa"
                  return;
                }
                break;
              case 't':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_f16";	 // "v_cmp_lt_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_f32";	 // "v_cmp_lt_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_i16";	 // "v_cmp_lt_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_i32";	 // "v_cmp_lt_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_u16";	 // "v_cmp_lt_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_u32";	 // "v_cmp_lt_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 'n':	 // 4 strings to match.
              if (memcmp(Mnemonic.data()+7, "e_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_i16";	 // "v_cmp_ne_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_i32";	 // "v_cmp_ne_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_u16";	 // "v_cmp_ne_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_u32";	 // "v_cmp_ne_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 's':	 // 3 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "_f32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_cmps_f_f32";	 // "v_cmps_f_f32_sdwa"
              return;
            case 'o':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "_f32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_cmps_o_f32";	 // "v_cmps_o_f32_sdwa"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "_f32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_cmps_u_f32";	 // "v_cmps_u_f32_sdwa"
              return;
            }
            break;
          case 'x':	 // 14 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 6 strings to match.
              if (Mnemonic[8] != '_')
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_f16";	 // "v_cmpx_f_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_f32";	 // "v_cmpx_f_f32_sdwa"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_i16";	 // "v_cmpx_f_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_i32";	 // "v_cmpx_f_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_u16";	 // "v_cmpx_f_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_u32";	 // "v_cmpx_f_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'o':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                break;
              switch (Mnemonic[10]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_o_f16";	 // "v_cmpx_o_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_o_f32";	 // "v_cmpx_o_f32_sdwa"
                return;
              }
              break;
            case 't':	 // 4 strings to match.
              if (Mnemonic[8] != '_')
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_i16";	 // "v_cmpx_t_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_i32";	 // "v_cmpx_t_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_u16";	 // "v_cmpx_t_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_u32";	 // "v_cmpx_t_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'u':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                break;
              switch (Mnemonic[10]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_u_f16";	 // "v_cmpx_u_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_u_f32";	 // "v_cmpx_u_f32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ul_lo_u16_sdwa", 14) != 0)
            break;
          Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_sdwa"
          return;
        case 's':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_f32_sdwa"
                Mnemonic = "v_subrev_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_sdwa", 7) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_i32_sdwa"
              Mnemonic = "v_subrev_i32";
            return;
          case 'u':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_u32_sdwa"
                Mnemonic = "v_subrev_u32";
              return;
            }
            break;
          }
          break;
        }
        break;
      case 18:	 // 80 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_ashrrev_i32_sdwa"
              Mnemonic = "v_ashrrev_i32";
            return;
          }
          break;
        case 'c':	 // 70 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 59 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 14 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case 'n':	 // 12 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+8, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f16";	 // "v_cmp_neq_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f32";	 // "v_cmp_neq_f32_sdwa"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f16";	 // "v_cmp_nge_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f32";	 // "v_cmp_nge_f32_sdwa"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f16";	 // "v_cmp_ngt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f32";	 // "v_cmp_ngt_f32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f16";	 // "v_cmp_nle_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f32";	 // "v_cmp_nle_f32_sdwa"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f16";	 // "v_cmp_nlg_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f32";	 // "v_cmp_nlg_f32_sdwa"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f16";	 // "v_cmp_nlt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f32";	 // "v_cmp_nlt_f32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+7, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f16";	 // "v_cmp_tru_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f32";	 // "v_cmp_tru_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 's':	 // 9 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case '_':	 // 6 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "q_f32_sdwa", 10) != 0)
                    break;
                  Mnemonic = "v_cmps_eq_f32";	 // "v_cmps_eq_f32_sdwa"
                  return;
                case 'g':	 // 2 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_ge_f32";	 // "v_cmps_ge_f32_sdwa"
                    return;
                  case 't':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_gt_f32";	 // "v_cmps_gt_f32_sdwa"
                    return;
                  }
                  break;
                case 'l':	 // 3 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_le_f32";	 // "v_cmps_le_f32_sdwa"
                    return;
                  case 'g':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_lg_f32";	 // "v_cmps_lg_f32_sdwa"
                    return;
                  case 't':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_lt_f32";	 // "v_cmps_lt_f32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'x':	 // 3 strings to match.
                if (Mnemonic[7] != '_')
                  break;
                switch (Mnemonic[8]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_f_f32";	 // "v_cmpsx_f_f32_sdwa"
                  return;
                case 'o':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_o_f32";	 // "v_cmpsx_o_f32_sdwa"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_u_f32";	 // "v_cmpsx_u_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'x':	 // 36 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 6 strings to match.
                if (memcmp(Mnemonic.data()+8, "q_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f16";	 // "v_cmpx_eq_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f32";	 // "v_cmpx_eq_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i16";	 // "v_cmpx_eq_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i32";	 // "v_cmpx_eq_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u16";	 // "v_cmpx_eq_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u32";	 // "v_cmpx_eq_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 12 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f16";	 // "v_cmpx_ge_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f32";	 // "v_cmpx_ge_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i16";	 // "v_cmpx_ge_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i32";	 // "v_cmpx_ge_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u16";	 // "v_cmpx_ge_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u32";	 // "v_cmpx_ge_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                case 't':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f16";	 // "v_cmpx_gt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f32";	 // "v_cmpx_gt_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i16";	 // "v_cmpx_gt_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i32";	 // "v_cmpx_gt_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u16";	 // "v_cmpx_gt_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u32";	 // "v_cmpx_gt_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'l':	 // 14 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f16";	 // "v_cmpx_le_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f32";	 // "v_cmpx_le_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i16";	 // "v_cmpx_le_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i32";	 // "v_cmpx_le_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u16";	 // "v_cmpx_le_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u32";	 // "v_cmpx_le_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                case 'g':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f16";	 // "v_cmpx_lg_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f32";	 // "v_cmpx_lg_f32_sdwa"
                    return;
                  }
                  break;
                case 't':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f16";	 // "v_cmpx_lt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f32";	 // "v_cmpx_lt_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i16";	 // "v_cmpx_lt_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i32";	 // "v_cmpx_lt_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u16";	 // "v_cmpx_lt_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u32";	 // "v_cmpx_lt_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'n':	 // 4 strings to match.
                if (memcmp(Mnemonic.data()+8, "e_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i16";	 // "v_cmpx_ne_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i32";	 // "v_cmpx_ne_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u16";	 // "v_cmpx_ne_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u32";	 // "v_cmpx_ne_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dmask_b32_sdwa", 14) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cndmask_b32_sdwa"
              Mnemonic = "v_cndmask_b32";
            return;
          case 'v':	 // 10 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 6 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_sdwa"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_sdwa"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_sdwa"
                  return;
                }
                break;
              case '3':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_sdwa"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_sdwa"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshlrev_b32_sdwa"
                Mnemonic = "v_lshlrev_b32";
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshrrev_b32_sdwa"
                Mnemonic = "v_lshrrev_b32";
              return;
            }
            break;
          }
          break;
        case 'm':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_fed_b32_sdwa", 14) != 0)
              break;
            Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_sdwa"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_sdwa", 11) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_i32_i24_sdwa"
                Mnemonic = "v_mul_i32_i24";
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_sdwa", 11) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_u32_u24_sdwa"
                Mnemonic = "v_mul_u32_u24";
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_sdwa", 15) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subbrev_u32_sdwa"
            Mnemonic = "v_subbrev_u32";
          return;
        }
        break;
      case 19:	 // 27 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cmp", 5) != 0)
          break;
        switch (Mnemonic[5]) {
        default: break;
        case 's':	 // 13 strings to match.
          switch (Mnemonic[6]) {
          default: break;
          case '_':	 // 7 strings to match.
            switch (Mnemonic[7]) {
            default: break;
            case 'n':	 // 6 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "q_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cmps_neq_f32";	 // "v_cmps_neq_f32_sdwa"
                return;
              case 'g':	 // 2 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmps_nge_f32";	 // "v_cmps_nge_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmps_ngt_f32";	 // "v_cmps_ngt_f32_sdwa"
                  return;
                }
                break;
              case 'l':	 // 3 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmps_nle_f32";	 // "v_cmps_nle_f32_sdwa"
                  return;
                case 'g':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmps_nlg_f32";	 // "v_cmps_nlg_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmps_nlt_f32";	 // "v_cmps_nlt_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 't':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "ru_f32_sdwa", 11) != 0)
                break;
              Mnemonic = "v_cmps_tru_f32";	 // "v_cmps_tru_f32_sdwa"
              return;
            }
            break;
          case 'x':	 // 6 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'e':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "q_f32_sdwa", 10) != 0)
                break;
              Mnemonic = "v_cmpsx_eq_f32";	 // "v_cmpsx_eq_f32_sdwa"
              return;
            case 'g':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case 'e':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                  break;
                Mnemonic = "v_cmpsx_ge_f32";	 // "v_cmpsx_ge_f32_sdwa"
                return;
              case 't':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                  break;
                Mnemonic = "v_cmpsx_gt_f32";	 // "v_cmpsx_gt_f32_sdwa"
                return;
              }
              break;
            case 'l':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case 'e':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                  break;
                Mnemonic = "v_cmpsx_le_f32";	 // "v_cmpsx_le_f32_sdwa"
                return;
              case 'g':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                  break;
                Mnemonic = "v_cmpsx_lg_f32";	 // "v_cmpsx_lg_f32_sdwa"
                return;
              case 't':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                  break;
                Mnemonic = "v_cmpsx_lt_f32";	 // "v_cmpsx_lt_f32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'x':	 // 14 strings to match.
          if (Mnemonic[6] != '_')
            break;
          switch (Mnemonic[7]) {
          default: break;
          case 'n':	 // 12 strings to match.
            switch (Mnemonic[8]) {
            default: break;
            case 'e':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                break;
              switch (Mnemonic[12]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_neq_f16";	 // "v_cmpx_neq_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_neq_f32";	 // "v_cmpx_neq_f32_sdwa"
                return;
              }
              break;
            case 'g':	 // 4 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case 'e':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nge_f16";	 // "v_cmpx_nge_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nge_f32";	 // "v_cmpx_nge_f32_sdwa"
                  return;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_ngt_f16";	 // "v_cmpx_ngt_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_ngt_f32";	 // "v_cmpx_ngt_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'l':	 // 6 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case 'e':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nle_f16";	 // "v_cmpx_nle_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nle_f32";	 // "v_cmpx_nle_f32_sdwa"
                  return;
                }
                break;
              case 'g':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nlg_f16";	 // "v_cmpx_nlg_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nlg_f32";	 // "v_cmpx_nlg_f32_sdwa"
                  return;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nlt_f16";	 // "v_cmpx_nlt_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_nlt_f32";	 // "v_cmpx_nlt_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 't':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+8, "ru_f", 4) != 0)
              break;
            switch (Mnemonic[12]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmpx_tru_f16";	 // "v_cmpx_tru_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmpx_tru_f32";	 // "v_cmpx_tru_f32_sdwa"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 20:	 // 14 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 9 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '_':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "class_f", 7) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_class_f16";	 // "v_cmp_class_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_class_f32";	 // "v_cmp_class_f32_sdwa"
              return;
            }
            break;
          case 's':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+6, "x_", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'n':	 // 6 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case 'e':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "q_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cmpsx_neq_f32";	 // "v_cmpsx_neq_f32_sdwa"
                return;
              case 'g':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nge_f32";	 // "v_cmpsx_nge_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_ngt_f32";	 // "v_cmpsx_ngt_f32_sdwa"
                  return;
                }
                break;
              case 'l':	 // 3 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nle_f32";	 // "v_cmpsx_nle_f32_sdwa"
                  return;
                case 'g':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nlg_f32";	 // "v_cmpsx_nlg_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nlt_f32";	 // "v_cmpsx_nlt_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 't':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "ru_f32_sdwa", 11) != 0)
                break;
              Mnemonic = "v_cmpsx_tru_f32";	 // "v_cmpsx_tru_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_sdwa", 17) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_sdwa"
          return;
        case 'r':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f32_sdwa", 13) != 0)
                break;
              Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_sdwa"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_sdwa", 13) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_sdwa"
              return;
            }
            break;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f32_sdwa", 16) != 0)
              break;
            Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_sdwa"
            return;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "at_pk_u8_i16_sdwa", 17) != 0)
            break;
          Mnemonic = "v_sat_pk_u8_i16";	 // "v_sat_pk_u8_i16_sdwa"
          return;
        }
        break;
      case 21:	 // 19 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 7 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "px_class_f", 10) != 0)
              break;
            switch (Mnemonic[14]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmpx_class_f16";	 // "v_cmpx_class_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmpx_class_f32";	 // "v_cmpx_class_f32_sdwa"
              return;
            }
            break;
          case 'v':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 4 strings to match.
              if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
                break;
              switch (Mnemonic[15]) {
              default: break;
              case '0':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_sdwa"
                return;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_sdwa"
                return;
              case '2':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_sdwa"
                return;
              }
              break;
            case 'o':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "ff_f32_i4_sdwa", 14) != 0)
                break;
              Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_sdwa"
              return;
            }
            break;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_sdwa", 18) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_sdwa"
          return;
        case 'f':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_sdwa"
            return;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_sdwa", 18) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_sdwa"
          return;
        case 'm':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_sdwa", 16) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_mac_legacy_f32_sdwa"
                Mnemonic = "v_mac_legacy_f32";
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_sdwa", 16) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_max_legacy_f32_sdwa"
                Mnemonic = "v_max_legacy_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_sdwa", 17) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_min_legacy_f32_sdwa"
              Mnemonic = "v_min_legacy_f32";
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_sdwa", 11) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_i32_i24_sdwa"
                  Mnemonic = "v_mul_hi_i32_i24";
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_sdwa", 11) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_u32_u24_sdwa"
                  Mnemonic = "v_mul_hi_u32_u24";
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_sdwa", 14) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_legacy_f32_sdwa"
                Mnemonic = "v_mul_legacy_f32";
              return;
            }
            break;
          }
          break;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_sdwa", 17) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_sdwa"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_sdwa", 17) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_sdwa"
            return;
          }
          break;
        }
        break;
      case 22:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_", 6) != 0)
          break;
        switch (Mnemonic[6]) {
        default: break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "lr_i32_f32_sdwa", 15) != 0)
            break;
          Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_sdwa"
          return;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "pi_i32_f32_sdwa", 15) != 0)
            break;
          Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_sdwa"
          return;
        }
        break;
      case 23:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_norm_", 11) != 0)
          break;
        switch (Mnemonic[11]) {
        default: break;
        case 'i':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+12, "16_f16_sdwa", 11) != 0)
            break;
          Mnemonic = "v_cvt_norm_i16_f16";	 // "v_cvt_norm_i16_f16_sdwa"
          return;
        case 'u':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+12, "16_f16_sdwa", 11) != 0)
            break;
          Mnemonic = "v_cvt_norm_u16_f16";	 // "v_cvt_norm_u16_f16_sdwa"
          return;
        }
        break;
      case 24:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_frexp_exp_i", 13) != 0)
          break;
        switch (Mnemonic[13]) {
        default: break;
        case '1':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+14, "6_f16_sdwa", 10) != 0)
            break;
          Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_sdwa"
          return;
        case '3':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+14, "2_f32_sdwa", 10) != 0)
            break;
          Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_sdwa"
          return;
        }
        break;
      case 31:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_screen_partition_4se_b32_sdwa", 31) != 0)
          break;
        Mnemonic = "v_screen_partition_4se_b32";	 // "v_screen_partition_4se_b32_sdwa"
        return;
      }
    break;
    case 3:
    break;
    case 4:
      switch (Mnemonic.size()) {
      default: break;
      case 12:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_or_b32_dpp", 12) != 0)
          break;
        if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_or_b32_dpp"
          Mnemonic = "v_or_b32";
        return;
      case 13:	 // 42 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_f32_dpp"
                  Mnemonic = "v_add_f32";
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_dpp", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_i32_dpp"
                Mnemonic = "v_add_i32";
              return;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_add_u16";	 // "v_add_u16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_u32_dpp"
                  Mnemonic = "v_add_u32";
                return;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_dpp", 9) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_and_b32_dpp"
              Mnemonic = "v_and_b32";
            return;
          }
          break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "os_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_cos_f16";	 // "v_cos_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_cos_f32";	 // "v_cos_f32_dpp"
            return;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_dpp"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "og_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_log_f16";	 // "v_log_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_log_f32";	 // "v_log_f32_dpp"
            return;
          }
          break;
        case 'm':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 8 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mac_f32_dpp"
                  Mnemonic = "v_mac_f32";
                return;
              }
              break;
            case 'x':	 // 6 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_dpp"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_f32_dpp"
                    Mnemonic = "v_max_f32";
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_dpp"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_i32_dpp"
                    Mnemonic = "v_max_i32";
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_dpp"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                    break;
                  if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_max_u32_dpp"
                    Mnemonic = "v_max_u32";
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_f32_dpp"
                  Mnemonic = "v_min_f32";
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_i32_dpp"
                  Mnemonic = "v_min_i32";
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_min_u32_dpp"
                  Mnemonic = "v_min_u32";
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_dpp", 9) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_dpp"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_f32_dpp"
                Mnemonic = "v_mul_f32";
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_dpp", 10) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_dpp"
          return;
        case 'r':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_dpp"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_dpp"
              return;
            }
            break;
          }
          break;
        case 's':	 // 7 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_dpp"
              return;
            }
            break;
          case 'u':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_f32_dpp"
                  Mnemonic = "v_sub_f32";
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_dpp", 6) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_i32_dpp"
                Mnemonic = "v_sub_i32";
              return;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_dpp", 5) != 0)
                  break;
                Mnemonic = "v_sub_u16";	 // "v_sub_u16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_dpp", 5) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_u32_dpp"
                  Mnemonic = "v_sub_u32";
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "or_b32_dpp", 10) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_xor_b32_dpp"
            Mnemonic = "v_xor_b32";
          return;
        }
        break;
      case 14:	 // 14 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dc_u32_dpp", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_addc_u32_dpp"
              Mnemonic = "v_addc_u32";
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "hr_i32_dpp", 10) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_ashr_i32_dpp"
              Mnemonic = "v_ashr_i32";
            return;
          }
          break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_dpp"
            return;
          }
          break;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'f':	 // 3 strings to match.
            if (Mnemonic[4] != 'b')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_dpp", 6) != 0)
                  break;
                Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_dpp"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "32_dpp", 6) != 0)
                  break;
                Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_dpp"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "_b32_dpp", 8) != 0)
                break;
              Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_dpp"
              return;
            }
            break;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ac_f32_dpp", 10) != 0)
              break;
            Mnemonic = "v_fmac_f32";	 // "v_fmac_f32_dpp"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_dpp", 8) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshl_b32_dpp"
              Mnemonic = "v_lshl_b32";
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_dpp", 8) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_lshr_b32_dpp"
              Mnemonic = "v_lshr_b32";
            return;
          }
          break;
        case 's':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_dpp", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_dpp"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_dpp", 10) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subb_u32_dpp"
              Mnemonic = "v_subb_u32";
            return;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nor_b32_dpp", 11) != 0)
            break;
          Mnemonic = "v_xnor_b32";	 // "v_xnor_b32_dpp"
          return;
        }
        break;
      case 15:	 // 10 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_dpp", 12) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_dpp"
          return;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_dpp", 5) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_dpp"
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_dpp", 5) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_dpp"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f16_dpp", 12) != 0)
            break;
          Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_dpp"
          return;
        case 'r':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_dpp"
            return;
          }
          break;
        case 't':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_dpp"
            return;
          }
          break;
        }
        break;
      case 16:	 // 6 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ul_lo_u16_dpp", 13) != 0)
            break;
          Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_dpp"
          return;
        case 's':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_dpp", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_f32_dpp"
                Mnemonic = "v_subrev_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_dpp", 6) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_i32_dpp"
              Mnemonic = "v_subrev_i32";
            return;
          case 'u':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_dpp", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_u32_dpp"
                Mnemonic = "v_subrev_u32";
              return;
            }
            break;
          }
          break;
        }
        break;
      case 17:	 // 21 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_dpp", 5) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_ashrrev_i32_dpp"
              Mnemonic = "v_ashrrev_i32";
            return;
          }
          break;
        case 'c':	 // 11 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dmask_b32_dpp", 13) != 0)
              break;
            if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_cndmask_b32_dpp"
              Mnemonic = "v_cndmask_b32";
            return;
          case 'v':	 // 10 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 6 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_dpp", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_dpp"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_dpp", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_dpp"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_dpp", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_dpp"
                  return;
                }
                break;
              case '3':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_dpp", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_dpp"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_dpp", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_dpp"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_dpp", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_dpp"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_dpp", 9) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_f32_dpp", 9) != 0)
                  break;
                Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_dpp"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_dpp", 9) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_dpp"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_f32_dpp", 9) != 0)
                  break;
                Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_dpp"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_dpp", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshlrev_b32_dpp"
                Mnemonic = "v_lshlrev_b32";
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_dpp", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_dpp", 5) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_lshrrev_b32_dpp"
                Mnemonic = "v_lshrrev_b32";
              return;
            }
            break;
          }
          break;
        case 'm':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_fed_b32_dpp", 13) != 0)
              break;
            Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_dpp"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_dpp", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_i32_i24_dpp"
                Mnemonic = "v_mul_i32_i24";
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_dpp", 10) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_u32_u24_dpp"
                Mnemonic = "v_mul_u32_u24";
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_dpp", 14) != 0)
            break;
          if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subbrev_u32_dpp"
            Mnemonic = "v_subbrev_u32";
          return;
        }
        break;
      case 19:	 // 5 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_dpp", 16) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_dpp"
          return;
        case 'r':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f32_dpp", 12) != 0)
                break;
              Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_dpp"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_dpp", 12) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_dpp"
              return;
            }
            break;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f32_dpp", 15) != 0)
              break;
            Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_dpp"
            return;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "at_pk_u8_i16_dpp", 16) != 0)
            break;
          Mnemonic = "v_sat_pk_u8_i16";	 // "v_sat_pk_u8_i16_dpp"
          return;
        }
        break;
      case 20:	 // 17 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
              break;
            switch (Mnemonic[15]) {
            default: break;
            case '0':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_dpp", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_dpp"
              return;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_dpp", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_dpp"
              return;
            case '2':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_dpp", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_dpp"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_dpp", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_dpp"
              return;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "ff_f32_i4_dpp", 13) != 0)
              break;
            Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_dpp"
            return;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_dpp", 17) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_dpp"
          return;
        case 'f':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_dpp", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_dpp"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_dpp", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_dpp"
            return;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_dpp", 17) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_dpp"
          return;
        case 'm':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_dpp", 15) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_mac_legacy_f32_dpp"
                Mnemonic = "v_mac_legacy_f32";
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_dpp", 15) != 0)
                break;
              if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_max_legacy_f32_dpp"
                Mnemonic = "v_max_legacy_f32";
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_dpp", 16) != 0)
              break;
            if ((Features & Feature_isSICI) == Feature_isSICI)	 // "v_min_legacy_f32_dpp"
              Mnemonic = "v_min_legacy_f32";
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_dpp", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_i32_i24_dpp"
                  Mnemonic = "v_mul_hi_i32_i24";
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_dpp", 10) != 0)
                  break;
                if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_hi_u32_u24_dpp"
                  Mnemonic = "v_mul_hi_u32_u24";
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_dpp", 13) != 0)
                break;
              if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_mul_legacy_f32_dpp"
                Mnemonic = "v_mul_legacy_f32";
              return;
            }
            break;
          }
          break;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_dpp", 16) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_dpp"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_dpp", 16) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_dpp"
            return;
          }
          break;
        }
        break;
      case 21:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_", 6) != 0)
          break;
        switch (Mnemonic[6]) {
        default: break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "lr_i32_f32_dpp", 14) != 0)
            break;
          Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_dpp"
          return;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "pi_i32_f32_dpp", 14) != 0)
            break;
          Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_dpp"
          return;
        }
        break;
      case 22:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_norm_", 11) != 0)
          break;
        switch (Mnemonic[11]) {
        default: break;
        case 'i':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+12, "16_f16_dpp", 10) != 0)
            break;
          Mnemonic = "v_cvt_norm_i16_f16";	 // "v_cvt_norm_i16_f16_dpp"
          return;
        case 'u':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+12, "16_f16_dpp", 10) != 0)
            break;
          Mnemonic = "v_cvt_norm_u16_f16";	 // "v_cvt_norm_u16_f16_dpp"
          return;
        }
        break;
      case 23:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_frexp_exp_i", 13) != 0)
          break;
        switch (Mnemonic[13]) {
        default: break;
        case '1':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+14, "6_f16_dpp", 9) != 0)
            break;
          Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_dpp"
          return;
        case '3':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+14, "2_f32_dpp", 9) != 0)
            break;
          Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_dpp"
          return;
        }
        break;
      case 30:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_screen_partition_4se_b32_dpp", 30) != 0)
          break;
        Mnemonic = "v_screen_partition_4se_b32";	 // "v_screen_partition_4se_b32_dpp"
        return;
      }
    break;
  }
}

enum {
  Tie0_1_1,
  Tie1_2_2,
};

static const uint8_t TiedAsmOperandTable[][3] = {
  /* Tie0_1_1 */ { 0, 1, 1 },
  /* Tie1_2_2 */ { 1, 2, 2 },
};

namespace {
enum OperatorConversionKind {
  CVT_Done,
  CVT_Reg,
  CVT_Tied,
  CVT_cvtMubufAtomic,
  CVT_cvtMubufAtomicReturn,
  CVT_cvtMubufLds,
  CVT_cvtMubuf,
  CVT_cvtDS,
  CVT_cvtDSGds,
  CVT_cvtDSOffset01,
  CVT_cvtExp,
  CVT_95_Reg,
  CVT_95_addImmOperands_95_defaultOffsetU12,
  CVT_95_addImmOperands_95_defaultSLC,
  CVT_95_addImmOperands_95_defaultGLC,
  CVT_imm_95_0,
  CVT_95_addImmOperands_95_defaultOffsetS13,
  CVT_cvtMIMGAtomic,
  CVT_cvtMIMG,
  CVT_95_addRegOrImmOperands,
  CVT_95_addImmOperands,
  CVT_95_addImmOperands_95_defaultSMRDOffset20,
  CVT_95_addSoppBrTargetOperands,
  CVT_95_addImmOperands_95_defaultSMRDOffset8,
  CVT_95_addImmOperands_95_defaultSMRDLiteralOffset,
  CVT_cvtMtbuf,
  CVT_95_addImmOperands_95_defaultRowMask,
  CVT_95_addImmOperands_95_defaultBankMask,
  CVT_95_addImmOperands_95_defaultBoundCtrl,
  CVT_cvtSdwaVOP2b,
  CVT_cvtVOP3,
  CVT_cvtDPP,
  CVT_cvtSdwaVOP2,
  CVT_cvtVOP3OpSel,
  CVT_cvtSdwaVOP1,
  CVT_cvtSdwaVOPC,
  CVT_cvtVOP3P,
  CVT_cvtVOP3Interp,
  CVT_95_addKImmFP16Operands,
  CVT_95_addKImmFP32Operands,
  CVT_NUM_CONVERTERS
};

enum InstructionConversionKind {
  ConvertCustom_cvtMubufAtomic,
  ConvertCustom_cvtMubufAtomicReturn,
  ConvertCustom_cvtMubufLds,
  ConvertCustom_cvtMubuf,
  Convert_NoOperands,
  ConvertCustom_cvtDS,
  ConvertCustom_cvtDSGds,
  ConvertCustom_cvtDSOffset01,
  ConvertCustom_cvtExp,
  Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5,
  Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4,
  Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0,
  Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6,
  Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6,
  Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5,
  Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0,
  ConvertCustom_cvtMIMGAtomic,
  ConvertCustom_cvtMIMG,
  Convert__Reg1_0__SSrcB321_1,
  Convert__Reg1_0__SSrcB321_1__SSrcB321_2,
  Convert__Reg1_0__Tie0_1_1__S16Imm1_1,
  Convert__Reg1_0__SSrcB641_1__SSrcB641_2,
  Convert__Reg1_0__SSrcB641_1,
  Convert__Reg1_0__SSrcB641_1__SSrcB321_2,
  Convert__Imm1_0__Reg1_1__Reg1_2,
  Convert__Imm1_0__Reg1_1__ImmSMRDOffset201_2,
  Convert__Reg1_0__Reg1_1__Reg1_2,
  Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2,
  Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2,
  Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2,
  Convert__SSrcB321_0__SSrcB321_1,
  Convert__SSrcB641_0__SSrcB321_1,
  Convert__SoppBrTarget1_0,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3,
  Convert__Reg1_0__S16Imm1_1,
  Convert__SCSrcB641_0__SCSrcB641_1,
  Convert__Reg1_0,
  Convert__SSrcB641_0__SSrcB641_1,
  Convert__Reg1_0__U16Imm1_1,
  Convert__Reg1_0__Reg1_1,
  Convert__Reg1_0__ImmSMRDOffset201_1,
  Convert__Imm1_0,
  Convert__Reg1_0__ImmHwreg1_1,
  Convert__SendMsg1_0,
  Convert__SSrcB321_0,
  Convert__GPRIdxMode1_0,
  Convert__SSrcB321_0__GPRIdxMode1_1,
  Convert__Reg1_1__ImmHwreg1_0,
  Convert__Imm1_1__ImmHwreg1_0,
  Convert__SWaitCnt1_0,
  Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5,
  Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5,
  Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5,
  ConvertCustom_cvtMtbuf,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3,
  Convert__Reg1_0__VSrcB321_2__Reg1_3,
  Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3,
  Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7,
  ConvertCustom_cvtSdwaVOP2b,
  Convert__Reg1_0__VSrcF161_1__Reg1_2,
  ConvertCustom_cvtVOP3,
  ConvertCustom_cvtDPP,
  ConvertCustom_cvtSdwaVOP2,
  Convert__Reg1_0__VSrcF321_1__Reg1_2,
  ConvertCustom_cvtVOP3OpSel,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2,
  Convert__Reg1_0__VSrcB161_1__Reg1_2,
  Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2,
  Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6,
  Convert__Reg1_0__VSrcB321_1__Reg1_2,
  Convert__Reg1_0__VCSrcB321_2__Reg1_3,
  Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4,
  Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8,
  Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2,
  Convert__Reg1_0__VSrcB321_1,
  Convert__Reg1_0__VCSrcB321_1,
  Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5,
  ConvertCustom_cvtSdwaVOP1,
  Convert__Reg1_0__VSrcF161_1,
  Convert__Reg1_0__VSrcF321_1,
  Convert__Reg1_0__VSrcF641_1,
  Convert__VSrcF161_1__Reg1_2,
  ConvertCustom_cvtSdwaVOPC,
  Convert__VSrcF321_1__Reg1_2,
  Convert__VSrcF641_1__Reg1_2,
  Convert__VSrcB161_1__Reg1_2,
  Convert__VSrcB321_1__Reg1_2,
  Convert__VSrcB641_1__Reg1_2,
  Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2,
  Convert__Reg1_0__VCSrcB321_1__Reg1_2,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__Reg1_3,
  Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7,
  Convert__Reg1_0__VSrcB161_1,
  Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0,
  Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0,
  Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4,
  Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4,
  ConvertCustom_cvtVOP3P,
  Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0_1_1,
  Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3,
  ConvertCustom_cvtVOP3Interp,
  Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3,
  Convert__Reg1_0__Tie0_1_1__Reg1_1__Attr1_2__AttrChan1_3,
  Convert__Reg1_0__VSrcF161_1__Reg1_2__Tie0_1_1,
  Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP161_3,
  Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3,
  Convert__Reg1_0__VCSrcF321_1__KImmFP161_2__Reg1_3,
  Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3,
  Convert__Reg1_0__Reg1_1__SCSrcB321_2,
  Convert__Reg1_0__Reg1_1__Tie1_2_2__Tie0_1_1,
  Convert__Reg1_0__SSrcB321_1__SCSrcB321_2__Tie0_1_1,
  Convert__Reg1_0__SCSrcB321_1__SCSrcB321_2__Tie0_1_1,
  CVT_NUM_SIGNATURES
};

} // end anonymous namespace

static const uint8_t ConversionTable[CVT_NUM_SIGNATURES][17] = {
  // ConvertCustom_cvtMubufAtomic
  { CVT_cvtMubufAtomic, 0, CVT_Done },
  // ConvertCustom_cvtMubufAtomicReturn
  { CVT_cvtMubufAtomicReturn, 0, CVT_Done },
  // ConvertCustom_cvtMubufLds
  { CVT_cvtMubufLds, 0, CVT_Done },
  // ConvertCustom_cvtMubuf
  { CVT_cvtMubuf, 0, CVT_Done },
  // Convert_NoOperands
  { CVT_Done },
  // ConvertCustom_cvtDS
  { CVT_cvtDS, 0, CVT_Done },
  // ConvertCustom_cvtDSGds
  { CVT_cvtDSGds, 0, CVT_Done },
  // ConvertCustom_cvtDSOffset01
  { CVT_cvtDSOffset01, 0, CVT_Done },
  // ConvertCustom_cvtExp
  { CVT_cvtExp, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultOffsetU12, 3, CVT_95_addImmOperands_95_defaultSLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetU12, 4, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultOffsetU12, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_95_addImmOperands_95_defaultSLC, 5, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultOffsetU12, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_95_addImmOperands_95_defaultSLC, 5, CVT_imm_95_0, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultSLC, 5, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultSLC, 5, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetS13, 5, CVT_95_addImmOperands_95_defaultSLC, 7, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_Reg, 4, CVT_95_addImmOperands_95_defaultOffsetS13, 5, CVT_95_addImmOperands_95_defaultSLC, 7, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_imm_95_0, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_imm_95_0, 0, CVT_Done },
  // ConvertCustom_cvtMIMGAtomic
  { CVT_cvtMIMGAtomic, 0, CVT_Done },
  // ConvertCustom_cvtMIMG
  { CVT_cvtMIMG, 0, CVT_Done },
  // Convert__Reg1_0__SSrcB321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__SSrcB321_1__SSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__S16Imm1_1
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__SSrcB641_1__SSrcB641_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__SSrcB641_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__SSrcB641_1__SSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Imm1_0__Reg1_1__Reg1_2
  { CVT_95_addImmOperands, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Imm1_0__Reg1_1__ImmSMRDOffset201_2
  { CVT_95_addImmOperands, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset20, 3, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset20, 3, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset20, 3, CVT_Done },
  // Convert__SSrcB321_0__SSrcB321_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__SSrcB641_0__SSrcB321_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__SoppBrTarget1_0
  { CVT_95_addSoppBrTargetOperands, 1, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset8, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset20, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDLiteralOffset, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__S16Imm1_1
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__SCSrcB641_0__SCSrcB641_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0
  { CVT_95_Reg, 1, CVT_Done },
  // Convert__SSrcB641_0__SSrcB641_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__U16Imm1_1
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__Reg1_1
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_Done },
  // Convert__Reg1_0__ImmSMRDOffset201_1
  { CVT_95_Reg, 1, CVT_95_addImmOperands_95_defaultSMRDOffset20, 2, CVT_Done },
  // Convert__Imm1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Reg1_0__ImmHwreg1_1
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__SendMsg1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__SSrcB321_0
  { CVT_95_addRegOrImmOperands, 1, CVT_Done },
  // Convert__GPRIdxMode1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__SSrcB321_0__GPRIdxMode1_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__Reg1_1__ImmHwreg1_0
  { CVT_95_Reg, 2, CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Imm1_1__ImmHwreg1_0
  { CVT_95_addImmOperands, 2, CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__SWaitCnt1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5
  { CVT_95_Reg, 1, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_Done },
  // Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5
  { CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_Done },
  // Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5
  { CVT_95_Reg, 2, CVT_95_Reg, 1, CVT_95_addImmOperands_95_defaultOffsetS13, 4, CVT_95_addImmOperands_95_defaultGLC, 5, CVT_95_addImmOperands_95_defaultSLC, 6, CVT_Done },
  // ConvertCustom_cvtMtbuf
  { CVT_cvtMtbuf, 0, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VSrcB321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 3, CVT_95_Reg, 4, CVT_95_addImmOperands, 5, CVT_95_addImmOperands_95_defaultRowMask, 6, CVT_95_addImmOperands_95_defaultBankMask, 7, CVT_95_addImmOperands_95_defaultBoundCtrl, 8, CVT_Done },
  // ConvertCustom_cvtSdwaVOP2b
  { CVT_cvtSdwaVOP2b, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF161_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // ConvertCustom_cvtVOP3
  { CVT_cvtVOP3, 0, CVT_Done },
  // ConvertCustom_cvtDPP
  { CVT_cvtDPP, 0, CVT_Done },
  // ConvertCustom_cvtSdwaVOP2
  { CVT_cvtSdwaVOP2, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF321_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // ConvertCustom_cvtVOP3OpSel
  { CVT_cvtVOP3OpSel, 0, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VSrcB161_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands, 4, CVT_95_addImmOperands_95_defaultRowMask, 5, CVT_95_addImmOperands_95_defaultBankMask, 6, CVT_95_addImmOperands_95_defaultBoundCtrl, 7, CVT_Done },
  // Convert__Reg1_0__VSrcB321_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_95_Reg, 5, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 3, CVT_95_Reg, 4, CVT_95_addImmOperands, 6, CVT_95_addImmOperands_95_defaultRowMask, 7, CVT_95_addImmOperands_95_defaultBankMask, 8, CVT_95_addImmOperands_95_defaultBoundCtrl, 9, CVT_Done },
  // Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VSrcB321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands_95_defaultRowMask, 4, CVT_95_addImmOperands_95_defaultBankMask, 5, CVT_95_addImmOperands_95_defaultBoundCtrl, 6, CVT_Done },
  // ConvertCustom_cvtSdwaVOP1
  { CVT_cvtSdwaVOP1, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF161_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VSrcF321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VSrcF641_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__VSrcF161_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // ConvertCustom_cvtSdwaVOPC
  { CVT_cvtSdwaVOPC, 0, CVT_Done },
  // Convert__VSrcF321_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcF641_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcB161_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcB321_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcB641_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands, 5, CVT_95_addImmOperands_95_defaultRowMask, 6, CVT_95_addImmOperands_95_defaultBankMask, 7, CVT_95_addImmOperands_95_defaultBoundCtrl, 8, CVT_Done },
  // Convert__Reg1_0__VSrcB161_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0
  { CVT_95_Reg, 1, CVT_imm_95_0, 0, CVT_95_addRegOrImmOperands, 2, CVT_imm_95_0, 0, CVT_95_addRegOrImmOperands, 3, CVT_imm_95_0, 0, CVT_Done },
  // Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0
  { CVT_95_Reg, 1, CVT_imm_95_0, 0, CVT_95_addRegOrImmOperands, 2, CVT_imm_95_0, 0, CVT_95_addRegOrImmOperands, 3, CVT_imm_95_0, 0, CVT_imm_95_0, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_95_addRegOrImmOperands, 5, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_95_addRegOrImmOperands, 5, CVT_Done },
  // ConvertCustom_cvtVOP3P
  { CVT_cvtVOP3P, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0_1_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Tied, Tie0_1_1, CVT_Done },
  // Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_Done },
  // ConvertCustom_cvtVOP3Interp
  { CVT_cvtVOP3Interp, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__Tie0_1_1__Reg1_1__Attr1_2__AttrChan1_3
  { CVT_95_Reg, 1, CVT_Tied, Tie0_1_1, CVT_95_Reg, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VSrcF161_1__Reg1_2__Tie0_1_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Tied, Tie0_1_1, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP161_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_95_addKImmFP16Operands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_95_addKImmFP32Operands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__KImmFP161_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addKImmFP16Operands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addKImmFP32Operands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__SCSrcB321_2
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Tie1_2_2__Tie0_1_1
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_Tied, Tie1_2_2, CVT_Tied, Tie0_1_1, CVT_Done },
  // Convert__Reg1_0__SSrcB321_1__SCSrcB321_2__Tie0_1_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Tied, Tie0_1_1, CVT_Done },
  // Convert__Reg1_0__SCSrcB321_1__SCSrcB321_2__Tie0_1_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Tied, Tie0_1_1, CVT_Done },
};

void AMDGPUAsmParser::
convertToMCInst(unsigned Kind, MCInst &Inst, unsigned Opcode,
                const OperandVector &Operands,
                const SmallBitVector &OptionalOperandsMask) {
  assert(Kind < CVT_NUM_SIGNATURES && "Invalid signature!");
  const uint8_t *Converter = ConversionTable[Kind];
  unsigned DefaultsOffset[14] = { 0 };
  assert(OptionalOperandsMask.size() == 13);
  for (unsigned i = 0, NumDefaults = 0; i < 13; ++i) {
    DefaultsOffset[i + 1] = NumDefaults;
    NumDefaults += (OptionalOperandsMask[i] ? 1 : 0);
  }
  unsigned OpIdx;
  Inst.setOpcode(Opcode);
  for (const uint8_t *p = Converter; *p; p+= 2) {
    OpIdx = *(p + 1) - DefaultsOffset[*(p + 1)];
    switch (*p) {
    default: llvm_unreachable("invalid conversion entry!");
    case CVT_Reg:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addRegOperands(Inst, 1);
      break;
    case CVT_Tied: {
      assert(OpIdx < (size_t)(std::end(TiedAsmOperandTable) -
                          std::begin(TiedAsmOperandTable)) &&
             "Tied operand not found");
      unsigned TiedResOpnd = TiedAsmOperandTable[OpIdx][0];
      if (TiedResOpnd != (uint8_t) -1)
        Inst.addOperand(Inst.getOperand(TiedResOpnd));
      break;
    }
    case CVT_cvtMubufAtomic:
      cvtMubufAtomic(Inst, Operands);
      break;
    case CVT_cvtMubufAtomicReturn:
      cvtMubufAtomicReturn(Inst, Operands);
      break;
    case CVT_cvtMubufLds:
      cvtMubufLds(Inst, Operands);
      break;
    case CVT_cvtMubuf:
      cvtMubuf(Inst, Operands);
      break;
    case CVT_cvtDS:
      cvtDS(Inst, Operands);
      break;
    case CVT_cvtDSGds:
      cvtDSGds(Inst, Operands);
      break;
    case CVT_cvtDSOffset01:
      cvtDSOffset01(Inst, Operands);
      break;
    case CVT_cvtExp:
      cvtExp(Inst, Operands);
      break;
    case CVT_95_Reg:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addRegOperands(Inst, 1);
      break;
    case CVT_95_addImmOperands_95_defaultOffsetU12:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultOffsetU12()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultSLC:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSLC()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultGLC:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultGLC()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_imm_95_0:
      Inst.addOperand(MCOperand::createImm(0));
      break;
    case CVT_95_addImmOperands_95_defaultOffsetS13:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultOffsetS13()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtMIMGAtomic:
      cvtMIMGAtomic(Inst, Operands);
      break;
    case CVT_cvtMIMG:
      cvtMIMG(Inst, Operands);
      break;
    case CVT_95_addRegOrImmOperands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addRegOrImmOperands(Inst, 1);
      break;
    case CVT_95_addImmOperands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset20:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSMRDOffset20()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addSoppBrTargetOperands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addSoppBrTargetOperands(Inst, 1);
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset8:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSMRDOffset8()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultSMRDLiteralOffset:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSMRDLiteralOffset()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtMtbuf:
      cvtMtbuf(Inst, Operands);
      break;
    case CVT_95_addImmOperands_95_defaultRowMask:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultRowMask()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultBankMask:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultBankMask()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultBoundCtrl:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultBoundCtrl()->addImmOperands(Inst, 1);
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtSdwaVOP2b:
      cvtSdwaVOP2b(Inst, Operands);
      break;
    case CVT_cvtVOP3:
      cvtVOP3(Inst, Operands);
      break;
    case CVT_cvtDPP:
      cvtDPP(Inst, Operands);
      break;
    case CVT_cvtSdwaVOP2:
      cvtSdwaVOP2(Inst, Operands);
      break;
    case CVT_cvtVOP3OpSel:
      cvtVOP3OpSel(Inst, Operands);
      break;
    case CVT_cvtSdwaVOP1:
      cvtSdwaVOP1(Inst, Operands);
      break;
    case CVT_cvtSdwaVOPC:
      cvtSdwaVOPC(Inst, Operands);
      break;
    case CVT_cvtVOP3P:
      cvtVOP3P(Inst, Operands);
      break;
    case CVT_cvtVOP3Interp:
      cvtVOP3Interp(Inst, Operands);
      break;
    case CVT_95_addKImmFP16Operands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addKImmFP16Operands(Inst, 1);
      break;
    case CVT_95_addKImmFP32Operands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addKImmFP32Operands(Inst, 1);
      break;
    }
  }
}

void AMDGPUAsmParser::
convertToMapAndConstraints(unsigned Kind,
                           const OperandVector &Operands) {
  assert(Kind < CVT_NUM_SIGNATURES && "Invalid signature!");
  unsigned NumMCOperands = 0;
  const uint8_t *Converter = ConversionTable[Kind];
  for (const uint8_t *p = Converter; *p; p+= 2) {
    switch (*p) {
    default: llvm_unreachable("invalid conversion entry!");
    case CVT_Reg:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("r");
      ++NumMCOperands;
      break;
    case CVT_Tied:
      ++NumMCOperands;
      break;
    case CVT_95_Reg:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("r");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultOffsetU12:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSLC:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultGLC:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_imm_95_0:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("");
      ++NumMCOperands;
      break;
    case CVT_95_addImmOperands_95_defaultOffsetS13:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addRegOrImmOperands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset20:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addSoppBrTargetOperands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset8:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSMRDLiteralOffset:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultRowMask:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultBankMask:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultBoundCtrl:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addKImmFP16Operands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addKImmFP32Operands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    }
  }
}

namespace {

/// MatchClassKind - The kinds of classes which participate in
/// instruction matching.
enum MatchClassKind {
  InvalidMatchClass = 0,
  OptionalMatchClass = 1,
  MCK_addr64, // 'addr64'
  MCK_done, // 'done'
  MCK_gds, // 'gds'
  MCK_glc, // 'glc'
  MCK_idxen, // 'idxen'
  MCK_lds, // 'lds'
  MCK_off, // 'off'
  MCK_offen, // 'offen'
  MCK_LAST_TOKEN = MCK_offen,
  MCK_M0_CLASS, // register class 'M0_CLASS'
  MCK_Pseudo_SReg_128, // register class 'Pseudo_SReg_128'
  MCK_SCC_CLASS, // register class 'SCC_CLASS'
  MCK_TTMP_512, // register class 'TTMP_512'
  MCK_VCC, // register class 'VCC'
  MCK_Pseudo_SReg_32, // register class 'Pseudo_SReg_32'
  MCK_TTMP_256, // register class 'TTMP_256'
  MCK_TTMP_128, // register class 'TTMP_128'
  MCK_TTMP_64, // register class 'TTMP_64'
  MCK_TTMP_32, // register class 'TTMP_32'
  MCK_SGPR_512, // register class 'SGPR_512'
  MCK_SReg_512, // register class 'SReg_512'
  MCK_SGPR_256, // register class 'SGPR_256'
  MCK_SGPR_128, // register class 'SGPR_128'
  MCK_SReg_256, // register class 'SReg_256'
  MCK_SReg_128, // register class 'SReg_128'
  MCK_SGPR_64, // register class 'SGPR_64'
  MCK_SReg_64_XEXEC, // register class 'SReg_64_XEXEC'
  MCK_SReg_64, // register class 'SReg_64'
  MCK_SGPR_32, // register class 'SGPR_32'
  MCK_SReg_32_XM0_XEXEC, // register class 'SReg_32_XM0_XEXEC'
  MCK_Reg4, // derived register class
  MCK_SReg_32_XEXEC_HI, // register class 'SReg_32_XEXEC_HI'
  MCK_SReg_32_XM0, // register class 'SReg_32_XM0'
  MCK_SReg_32, // register class 'SReg_32'
  MCK_VReg_512, // register class 'VReg_512'
  MCK_VReg_256, // register class 'VReg_256'
  MCK_VReg_128, // register class 'VReg_128'
  MCK_VReg_96, // register class 'VReg_96'
  MCK_VReg_64, // register class 'VReg_64'
  MCK_VGPR_32, // register class 'VGPR_32,VReg_1'
  MCK_VS_64, // register class 'VS_64'
  MCK_VS_32, // register class 'VS_32'
  MCK_LAST_REGISTER = MCK_VS_32,
  MCK_AttrChan, // user defined class 'AttrChanMatchClass'
  MCK_Attr, // user defined class 'AttrMatchClass'
  MCK_ExpTgt, // user defined class 'ExpTgtMatchClass'
  MCK_RegOrImmWithFP16InputMods, // user defined class 'FP16InputModsMatchClass'
  MCK_SDWAWithFP16InputMods, // user defined class 'FP16SDWAInputModsMatchClass'
  MCK_RegOrImmWithFP32InputMods, // user defined class 'FP32InputModsMatchClass'
  MCK_SDWAWithFP32InputMods, // user defined class 'FP32SDWAInputModsMatchClass'
  MCK_RegOrImmWithFP64InputMods, // user defined class 'FP64InputModsMatchClass'
  MCK_VRegWithFPInputMods, // user defined class 'FPVRegInputModsMatchClass'
  MCK_GPRIdxMode, // user defined class 'GPRIdxModeMatchClass'
  MCK_Imm, // user defined class 'ImmAsmOperand'
  MCK_SDWAWithInt16InputMods, // user defined class 'Int16SDWAInputModsMatchClass'
  MCK_RegOrImmWithInt32InputMods, // user defined class 'Int32InputModsMatchClass'
  MCK_SDWAWithInt32InputMods, // user defined class 'Int32SDWAInputModsMatchClass'
  MCK_RegOrImmWithInt64InputMods, // user defined class 'Int64InputModsMatchClass'
  MCK_OpSelMods, // user defined class 'IntOpSelModsMatchClass'
  MCK_VRegWithIntInputMods, // user defined class 'IntVRegInputModsMatchClass'
  MCK_InterpSlot, // user defined class 'InterpSlotMatchClass'
  MCK_KImmFP16, // user defined class 'KImmFP16MatchClass'
  MCK_KImmFP32, // user defined class 'KImmFP32MatchClass'
  MCK_PackedFP16InputMods, // user defined class 'PackedF16InputModsMatchClass'
  MCK_PackedInt16InputMods, // user defined class 'PackedI16InputModsMatchClass'
  MCK_SWaitCnt, // user defined class 'SWaitMatchClass'
  MCK_SendMsg, // user defined class 'SendMsgMatchClass'
  MCK_SoppBrTarget, // user defined class 'SoppBrTarget'
  MCK_Swizzle, // user defined class 'SwizzleMatchClass'
  MCK_VReg32OrOff, // user defined class 'VReg32OrOffClass'
  MCK_SSrcB16, // user defined class 'anonymous_1046'
  MCK_SSrcF16, // user defined class 'anonymous_1047'
  MCK_SSrcB32, // user defined class 'anonymous_1048'
  MCK_SSrcF32, // user defined class 'anonymous_1049'
  MCK_SSrcB64, // user defined class 'anonymous_1050'
  MCK_SSrcF64, // user defined class 'anonymous_1051'
  MCK_SSrcV2B16, // user defined class 'anonymous_1052'
  MCK_SSrcV2F16, // user defined class 'anonymous_1053'
  MCK_SCSrcB16, // user defined class 'anonymous_1054'
  MCK_SCSrcF16, // user defined class 'anonymous_1055'
  MCK_SCSrcB32, // user defined class 'anonymous_1056'
  MCK_SCSrcF32, // user defined class 'anonymous_1057'
  MCK_SCSrcB64, // user defined class 'anonymous_1058'
  MCK_SCSrcF64, // user defined class 'anonymous_1059'
  MCK_SCSrcV2B16, // user defined class 'anonymous_1060'
  MCK_SCSrcV2F16, // user defined class 'anonymous_1061'
  MCK_VSrcB16, // user defined class 'anonymous_1062'
  MCK_VSrcF16, // user defined class 'anonymous_1063'
  MCK_VSrcB32, // user defined class 'anonymous_1064'
  MCK_VSrcF32, // user defined class 'anonymous_1065'
  MCK_VSrcB64, // user defined class 'anonymous_1066'
  MCK_VSrcF64, // user defined class 'anonymous_1067'
  MCK_VSrcV2B16, // user defined class 'anonymous_1068'
  MCK_VSrcV2F16, // user defined class 'anonymous_1069'
  MCK_VCSrcB16, // user defined class 'anonymous_1070'
  MCK_VCSrcF16, // user defined class 'anonymous_1071'
  MCK_VCSrcB32, // user defined class 'anonymous_1072'
  MCK_VCSrcF32, // user defined class 'anonymous_1073'
  MCK_VCSrcB64, // user defined class 'anonymous_1074'
  MCK_VCSrcF64, // user defined class 'anonymous_1075'
  MCK_VCSrcV2B16, // user defined class 'anonymous_1076'
  MCK_VCSrcV2F16, // user defined class 'anonymous_1077'
  MCK_ImmOffen, // user defined class 'anonymous_1120'
  MCK_ImmIdxen, // user defined class 'anonymous_1121'
  MCK_ImmAddr64, // user defined class 'anonymous_1122'
  MCK_ImmOffsetU12, // user defined class 'anonymous_1123'
  MCK_ImmOffsetS13, // user defined class 'anonymous_1124'
  MCK_ImmOffset, // user defined class 'anonymous_1125'
  MCK_ImmOffset0, // user defined class 'anonymous_1126'
  MCK_ImmOffset1, // user defined class 'anonymous_1127'
  MCK_ImmGDS, // user defined class 'anonymous_1128'
  MCK_ImmOModSI, // user defined class 'anonymous_1129'
  MCK_ImmClampSI, // user defined class 'anonymous_1130'
  MCK_ImmHigh, // user defined class 'anonymous_1131'
  MCK_ImmGLC, // user defined class 'anonymous_1132'
  MCK_ImmSLC, // user defined class 'anonymous_1133'
  MCK_ImmTFE, // user defined class 'anonymous_1134'
  MCK_ImmUNorm, // user defined class 'anonymous_1135'
  MCK_ImmDA, // user defined class 'anonymous_1136'
  MCK_ImmR128A16, // user defined class 'anonymous_1137'
  MCK_ImmD16, // user defined class 'anonymous_1138'
  MCK_ImmLWE, // user defined class 'anonymous_1139'
  MCK_ImmExpCompr, // user defined class 'anonymous_1140'
  MCK_ImmExpVM, // user defined class 'anonymous_1141'
  MCK_ImmFORMAT, // user defined class 'anonymous_1142'
  MCK_ImmDMask, // user defined class 'anonymous_1143'
  MCK_ImmDPPCtrl, // user defined class 'anonymous_1144'
  MCK_ImmRowMask, // user defined class 'anonymous_1145'
  MCK_ImmBankMask, // user defined class 'anonymous_1146'
  MCK_ImmBoundCtrl, // user defined class 'anonymous_1147'
  MCK_ImmSDWADstSel, // user defined class 'anonymous_1148'
  MCK_ImmSDWASrc0Sel, // user defined class 'anonymous_1149'
  MCK_ImmSDWASrc1Sel, // user defined class 'anonymous_1150'
  MCK_ImmSDWADstUnused, // user defined class 'anonymous_1151'
  MCK_ImmOpSel, // user defined class 'anonymous_1152'
  MCK_ImmOpSelHi, // user defined class 'anonymous_1153'
  MCK_ImmNegLo, // user defined class 'anonymous_1154'
  MCK_ImmNegHi, // user defined class 'anonymous_1155'
  MCK_ImmHwreg, // user defined class 'anonymous_1156'
  MCK_ImmExpTgt, // user defined class 'anonymous_1157'
  MCK_ImmSMRDOffset8, // user defined class 'anonymous_3302'
  MCK_ImmSMRDOffset20, // user defined class 'anonymous_3303'
  MCK_ImmSMRDLiteralOffset, // user defined class 'anonymous_3304'
  MCK_S16Imm, // user defined class 's16ImmTarget'
  MCK_U16Imm, // user defined class 'u16ImmTarget'
  NumMatchClassKinds
};

}

static unsigned getDiagKindFromRegisterClass(MatchClassKind RegisterClass) {
  return MCTargetAsmParser::Match_InvalidOperand;
}

static MatchClassKind matchTokenString(StringRef Name) {
  switch (Name.size()) {
  default: break;
  case 3:	 // 4 strings to match.
    switch (Name[0]) {
    default: break;
    case 'g':	 // 2 strings to match.
      switch (Name[1]) {
      default: break;
      case 'd':	 // 1 string to match.
        if (Name[2] != 's')
          break;
        return MCK_gds;	 // "gds"
      case 'l':	 // 1 string to match.
        if (Name[2] != 'c')
          break;
        return MCK_glc;	 // "glc"
      }
      break;
    case 'l':	 // 1 string to match.
      if (memcmp(Name.data()+1, "ds", 2) != 0)
        break;
      return MCK_lds;	 // "lds"
    case 'o':	 // 1 string to match.
      if (memcmp(Name.data()+1, "ff", 2) != 0)
        break;
      return MCK_off;	 // "off"
    }
    break;
  case 4:	 // 1 string to match.
    if (memcmp(Name.data()+0, "done", 4) != 0)
      break;
    return MCK_done;	 // "done"
  case 5:	 // 2 strings to match.
    switch (Name[0]) {
    default: break;
    case 'i':	 // 1 string to match.
      if (memcmp(Name.data()+1, "dxen", 4) != 0)
        break;
      return MCK_idxen;	 // "idxen"
    case 'o':	 // 1 string to match.
      if (memcmp(Name.data()+1, "ffen", 4) != 0)
        break;
      return MCK_offen;	 // "offen"
    }
    break;
  case 6:	 // 1 string to match.
    if (memcmp(Name.data()+0, "addr64", 6) != 0)
      break;
    return MCK_addr64;	 // "addr64"
  }
  return InvalidMatchClass;
}

/// isSubclass - Compute whether \p A is a subclass of \p B.
static bool isSubclass(MatchClassKind A, MatchClassKind B) {
  if (A == B)
    return true;

  switch (A) {
  default:
    return false;

  case MCK_M0_CLASS:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XEXEC_HI: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_TTMP_512:
    return B == MCK_SReg_512;

  case MCK_VCC:
    switch (B) {
    default: return false;
    case MCK_SReg_64_XEXEC: return true;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_TTMP_256:
    return B == MCK_SReg_256;

  case MCK_TTMP_128:
    return B == MCK_SReg_128;

  case MCK_TTMP_64:
    switch (B) {
    default: return false;
    case MCK_SReg_64_XEXEC: return true;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_TTMP_32:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XM0_XEXEC: return true;
    case MCK_Reg4: return true;
    case MCK_SReg_32_XEXEC_HI: return true;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SGPR_512:
    return B == MCK_SReg_512;

  case MCK_SGPR_256:
    return B == MCK_SReg_256;

  case MCK_SGPR_128:
    return B == MCK_SReg_128;

  case MCK_SGPR_64:
    switch (B) {
    default: return false;
    case MCK_SReg_64_XEXEC: return true;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_SReg_64_XEXEC:
    switch (B) {
    default: return false;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_SReg_64:
    return B == MCK_VS_64;

  case MCK_SGPR_32:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XM0_XEXEC: return true;
    case MCK_Reg4: return true;
    case MCK_SReg_32_XEXEC_HI: return true;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32_XM0_XEXEC:
    switch (B) {
    default: return false;
    case MCK_Reg4: return true;
    case MCK_SReg_32_XEXEC_HI: return true;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_Reg4:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XEXEC_HI: return true;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32_XEXEC_HI:
    switch (B) {
    default: return false;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32_XM0:
    switch (B) {
    default: return false;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32:
    return B == MCK_VS_32;

  case MCK_VReg_64:
    return B == MCK_VS_64;

  case MCK_VGPR_32:
    return B == MCK_VS_32;

  case MCK_Swizzle:
    return B == OptionalMatchClass;

  case MCK_ImmOffen:
    return B == OptionalMatchClass;

  case MCK_ImmIdxen:
    return B == OptionalMatchClass;

  case MCK_ImmAddr64:
    return B == OptionalMatchClass;

  case MCK_ImmOffsetU12:
    return B == OptionalMatchClass;

  case MCK_ImmOffsetS13:
    return B == OptionalMatchClass;

  case MCK_ImmOffset:
    return B == OptionalMatchClass;

  case MCK_ImmOffset0:
    return B == OptionalMatchClass;

  case MCK_ImmOffset1:
    return B == OptionalMatchClass;

  case MCK_ImmGDS:
    return B == OptionalMatchClass;

  case MCK_ImmOModSI:
    return B == OptionalMatchClass;

  case MCK_ImmClampSI:
    return B == OptionalMatchClass;

  case MCK_ImmHigh:
    return B == OptionalMatchClass;

  case MCK_ImmGLC:
    return B == OptionalMatchClass;

  case MCK_ImmSLC:
    return B == OptionalMatchClass;

  case MCK_ImmTFE:
    return B == OptionalMatchClass;

  case MCK_ImmUNorm:
    return B == OptionalMatchClass;

  case MCK_ImmDA:
    return B == OptionalMatchClass;

  case MCK_ImmR128A16:
    return B == OptionalMatchClass;

  case MCK_ImmD16:
    return B == OptionalMatchClass;

  case MCK_ImmLWE:
    return B == OptionalMatchClass;

  case MCK_ImmExpCompr:
    return B == OptionalMatchClass;

  case MCK_ImmExpVM:
    return B == OptionalMatchClass;

  case MCK_ImmFORMAT:
    return B == OptionalMatchClass;

  case MCK_ImmDMask:
    return B == OptionalMatchClass;

  case MCK_ImmRowMask:
    return B == OptionalMatchClass;

  case MCK_ImmBankMask:
    return B == OptionalMatchClass;

  case MCK_ImmBoundCtrl:
    return B == OptionalMatchClass;

  case MCK_ImmSDWADstSel:
    return B == OptionalMatchClass;

  case MCK_ImmSDWASrc0Sel:
    return B == OptionalMatchClass;

  case MCK_ImmSDWASrc1Sel:
    return B == OptionalMatchClass;

  case MCK_ImmSDWADstUnused:
    return B == OptionalMatchClass;

  case MCK_ImmOpSel:
    return B == OptionalMatchClass;

  case MCK_ImmOpSelHi:
    return B == OptionalMatchClass;

  case MCK_ImmNegLo:
    return B == OptionalMatchClass;

  case MCK_ImmNegHi:
    return B == OptionalMatchClass;

  case MCK_ImmSMRDOffset8:
    return B == OptionalMatchClass;

  case MCK_ImmSMRDOffset20:
    return B == OptionalMatchClass;

  case MCK_ImmSMRDLiteralOffset:
    return B == OptionalMatchClass;
  }
}

static unsigned validateOperandClass(MCParsedAsmOperand &GOp, MatchClassKind Kind) {
  AMDGPUOperand &Operand = (AMDGPUOperand&)GOp;
  if (Kind == InvalidMatchClass)
    return MCTargetAsmParser::Match_InvalidOperand;

  if (Operand.isToken() && Kind <= MCK_LAST_TOKEN)
    return isSubclass(matchTokenString(Operand.getToken()), Kind) ?
             MCTargetAsmParser::Match_Success :
             MCTargetAsmParser::Match_InvalidOperand;

  switch (Kind) {
  default: break;
  // 'AttrChan' class
  case MCK_AttrChan: {
    DiagnosticPredicate DP(Operand.isAttrChan());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'Attr' class
  case MCK_Attr: {
    DiagnosticPredicate DP(Operand.isInterpAttr());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ExpTgt' class
  case MCK_ExpTgt: {
    DiagnosticPredicate DP(Operand.isExpTgt());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'RegOrImmWithFP16InputMods' class
  case MCK_RegOrImmWithFP16InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImmWithFP16InputMods());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SDWAWithFP16InputMods' class
  case MCK_SDWAWithFP16InputMods: {
    DiagnosticPredicate DP(Operand.isSDWAFP16Operand());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'RegOrImmWithFP32InputMods' class
  case MCK_RegOrImmWithFP32InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImmWithFP32InputMods());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SDWAWithFP32InputMods' class
  case MCK_SDWAWithFP32InputMods: {
    DiagnosticPredicate DP(Operand.isSDWAFP32Operand());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'RegOrImmWithFP64InputMods' class
  case MCK_RegOrImmWithFP64InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImmWithFP64InputMods());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VRegWithFPInputMods' class
  case MCK_VRegWithFPInputMods: {
    DiagnosticPredicate DP(Operand.isVReg());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'GPRIdxMode' class
  case MCK_GPRIdxMode: {
    DiagnosticPredicate DP(Operand.isGPRIdxMode());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'Imm' class
  case MCK_Imm: {
    DiagnosticPredicate DP(Operand.isImm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SDWAWithInt16InputMods' class
  case MCK_SDWAWithInt16InputMods: {
    DiagnosticPredicate DP(Operand.isSDWAInt16Operand());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'RegOrImmWithInt32InputMods' class
  case MCK_RegOrImmWithInt32InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImmWithInt32InputMods());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SDWAWithInt32InputMods' class
  case MCK_SDWAWithInt32InputMods: {
    DiagnosticPredicate DP(Operand.isSDWAInt32Operand());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'RegOrImmWithInt64InputMods' class
  case MCK_RegOrImmWithInt64InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImmWithInt64InputMods());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'OpSelMods' class
  case MCK_OpSelMods: {
    DiagnosticPredicate DP(Operand.isRegOrImm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VRegWithIntInputMods' class
  case MCK_VRegWithIntInputMods: {
    DiagnosticPredicate DP(Operand.isVReg());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'InterpSlot' class
  case MCK_InterpSlot: {
    DiagnosticPredicate DP(Operand.isInterpSlot());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'KImmFP16' class
  case MCK_KImmFP16: {
    DiagnosticPredicate DP(Operand.isKImmFP16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'KImmFP32' class
  case MCK_KImmFP32: {
    DiagnosticPredicate DP(Operand.isKImmFP32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'PackedFP16InputMods' class
  case MCK_PackedFP16InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'PackedInt16InputMods' class
  case MCK_PackedInt16InputMods: {
    DiagnosticPredicate DP(Operand.isRegOrImm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SWaitCnt' class
  case MCK_SWaitCnt: {
    DiagnosticPredicate DP(Operand.isSWaitCnt());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SendMsg' class
  case MCK_SendMsg: {
    DiagnosticPredicate DP(Operand.isSendMsg());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SoppBrTarget' class
  case MCK_SoppBrTarget: {
    DiagnosticPredicate DP(Operand.isSoppBrTarget());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'Swizzle' class
  case MCK_Swizzle: {
    DiagnosticPredicate DP(Operand.isSwizzle());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VReg32OrOff' class
  case MCK_VReg32OrOff: {
    DiagnosticPredicate DP(Operand.isVReg32OrOff());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcB16' class
  case MCK_SSrcB16: {
    DiagnosticPredicate DP(Operand.isSSrcB16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcF16' class
  case MCK_SSrcF16: {
    DiagnosticPredicate DP(Operand.isSSrcF16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcB32' class
  case MCK_SSrcB32: {
    DiagnosticPredicate DP(Operand.isSSrcB32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcF32' class
  case MCK_SSrcF32: {
    DiagnosticPredicate DP(Operand.isSSrcF32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcB64' class
  case MCK_SSrcB64: {
    DiagnosticPredicate DP(Operand.isSSrcB64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcF64' class
  case MCK_SSrcF64: {
    DiagnosticPredicate DP(Operand.isSSrcF64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcV2B16' class
  case MCK_SSrcV2B16: {
    DiagnosticPredicate DP(Operand.isSSrcV2B16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SSrcV2F16' class
  case MCK_SSrcV2F16: {
    DiagnosticPredicate DP(Operand.isSSrcV2F16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcB16' class
  case MCK_SCSrcB16: {
    DiagnosticPredicate DP(Operand.isSCSrcB16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcF16' class
  case MCK_SCSrcF16: {
    DiagnosticPredicate DP(Operand.isSCSrcF16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcB32' class
  case MCK_SCSrcB32: {
    DiagnosticPredicate DP(Operand.isSCSrcB32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcF32' class
  case MCK_SCSrcF32: {
    DiagnosticPredicate DP(Operand.isSCSrcF32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcB64' class
  case MCK_SCSrcB64: {
    DiagnosticPredicate DP(Operand.isSCSrcB64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcF64' class
  case MCK_SCSrcF64: {
    DiagnosticPredicate DP(Operand.isSCSrcF64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcV2B16' class
  case MCK_SCSrcV2B16: {
    DiagnosticPredicate DP(Operand.isSCSrcV2B16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'SCSrcV2F16' class
  case MCK_SCSrcV2F16: {
    DiagnosticPredicate DP(Operand.isSCSrcV2F16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcB16' class
  case MCK_VSrcB16: {
    DiagnosticPredicate DP(Operand.isVSrcB16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcF16' class
  case MCK_VSrcF16: {
    DiagnosticPredicate DP(Operand.isVSrcF16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcB32' class
  case MCK_VSrcB32: {
    DiagnosticPredicate DP(Operand.isVSrcB32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcF32' class
  case MCK_VSrcF32: {
    DiagnosticPredicate DP(Operand.isVSrcF32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcB64' class
  case MCK_VSrcB64: {
    DiagnosticPredicate DP(Operand.isVSrcB64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcF64' class
  case MCK_VSrcF64: {
    DiagnosticPredicate DP(Operand.isVSrcF64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcV2B16' class
  case MCK_VSrcV2B16: {
    DiagnosticPredicate DP(Operand.isVSrcV2B16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VSrcV2F16' class
  case MCK_VSrcV2F16: {
    DiagnosticPredicate DP(Operand.isVSrcV2F16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcB16' class
  case MCK_VCSrcB16: {
    DiagnosticPredicate DP(Operand.isVCSrcB16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcF16' class
  case MCK_VCSrcF16: {
    DiagnosticPredicate DP(Operand.isVCSrcF16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcB32' class
  case MCK_VCSrcB32: {
    DiagnosticPredicate DP(Operand.isVCSrcB32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcF32' class
  case MCK_VCSrcF32: {
    DiagnosticPredicate DP(Operand.isVCSrcF32());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcB64' class
  case MCK_VCSrcB64: {
    DiagnosticPredicate DP(Operand.isVCSrcB64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcF64' class
  case MCK_VCSrcF64: {
    DiagnosticPredicate DP(Operand.isVCSrcF64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcV2B16' class
  case MCK_VCSrcV2B16: {
    DiagnosticPredicate DP(Operand.isVCSrcV2B16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'VCSrcV2F16' class
  case MCK_VCSrcV2F16: {
    DiagnosticPredicate DP(Operand.isVCSrcV2F16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOffen' class
  case MCK_ImmOffen: {
    DiagnosticPredicate DP(Operand.isOffen());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmIdxen' class
  case MCK_ImmIdxen: {
    DiagnosticPredicate DP(Operand.isIdxen());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmAddr64' class
  case MCK_ImmAddr64: {
    DiagnosticPredicate DP(Operand.isAddr64());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOffsetU12' class
  case MCK_ImmOffsetU12: {
    DiagnosticPredicate DP(Operand.isOffsetU12());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOffsetS13' class
  case MCK_ImmOffsetS13: {
    DiagnosticPredicate DP(Operand.isOffsetS13());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOffset' class
  case MCK_ImmOffset: {
    DiagnosticPredicate DP(Operand.isOffset());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOffset0' class
  case MCK_ImmOffset0: {
    DiagnosticPredicate DP(Operand.isOffset0());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOffset1' class
  case MCK_ImmOffset1: {
    DiagnosticPredicate DP(Operand.isOffset1());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmGDS' class
  case MCK_ImmGDS: {
    DiagnosticPredicate DP(Operand.isGDS());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOModSI' class
  case MCK_ImmOModSI: {
    DiagnosticPredicate DP(Operand.isOModSI());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmClampSI' class
  case MCK_ImmClampSI: {
    DiagnosticPredicate DP(Operand.isClampSI());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmHigh' class
  case MCK_ImmHigh: {
    DiagnosticPredicate DP(Operand.isHigh());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmGLC' class
  case MCK_ImmGLC: {
    DiagnosticPredicate DP(Operand.isGLC());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSLC' class
  case MCK_ImmSLC: {
    DiagnosticPredicate DP(Operand.isSLC());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmTFE' class
  case MCK_ImmTFE: {
    DiagnosticPredicate DP(Operand.isTFE());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmUNorm' class
  case MCK_ImmUNorm: {
    DiagnosticPredicate DP(Operand.isUNorm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmDA' class
  case MCK_ImmDA: {
    DiagnosticPredicate DP(Operand.isDA());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmR128A16' class
  case MCK_ImmR128A16: {
    DiagnosticPredicate DP(Operand.isR128A16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmD16' class
  case MCK_ImmD16: {
    DiagnosticPredicate DP(Operand.isD16());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmLWE' class
  case MCK_ImmLWE: {
    DiagnosticPredicate DP(Operand.isLWE());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmExpCompr' class
  case MCK_ImmExpCompr: {
    DiagnosticPredicate DP(Operand.isExpCompr());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmExpVM' class
  case MCK_ImmExpVM: {
    DiagnosticPredicate DP(Operand.isExpVM());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmFORMAT' class
  case MCK_ImmFORMAT: {
    DiagnosticPredicate DP(Operand.isFORMAT());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmDMask' class
  case MCK_ImmDMask: {
    DiagnosticPredicate DP(Operand.isDMask());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmDPPCtrl' class
  case MCK_ImmDPPCtrl: {
    DiagnosticPredicate DP(Operand.isDPPCtrl());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmRowMask' class
  case MCK_ImmRowMask: {
    DiagnosticPredicate DP(Operand.isRowMask());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmBankMask' class
  case MCK_ImmBankMask: {
    DiagnosticPredicate DP(Operand.isBankMask());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmBoundCtrl' class
  case MCK_ImmBoundCtrl: {
    DiagnosticPredicate DP(Operand.isBoundCtrl());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSDWADstSel' class
  case MCK_ImmSDWADstSel: {
    DiagnosticPredicate DP(Operand.isSDWADstSel());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSDWASrc0Sel' class
  case MCK_ImmSDWASrc0Sel: {
    DiagnosticPredicate DP(Operand.isSDWASrc0Sel());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSDWASrc1Sel' class
  case MCK_ImmSDWASrc1Sel: {
    DiagnosticPredicate DP(Operand.isSDWASrc1Sel());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSDWADstUnused' class
  case MCK_ImmSDWADstUnused: {
    DiagnosticPredicate DP(Operand.isSDWADstUnused());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOpSel' class
  case MCK_ImmOpSel: {
    DiagnosticPredicate DP(Operand.isOpSel());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmOpSelHi' class
  case MCK_ImmOpSelHi: {
    DiagnosticPredicate DP(Operand.isOpSelHi());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmNegLo' class
  case MCK_ImmNegLo: {
    DiagnosticPredicate DP(Operand.isNegLo());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmNegHi' class
  case MCK_ImmNegHi: {
    DiagnosticPredicate DP(Operand.isNegHi());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmHwreg' class
  case MCK_ImmHwreg: {
    DiagnosticPredicate DP(Operand.isHwreg());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmExpTgt' class
  case MCK_ImmExpTgt: {
    DiagnosticPredicate DP(Operand.isExpTgt());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSMRDOffset8' class
  case MCK_ImmSMRDOffset8: {
    DiagnosticPredicate DP(Operand.isSMRDOffset8());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSMRDOffset20' class
  case MCK_ImmSMRDOffset20: {
    DiagnosticPredicate DP(Operand.isSMRDOffset20());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'ImmSMRDLiteralOffset' class
  case MCK_ImmSMRDLiteralOffset: {
    DiagnosticPredicate DP(Operand.isSMRDLiteralOffset());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'S16Imm' class
  case MCK_S16Imm: {
    DiagnosticPredicate DP(Operand.isS16Imm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  // 'U16Imm' class
  case MCK_U16Imm: {
    DiagnosticPredicate DP(Operand.isU16Imm());
    if (DP.isMatch())
      return MCTargetAsmParser::Match_Success;
    break;
    }
  } // end switch (Kind)

  if (Operand.isReg()) {
    MatchClassKind OpKind;
    switch (Operand.getReg()) {
    default: OpKind = InvalidMatchClass; break;
    case AMDGPU::VCC_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::VCC_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::PRIVATE_RSRC_REG: OpKind = MCK_Pseudo_SReg_128; break;
    case AMDGPU::FP_REG: OpKind = MCK_Pseudo_SReg_32; break;
    case AMDGPU::SP_REG: OpKind = MCK_Pseudo_SReg_32; break;
    case AMDGPU::SCRATCH_WAVE_OFFSET_REG: OpKind = MCK_Pseudo_SReg_32; break;
    case AMDGPU::VCC: OpKind = MCK_VCC; break;
    case AMDGPU::EXEC_LO: OpKind = MCK_Reg4; break;
    case AMDGPU::EXEC_HI: OpKind = MCK_SReg_32_XM0; break;
    case AMDGPU::EXEC: OpKind = MCK_SReg_64; break;
    case AMDGPU::SCC: OpKind = MCK_SCC_CLASS; break;
    case AMDGPU::M0: OpKind = MCK_M0_CLASS; break;
    case AMDGPU::SRC_SHARED_BASE: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::SRC_SHARED_LIMIT: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::SRC_PRIVATE_BASE: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::SRC_PRIVATE_LIMIT: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::XNACK_MASK_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::XNACK_MASK_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::XNACK_MASK: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::TBA_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TBA_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TBA: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::TMA_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TMA_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TMA: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::TTMP0: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP1: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP2: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP3: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP4: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP5: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP6: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP7: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP8: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP9: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP10: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP11: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP12: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP13: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP14: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP15: OpKind = MCK_TTMP_32; break;
    case AMDGPU::FLAT_SCR_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::FLAT_SCR_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::FLAT_SCR: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::SGPR0: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR1: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR2: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR3: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR4: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR5: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR6: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR7: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR8: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR9: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR10: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR11: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR12: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR13: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR14: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR15: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR16: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR17: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR18: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR19: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR20: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR21: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR22: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR23: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR24: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR25: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR26: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR27: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR28: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR29: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR30: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR31: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR32: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR33: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR34: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR35: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR36: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR37: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR38: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR39: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR40: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR41: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR42: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR43: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR44: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR45: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR46: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR47: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR48: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR49: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR50: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR51: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR52: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR53: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR54: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR55: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR56: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR57: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR58: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR59: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR60: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR61: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR62: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR63: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR64: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR65: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR66: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR67: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR68: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR69: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR70: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR71: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR72: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR73: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR74: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR75: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR76: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR77: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR78: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR79: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR80: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR81: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR82: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR83: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR84: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR85: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR86: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR87: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR88: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR89: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR90: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR91: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR92: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR93: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR94: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR95: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR96: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR97: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR98: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR99: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR100: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR101: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR102: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR103: OpKind = MCK_SGPR_32; break;
    case AMDGPU::VGPR0: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR1: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR2: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR3: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR4: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR5: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR6: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR7: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR8: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR9: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR10: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR11: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR12: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR13: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR14: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR15: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR16: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR17: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR18: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR19: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR20: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR21: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR22: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR23: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR24: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR25: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR26: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR27: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR28: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR29: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR30: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR31: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR32: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR33: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR34: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR35: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR36: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR37: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR38: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR39: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR40: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR41: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR42: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR43: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR44: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR45: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR46: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR47: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR48: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR49: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR50: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR51: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR52: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR53: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR54: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR55: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR56: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR57: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR58: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR59: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR60: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR61: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR62: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR63: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR64: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR65: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR66: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR67: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR68: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR69: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR70: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR71: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR72: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR73: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR74: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR75: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR76: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR77: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR78: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR79: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR80: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR81: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR82: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR83: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR84: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR85: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR86: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR87: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR88: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR89: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR90: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR91: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR92: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR93: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR94: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR95: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR96: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR97: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR98: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR99: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR100: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR101: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR102: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR103: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR104: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR105: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR106: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR107: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR108: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR109: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR110: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR111: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR112: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR113: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR114: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR115: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR116: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR117: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR118: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR119: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR120: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR121: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR122: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR123: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR124: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR125: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR126: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR127: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR128: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR129: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR130: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR131: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR132: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR133: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR134: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR135: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR136: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR137: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR138: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR139: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR140: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR141: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR142: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR143: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR144: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR145: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR146: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR147: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR148: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR149: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR150: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR151: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR152: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR153: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR154: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR155: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR156: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR157: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR158: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR159: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR160: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR161: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR162: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR163: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR164: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR165: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR166: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR167: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR168: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR169: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR170: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR171: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR172: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR173: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR174: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR175: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR176: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR177: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR178: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR179: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR180: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR181: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR182: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR183: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR184: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR185: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR186: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR187: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR188: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR189: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR190: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR191: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR192: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR193: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR194: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR195: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR196: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR197: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR198: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR199: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR200: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR201: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR202: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR203: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR204: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR205: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR206: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR207: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR208: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR209: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR210: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR211: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR212: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR213: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR214: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR215: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR216: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR217: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR218: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR219: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR220: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR221: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR222: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR223: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR224: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR225: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR226: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR227: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR228: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR229: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR230: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR231: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR232: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR233: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR234: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR235: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR236: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR237: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR238: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR239: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR240: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR241: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR242: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR243: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR244: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR245: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR246: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR247: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR248: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR249: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR250: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR251: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR252: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR253: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR254: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR255: OpKind = MCK_VGPR_32; break;
    case AMDGPU::SGPR0_SGPR1_SGPR2_SGPR3: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR4_SGPR5_SGPR6_SGPR7: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR8_SGPR9_SGPR10_SGPR11: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR12_SGPR13_SGPR14_SGPR15: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR16_SGPR17_SGPR18_SGPR19: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR20_SGPR21_SGPR22_SGPR23: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR24_SGPR25_SGPR26_SGPR27: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR28_SGPR29_SGPR30_SGPR31: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR32_SGPR33_SGPR34_SGPR35: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR36_SGPR37_SGPR38_SGPR39: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR40_SGPR41_SGPR42_SGPR43: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR44_SGPR45_SGPR46_SGPR47: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR48_SGPR49_SGPR50_SGPR51: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR52_SGPR53_SGPR54_SGPR55: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR56_SGPR57_SGPR58_SGPR59: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR60_SGPR61_SGPR62_SGPR63: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR64_SGPR65_SGPR66_SGPR67: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR68_SGPR69_SGPR70_SGPR71: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR72_SGPR73_SGPR74_SGPR75: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR76_SGPR77_SGPR78_SGPR79: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR80_SGPR81_SGPR82_SGPR83: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR84_SGPR85_SGPR86_SGPR87: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR88_SGPR89_SGPR90_SGPR91: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR92_SGPR93_SGPR94_SGPR95: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR96_SGPR97_SGPR98_SGPR99: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR100_SGPR101_SGPR102_SGPR103: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR0_SGPR1_SGPR2_SGPR3_SGPR4_SGPR5_SGPR6_SGPR7: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR4_SGPR5_SGPR6_SGPR7_SGPR8_SGPR9_SGPR10_SGPR11: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR92_SGPR93_SGPR94_SGPR95_SGPR96_SGPR97_SGPR98_SGPR99: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR96_SGPR97_SGPR98_SGPR99_SGPR100_SGPR101_SGPR102_SGPR103: OpKind = MCK_SGPR_256; break;
    case AMDGPU::SGPR0_SGPR1_SGPR2_SGPR3_SGPR4_SGPR5_SGPR6_SGPR7_SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR4_SGPR5_SGPR6_SGPR7_SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95_SGPR96_SGPR97_SGPR98_SGPR99: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95_SGPR96_SGPR97_SGPR98_SGPR99_SGPR100_SGPR101_SGPR102_SGPR103: OpKind = MCK_SGPR_512; break;
    case AMDGPU::SGPR0_SGPR1: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR2_SGPR3: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR4_SGPR5: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR6_SGPR7: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR8_SGPR9: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR10_SGPR11: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR12_SGPR13: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR14_SGPR15: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR16_SGPR17: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR18_SGPR19: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR20_SGPR21: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR22_SGPR23: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR24_SGPR25: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR26_SGPR27: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR28_SGPR29: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR30_SGPR31: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR32_SGPR33: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR34_SGPR35: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR36_SGPR37: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR38_SGPR39: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR40_SGPR41: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR42_SGPR43: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR44_SGPR45: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR46_SGPR47: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR48_SGPR49: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR50_SGPR51: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR52_SGPR53: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR54_SGPR55: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR56_SGPR57: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR58_SGPR59: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR60_SGPR61: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR62_SGPR63: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR64_SGPR65: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR66_SGPR67: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR68_SGPR69: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR70_SGPR71: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR72_SGPR73: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR74_SGPR75: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR76_SGPR77: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR78_SGPR79: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR80_SGPR81: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR82_SGPR83: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR84_SGPR85: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR86_SGPR87: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR88_SGPR89: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR90_SGPR91: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR92_SGPR93: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR94_SGPR95: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR96_SGPR97: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR98_SGPR99: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR100_SGPR101: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR102_SGPR103: OpKind = MCK_SGPR_64; break;
    case AMDGPU::TTMP0_TTMP1_TTMP2_TTMP3: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP4_TTMP5_TTMP6_TTMP7: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP8_TTMP9_TTMP10_TTMP11: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP12_TTMP13_TTMP14_TTMP15: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP0_TTMP1_TTMP2_TTMP3_TTMP4_TTMP5_TTMP6_TTMP7: OpKind = MCK_TTMP_256; break;
    case AMDGPU::TTMP4_TTMP5_TTMP6_TTMP7_TTMP8_TTMP9_TTMP10_TTMP11: OpKind = MCK_TTMP_256; break;
    case AMDGPU::TTMP8_TTMP9_TTMP10_TTMP11_TTMP12_TTMP13_TTMP14_TTMP15: OpKind = MCK_TTMP_256; break;
    case AMDGPU::TTMP0_TTMP1_TTMP2_TTMP3_TTMP4_TTMP5_TTMP6_TTMP7_TTMP8_TTMP9_TTMP10_TTMP11_TTMP12_TTMP13_TTMP14_TTMP15: OpKind = MCK_TTMP_512; break;
    case AMDGPU::TTMP0_TTMP1: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP2_TTMP3: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP4_TTMP5: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP6_TTMP7: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP8_TTMP9: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP10_TTMP11: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP12_TTMP13: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP14_TTMP15: OpKind = MCK_TTMP_64; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2_VGPR3: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3_VGPR4: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4_VGPR5: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5_VGPR6: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6_VGPR7: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7_VGPR8: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8_VGPR9: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9_VGPR10: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10_VGPR11: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11_VGPR12: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12_VGPR13: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13_VGPR14: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR241_VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR242_VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR243_VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR244_VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR245_VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR246_VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR247_VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR248_VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR249_VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR250_VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR251_VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR252_VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR0_VGPR1: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR1_VGPR2: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR2_VGPR3: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR3_VGPR4: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR4_VGPR5: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR5_VGPR6: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR6_VGPR7: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR7_VGPR8: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR8_VGPR9: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR9_VGPR10: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR10_VGPR11: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR11_VGPR12: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR12_VGPR13: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR13_VGPR14: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR14_VGPR15: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR15_VGPR16: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR16_VGPR17: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR17_VGPR18: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR18_VGPR19: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR19_VGPR20: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR20_VGPR21: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR21_VGPR22: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR22_VGPR23: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR23_VGPR24: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR24_VGPR25: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR25_VGPR26: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR26_VGPR27: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR27_VGPR28: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR28_VGPR29: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR29_VGPR30: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR30_VGPR31: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR31_VGPR32: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR32_VGPR33: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR33_VGPR34: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR34_VGPR35: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR35_VGPR36: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR36_VGPR37: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR37_VGPR38: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR38_VGPR39: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR39_VGPR40: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR40_VGPR41: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR41_VGPR42: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR42_VGPR43: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR43_VGPR44: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR44_VGPR45: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR45_VGPR46: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR46_VGPR47: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR47_VGPR48: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR48_VGPR49: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR49_VGPR50: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR50_VGPR51: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR51_VGPR52: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR52_VGPR53: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR53_VGPR54: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR54_VGPR55: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR55_VGPR56: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR56_VGPR57: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR57_VGPR58: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR58_VGPR59: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR59_VGPR60: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR60_VGPR61: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR61_VGPR62: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR62_VGPR63: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR63_VGPR64: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR64_VGPR65: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR65_VGPR66: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR66_VGPR67: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR67_VGPR68: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR68_VGPR69: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR69_VGPR70: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR70_VGPR71: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR71_VGPR72: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR72_VGPR73: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR73_VGPR74: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR74_VGPR75: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR75_VGPR76: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR76_VGPR77: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR77_VGPR78: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR78_VGPR79: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR79_VGPR80: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR80_VGPR81: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR81_VGPR82: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR82_VGPR83: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR83_VGPR84: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR84_VGPR85: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR85_VGPR86: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR86_VGPR87: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR87_VGPR88: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR88_VGPR89: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR89_VGPR90: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR90_VGPR91: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR91_VGPR92: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR92_VGPR93: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR93_VGPR94: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR94_VGPR95: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR95_VGPR96: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR96_VGPR97: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR97_VGPR98: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR98_VGPR99: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR99_VGPR100: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR100_VGPR101: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR101_VGPR102: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR102_VGPR103: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR103_VGPR104: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR104_VGPR105: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR105_VGPR106: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR106_VGPR107: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR107_VGPR108: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR108_VGPR109: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR109_VGPR110: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR110_VGPR111: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR111_VGPR112: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR112_VGPR113: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR113_VGPR114: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR114_VGPR115: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR115_VGPR116: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR116_VGPR117: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR117_VGPR118: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR118_VGPR119: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR119_VGPR120: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR120_VGPR121: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR121_VGPR122: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR122_VGPR123: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR123_VGPR124: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR124_VGPR125: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR125_VGPR126: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR126_VGPR127: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR127_VGPR128: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR128_VGPR129: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR129_VGPR130: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR130_VGPR131: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR131_VGPR132: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR132_VGPR133: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR133_VGPR134: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR134_VGPR135: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR135_VGPR136: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR136_VGPR137: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR137_VGPR138: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR138_VGPR139: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR139_VGPR140: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR140_VGPR141: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR141_VGPR142: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR142_VGPR143: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR143_VGPR144: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR144_VGPR145: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR145_VGPR146: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR146_VGPR147: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR147_VGPR148: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR148_VGPR149: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR149_VGPR150: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR150_VGPR151: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR151_VGPR152: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR152_VGPR153: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR153_VGPR154: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR154_VGPR155: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR155_VGPR156: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR156_VGPR157: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR157_VGPR158: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR158_VGPR159: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR159_VGPR160: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR160_VGPR161: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR161_VGPR162: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR162_VGPR163: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR163_VGPR164: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR164_VGPR165: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR165_VGPR166: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR166_VGPR167: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR167_VGPR168: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR168_VGPR169: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR169_VGPR170: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR170_VGPR171: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR171_VGPR172: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR172_VGPR173: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR173_VGPR174: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR174_VGPR175: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR175_VGPR176: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR176_VGPR177: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR177_VGPR178: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR178_VGPR179: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR179_VGPR180: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR180_VGPR181: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR181_VGPR182: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR182_VGPR183: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR183_VGPR184: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR184_VGPR185: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR185_VGPR186: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR186_VGPR187: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR187_VGPR188: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR188_VGPR189: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR189_VGPR190: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR190_VGPR191: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR191_VGPR192: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR192_VGPR193: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR193_VGPR194: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR194_VGPR195: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR195_VGPR196: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR196_VGPR197: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR197_VGPR198: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR198_VGPR199: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR199_VGPR200: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR200_VGPR201: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR201_VGPR202: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR202_VGPR203: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR203_VGPR204: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR204_VGPR205: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR205_VGPR206: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR206_VGPR207: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR207_VGPR208: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR208_VGPR209: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR209_VGPR210: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR210_VGPR211: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR211_VGPR212: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR212_VGPR213: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR213_VGPR214: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR214_VGPR215: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR215_VGPR216: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR216_VGPR217: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR217_VGPR218: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR218_VGPR219: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR219_VGPR220: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR220_VGPR221: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR221_VGPR222: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR222_VGPR223: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR223_VGPR224: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR224_VGPR225: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR225_VGPR226: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR226_VGPR227: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR227_VGPR228: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR228_VGPR229: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR229_VGPR230: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR230_VGPR231: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR231_VGPR232: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR232_VGPR233: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR233_VGPR234: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR234_VGPR235: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR235_VGPR236: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR236_VGPR237: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR237_VGPR238: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR238_VGPR239: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR239_VGPR240: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR240_VGPR241: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR241_VGPR242: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR242_VGPR243: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR243_VGPR244: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR244_VGPR245: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR245_VGPR246: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR246_VGPR247: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR247_VGPR248: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR248_VGPR249: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR249_VGPR250: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR250_VGPR251: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR251_VGPR252: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR252_VGPR253: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR253_VGPR254: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR254_VGPR255: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_96; break;
    }
    return isSubclass(OpKind, Kind) ? (unsigned)MCTargetAsmParser::Match_Success :
                                      getDiagKindFromRegisterClass(Kind);
  }

  if (Kind > MCK_LAST_TOKEN && Kind <= MCK_LAST_REGISTER)
    return getDiagKindFromRegisterClass(Kind);

  return MCTargetAsmParser::Match_InvalidOperand;
}

#ifndef NDEBUG
const char *getMatchClassName(MatchClassKind Kind) {
  switch (Kind) {
  case InvalidMatchClass: return "InvalidMatchClass";
  case OptionalMatchClass: return "OptionalMatchClass";
  case MCK_addr64: return "MCK_addr64";
  case MCK_done: return "MCK_done";
  case MCK_gds: return "MCK_gds";
  case MCK_glc: return "MCK_glc";
  case MCK_idxen: return "MCK_idxen";
  case MCK_lds: return "MCK_lds";
  case MCK_off: return "MCK_off";
  case MCK_offen: return "MCK_offen";
  case MCK_M0_CLASS: return "MCK_M0_CLASS";
  case MCK_Pseudo_SReg_128: return "MCK_Pseudo_SReg_128";
  case MCK_SCC_CLASS: return "MCK_SCC_CLASS";
  case MCK_TTMP_512: return "MCK_TTMP_512";
  case MCK_VCC: return "MCK_VCC";
  case MCK_Pseudo_SReg_32: return "MCK_Pseudo_SReg_32";
  case MCK_TTMP_256: return "MCK_TTMP_256";
  case MCK_TTMP_128: return "MCK_TTMP_128";
  case MCK_TTMP_64: return "MCK_TTMP_64";
  case MCK_TTMP_32: return "MCK_TTMP_32";
  case MCK_SGPR_512: return "MCK_SGPR_512";
  case MCK_SReg_512: return "MCK_SReg_512";
  case MCK_SGPR_256: return "MCK_SGPR_256";
  case MCK_SGPR_128: return "MCK_SGPR_128";
  case MCK_SReg_256: return "MCK_SReg_256";
  case MCK_SReg_128: return "MCK_SReg_128";
  case MCK_SGPR_64: return "MCK_SGPR_64";
  case MCK_SReg_64_XEXEC: return "MCK_SReg_64_XEXEC";
  case MCK_SReg_64: return "MCK_SReg_64";
  case MCK_SGPR_32: return "MCK_SGPR_32";
  case MCK_SReg_32_XM0_XEXEC: return "MCK_SReg_32_XM0_XEXEC";
  case MCK_Reg4: return "MCK_Reg4";
  case MCK_SReg_32_XEXEC_HI: return "MCK_SReg_32_XEXEC_HI";
  case MCK_SReg_32_XM0: return "MCK_SReg_32_XM0";
  case MCK_SReg_32: return "MCK_SReg_32";
  case MCK_VReg_512: return "MCK_VReg_512";
  case MCK_VReg_256: return "MCK_VReg_256";
  case MCK_VReg_128: return "MCK_VReg_128";
  case MCK_VReg_96: return "MCK_VReg_96";
  case MCK_VReg_64: return "MCK_VReg_64";
  case MCK_VGPR_32: return "MCK_VGPR_32";
  case MCK_VS_64: return "MCK_VS_64";
  case MCK_VS_32: return "MCK_VS_32";
  case MCK_AttrChan: return "MCK_AttrChan";
  case MCK_Attr: return "MCK_Attr";
  case MCK_ExpTgt: return "MCK_ExpTgt";
  case MCK_RegOrImmWithFP16InputMods: return "MCK_RegOrImmWithFP16InputMods";
  case MCK_SDWAWithFP16InputMods: return "MCK_SDWAWithFP16InputMods";
  case MCK_RegOrImmWithFP32InputMods: return "MCK_RegOrImmWithFP32InputMods";
  case MCK_SDWAWithFP32InputMods: return "MCK_SDWAWithFP32InputMods";
  case MCK_RegOrImmWithFP64InputMods: return "MCK_RegOrImmWithFP64InputMods";
  case MCK_VRegWithFPInputMods: return "MCK_VRegWithFPInputMods";
  case MCK_GPRIdxMode: return "MCK_GPRIdxMode";
  case MCK_Imm: return "MCK_Imm";
  case MCK_SDWAWithInt16InputMods: return "MCK_SDWAWithInt16InputMods";
  case MCK_RegOrImmWithInt32InputMods: return "MCK_RegOrImmWithInt32InputMods";
  case MCK_SDWAWithInt32InputMods: return "MCK_SDWAWithInt32InputMods";
  case MCK_RegOrImmWithInt64InputMods: return "MCK_RegOrImmWithInt64InputMods";
  case MCK_OpSelMods: return "MCK_OpSelMods";
  case MCK_VRegWithIntInputMods: return "MCK_VRegWithIntInputMods";
  case MCK_InterpSlot: return "MCK_InterpSlot";
  case MCK_KImmFP16: return "MCK_KImmFP16";
  case MCK_KImmFP32: return "MCK_KImmFP32";
  case MCK_PackedFP16InputMods: return "MCK_PackedFP16InputMods";
  case MCK_PackedInt16InputMods: return "MCK_PackedInt16InputMods";
  case MCK_SWaitCnt: return "MCK_SWaitCnt";
  case MCK_SendMsg: return "MCK_SendMsg";
  case MCK_SoppBrTarget: return "MCK_SoppBrTarget";
  case MCK_Swizzle: return "MCK_Swizzle";
  case MCK_VReg32OrOff: return "MCK_VReg32OrOff";
  case MCK_SSrcB16: return "MCK_SSrcB16";
  case MCK_SSrcF16: return "MCK_SSrcF16";
  case MCK_SSrcB32: return "MCK_SSrcB32";
  case MCK_SSrcF32: return "MCK_SSrcF32";
  case MCK_SSrcB64: return "MCK_SSrcB64";
  case MCK_SSrcF64: return "MCK_SSrcF64";
  case MCK_SSrcV2B16: return "MCK_SSrcV2B16";
  case MCK_SSrcV2F16: return "MCK_SSrcV2F16";
  case MCK_SCSrcB16: return "MCK_SCSrcB16";
  case MCK_SCSrcF16: return "MCK_SCSrcF16";
  case MCK_SCSrcB32: return "MCK_SCSrcB32";
  case MCK_SCSrcF32: return "MCK_SCSrcF32";
  case MCK_SCSrcB64: return "MCK_SCSrcB64";
  case MCK_SCSrcF64: return "MCK_SCSrcF64";
  case MCK_SCSrcV2B16: return "MCK_SCSrcV2B16";
  case MCK_SCSrcV2F16: return "MCK_SCSrcV2F16";
  case MCK_VSrcB16: return "MCK_VSrcB16";
  case MCK_VSrcF16: return "MCK_VSrcF16";
  case MCK_VSrcB32: return "MCK_VSrcB32";
  case MCK_VSrcF32: return "MCK_VSrcF32";
  case MCK_VSrcB64: return "MCK_VSrcB64";
  case MCK_VSrcF64: return "MCK_VSrcF64";
  case MCK_VSrcV2B16: return "MCK_VSrcV2B16";
  case MCK_VSrcV2F16: return "MCK_VSrcV2F16";
  case MCK_VCSrcB16: return "MCK_VCSrcB16";
  case MCK_VCSrcF16: return "MCK_VCSrcF16";
  case MCK_VCSrcB32: return "MCK_VCSrcB32";
  case MCK_VCSrcF32: return "MCK_VCSrcF32";
  case MCK_VCSrcB64: return "MCK_VCSrcB64";
  case MCK_VCSrcF64: return "MCK_VCSrcF64";
  case MCK_VCSrcV2B16: return "MCK_VCSrcV2B16";
  case MCK_VCSrcV2F16: return "MCK_VCSrcV2F16";
  case MCK_ImmOffen: return "MCK_ImmOffen";
  case MCK_ImmIdxen: return "MCK_ImmIdxen";
  case MCK_ImmAddr64: return "MCK_ImmAddr64";
  case MCK_ImmOffsetU12: return "MCK_ImmOffsetU12";
  case MCK_ImmOffsetS13: return "MCK_ImmOffsetS13";
  case MCK_ImmOffset: return "MCK_ImmOffset";
  case MCK_ImmOffset0: return "MCK_ImmOffset0";
  case MCK_ImmOffset1: return "MCK_ImmOffset1";
  case MCK_ImmGDS: return "MCK_ImmGDS";
  case MCK_ImmOModSI: return "MCK_ImmOModSI";
  case MCK_ImmClampSI: return "MCK_ImmClampSI";
  case MCK_ImmHigh: return "MCK_ImmHigh";
  case MCK_ImmGLC: return "MCK_ImmGLC";
  case MCK_ImmSLC: return "MCK_ImmSLC";
  case MCK_ImmTFE: return "MCK_ImmTFE";
  case MCK_ImmUNorm: return "MCK_ImmUNorm";
  case MCK_ImmDA: return "MCK_ImmDA";
  case MCK_ImmR128A16: return "MCK_ImmR128A16";
  case MCK_ImmD16: return "MCK_ImmD16";
  case MCK_ImmLWE: return "MCK_ImmLWE";
  case MCK_ImmExpCompr: return "MCK_ImmExpCompr";
  case MCK_ImmExpVM: return "MCK_ImmExpVM";
  case MCK_ImmFORMAT: return "MCK_ImmFORMAT";
  case MCK_ImmDMask: return "MCK_ImmDMask";
  case MCK_ImmDPPCtrl: return "MCK_ImmDPPCtrl";
  case MCK_ImmRowMask: return "MCK_ImmRowMask";
  case MCK_ImmBankMask: return "MCK_ImmBankMask";
  case MCK_ImmBoundCtrl: return "MCK_ImmBoundCtrl";
  case MCK_ImmSDWADstSel: return "MCK_ImmSDWADstSel";
  case MCK_ImmSDWASrc0Sel: return "MCK_ImmSDWASrc0Sel";
  case MCK_ImmSDWASrc1Sel: return "MCK_ImmSDWASrc1Sel";
  case MCK_ImmSDWADstUnused: return "MCK_ImmSDWADstUnused";
  case MCK_ImmOpSel: return "MCK_ImmOpSel";
  case MCK_ImmOpSelHi: return "MCK_ImmOpSelHi";
  case MCK_ImmNegLo: return "MCK_ImmNegLo";
  case MCK_ImmNegHi: return "MCK_ImmNegHi";
  case MCK_ImmHwreg: return "MCK_ImmHwreg";
  case MCK_ImmExpTgt: return "MCK_ImmExpTgt";
  case MCK_ImmSMRDOffset8: return "MCK_ImmSMRDOffset8";
  case MCK_ImmSMRDOffset20: return "MCK_ImmSMRDOffset20";
  case MCK_ImmSMRDLiteralOffset: return "MCK_ImmSMRDLiteralOffset";
  case MCK_S16Imm: return "MCK_S16Imm";
  case MCK_U16Imm: return "MCK_U16Imm";
  case NumMatchClassKinds: return "NumMatchClassKinds";
  }
  llvm_unreachable("unhandled MatchClassKind!");
}

#endif // NDEBUG
uint64_t AMDGPUAsmParser::
ComputeAvailableFeatures(const FeatureBitset& FB) const {
  uint64_t Features = 0;
  if ((!FB[AMDGPU::FeatureGCN3Encoding]))
    Features |= Feature_isSICI;
  if ((FB[AMDGPU::FeatureGCN3Encoding]))
    Features |= Feature_isVI;
  if ((FB[AMDGPU::FeatureGFX9Insts]))
    Features |= Feature_isGFX9;
  if ((FB[AMDGPU::FeatureCIInsts]))
    Features |= Feature_isCIVI;
  if ((FB[AMDGPU::FeatureFlatAddressSpace]))
    Features |= Feature_HasFlatAddressSpace;
  if ((FB[AMDGPU::FeatureFlatGlobalInsts]))
    Features |= Feature_HasFlatGlobalInsts;
  if ((FB[AMDGPU::FeatureFlatScratchInsts]))
    Features |= Feature_HasFlatScratchInsts;
  if ((FB[AMDGPU::FeatureGFX9Insts]))
    Features |= Feature_HasD16LoadStore;
  if ((FB[AMDGPU::FeatureUnpackedD16VMem]))
    Features |= Feature_HasUnpackedD16VMem;
  if ((!FB[AMDGPU::FeatureUnpackedD16VMem]))
    Features |= Feature_HasPackedD16VMem;
  if ((FB[AMDGPU::FeatureGFX9Insts]) && (!FB[AMDGPU::FeatureSRAMECC]))
    Features |= Feature_D16PreservesUnusedBits;
  if ((FB[AMDGPU::FeatureGFX9Insts]))
    Features |= Feature_HasDSAddTid;
  if ((FB[AMDGPU::FeatureAddNoCarryInsts]))
    Features |= Feature_HasAddNoCarryInsts;
  if ((!FB[AMDGPU::FeatureAddNoCarryInsts]))
    Features |= Feature_NotHasAddNoCarryInsts;
  if ((FB[AMDGPU::Feature16BitInsts]))
    Features |= Feature_Has16BitInsts;
  if ((FB[AMDGPU::FeatureVOP3P]))
    Features |= Feature_HasVOP3PInsts;
  if ((!FB[AMDGPU::FeatureVOP3P]))
    Features |= Feature_NotHasVOP3PInsts;
  if ((FB[AMDGPU::FeatureSDWA]) && (FB[AMDGPU::FeatureVolcanicIslands]))
    Features |= Feature_HasSDWA;
  if ((FB[AMDGPU::FeatureSDWA]) && (FB[AMDGPU::FeatureGFX9]))
    Features |= Feature_HasSDWA9;
  if ((FB[AMDGPU::FeatureDPP]))
    Features |= Feature_HasDPP;
  if ((FB[AMDGPU::FeatureR128A16]))
    Features |= Feature_HasR128A16;
  if ((FB[AMDGPU::FeatureIntClamp]))
    Features |= Feature_HasIntClamp;
  if ((FB[AMDGPU::FeatureMadMixInsts]))
    Features |= Feature_HasMadMixInsts;
  if ((FB[AMDGPU::FeatureScalarAtomics]))
    Features |= Feature_HasScalarAtomics;
  if ((FB[AMDGPU::FeatureVGPRIndexMode]))
    Features |= Feature_HasVGPRIndexMode;
  if ((FB[AMDGPU::FeatureMovrel]))
    Features |= Feature_HasMovrel;
  if ((FB[AMDGPU::FeatureFmaMixInsts]))
    Features |= Feature_HasFmaMixInsts;
  if ((FB[AMDGPU::FeatureDLInsts]))
    Features |= Feature_HasDLInsts;
  if ((FB[AMDGPU::FeatureDotInsts]))
    Features |= Feature_HasDotInsts;
  if ((FB[AMDGPU::FeatureSeaIslands]))
    Features |= Feature_isCIOnly;
  if ((FB[AMDGPU::FeatureVolcanicIslands]))
    Features |= Feature_isVIOnly;
  if ((FB[AMDGPU::FeatureDisable]))
    Features |= Feature_DisableInst;
  if ((FB[AMDGPU::FeatureGCN]))
    Features |= Feature_isGCN;
  if ((FB[AMDGPU::FeatureSouthernIslands]))
    Features |= Feature_isSI;
  return Features;
}

static bool checkAsmTiedOperandConstraints(const AMDGPUAsmParser&AsmParser,
                               unsigned Kind,
                               const OperandVector &Operands,
                               uint64_t &ErrorInfo) {
  assert(Kind < CVT_NUM_SIGNATURES && "Invalid signature!");
  const uint8_t *Converter = ConversionTable[Kind];
  for (const uint8_t *p = Converter; *p; p+= 2) {
    switch (*p) {
    case CVT_Tied: {
      unsigned OpIdx = *(p+1);
      assert(OpIdx < (size_t)(std::end(TiedAsmOperandTable) -
                              std::begin(TiedAsmOperandTable)) &&
             "Tied operand not found");
      unsigned OpndNum1 = TiedAsmOperandTable[OpIdx][1];
      unsigned OpndNum2 = TiedAsmOperandTable[OpIdx][2];
      if (OpndNum1 != OpndNum2) {
        auto &SrcOp1 = Operands[OpndNum1];
        auto &SrcOp2 = Operands[OpndNum2];
        if (SrcOp1->isReg() && SrcOp2->isReg()) {
          if (!AsmParser.regsEqual(*SrcOp1, *SrcOp2)) {
            ErrorInfo = OpndNum2;
            return false;
          }
        }
      }
      break;
    }
    default:
      break;
    }
  }
  return true;
}

static const char *const MnemonicTable =
    "\021buffer_atomic_add\024buffer_atomic_add_x2\021buffer_atomic_and\024b"
    "uffer_atomic_and_x2\025buffer_atomic_cmpswap\030buffer_atomic_cmpswap_x"
    "2\021buffer_atomic_dec\024buffer_atomic_dec_x2\021buffer_atomic_inc\024"
    "buffer_atomic_inc_x2\020buffer_atomic_or\023buffer_atomic_or_x2\022buff"
    "er_atomic_smax\025buffer_atomic_smax_x2\022buffer_atomic_smin\025buffer"
    "_atomic_smin_x2\021buffer_atomic_sub\024buffer_atomic_sub_x2\022buffer_"
    "atomic_swap\025buffer_atomic_swap_x2\022buffer_atomic_umax\025buffer_at"
    "omic_umax_x2\022buffer_atomic_umin\025buffer_atomic_umin_x2\021buffer_a"
    "tomic_xor\024buffer_atomic_xor_x2\021buffer_load_dword\023buffer_load_d"
    "wordx2\023buffer_load_dwordx3\023buffer_load_dwordx4\033buffer_load_for"
    "mat_d16_hi_x\030buffer_load_format_d16_x\031buffer_load_format_d16_xy\032"
    "buffer_load_format_d16_xyz\033buffer_load_format_d16_xyzw\024buffer_loa"
    "d_format_x\025buffer_load_format_xy\026buffer_load_format_xyz\027buffer"
    "_load_format_xyzw\021buffer_load_sbyte\025buffer_load_sbyte_d16\030buff"
    "er_load_sbyte_d16_hi\025buffer_load_short_d16\030buffer_load_short_d16_"
    "hi\022buffer_load_sshort\021buffer_load_ubyte\025buffer_load_ubyte_d16\030"
    "buffer_load_ubyte_d16_hi\022buffer_load_ushort\021buffer_store_byte\030"
    "buffer_store_byte_d16_hi\022buffer_store_dword\024buffer_store_dwordx2\024"
    "buffer_store_dwordx3\024buffer_store_dwordx4\034buffer_store_format_d16"
    "_hi_x\031buffer_store_format_d16_x\032buffer_store_format_d16_xy\033buf"
    "fer_store_format_d16_xyz\034buffer_store_format_d16_xyzw\025buffer_stor"
    "e_format_x\026buffer_store_format_xy\027buffer_store_format_xyz\030buff"
    "er_store_format_xyzw\026buffer_store_lds_dword\022buffer_store_short\031"
    "buffer_store_short_d16_hi\016buffer_wbinvl1\021buffer_wbinvl1_sc\022buf"
    "fer_wbinvl1_vol\nds_add_f32\016ds_add_rtn_f32\016ds_add_rtn_u32\016ds_a"
    "dd_rtn_u64\017ds_add_src2_f32\017ds_add_src2_u32\017ds_add_src2_u64\nds"
    "_add_u32\nds_add_u64\nds_and_b32\nds_and_b64\016ds_and_rtn_b32\016ds_an"
    "d_rtn_b64\017ds_and_src2_b32\017ds_and_src2_b64\tds_append\017ds_bpermu"
    "te_b32\014ds_cmpst_b32\014ds_cmpst_b64\014ds_cmpst_f32\014ds_cmpst_f64\020"
    "ds_cmpst_rtn_b32\020ds_cmpst_rtn_b64\020ds_cmpst_rtn_f32\020ds_cmpst_rt"
    "n_f64\025ds_condxchg32_rtn_b64\nds_consume\016ds_dec_rtn_u32\016ds_dec_"
    "rtn_u64\017ds_dec_src2_u32\017ds_dec_src2_u64\nds_dec_u32\nds_dec_u64\016"
    "ds_gws_barrier\013ds_gws_init\016ds_gws_sema_br\015ds_gws_sema_p\027ds_"
    "gws_sema_release_all\015ds_gws_sema_v\016ds_inc_rtn_u32\016ds_inc_rtn_u"
    "64\017ds_inc_src2_u32\017ds_inc_src2_u64\nds_inc_u32\nds_inc_u64\nds_ma"
    "x_f32\nds_max_f64\nds_max_i32\nds_max_i64\016ds_max_rtn_f32\016ds_max_r"
    "tn_f64\016ds_max_rtn_i32\016ds_max_rtn_i64\016ds_max_rtn_u32\016ds_max_"
    "rtn_u64\017ds_max_src2_f32\017ds_max_src2_f64\017ds_max_src2_i32\017ds_"
    "max_src2_i64\017ds_max_src2_u32\017ds_max_src2_u64\nds_max_u32\nds_max_"
    "u64\nds_min_f32\nds_min_f64\nds_min_i32\nds_min_i64\016ds_min_rtn_f32\016"
    "ds_min_rtn_f64\016ds_min_rtn_i32\016ds_min_rtn_i64\016ds_min_rtn_u32\016"
    "ds_min_rtn_u64\017ds_min_src2_f32\017ds_min_src2_f64\017ds_min_src2_i32"
    "\017ds_min_src2_i64\017ds_min_src2_u32\017ds_min_src2_u64\nds_min_u32\n"
    "ds_min_u64\014ds_mskor_b32\014ds_mskor_b64\020ds_mskor_rtn_b32\020ds_ms"
    "kor_rtn_b64\006ds_nop\tds_or_b32\tds_or_b64\015ds_or_rtn_b32\015ds_or_r"
    "tn_b64\016ds_or_src2_b32\016ds_or_src2_b64\020ds_ordered_count\016ds_pe"
    "rmute_b32\014ds_read2_b32\014ds_read2_b64\020ds_read2st64_b32\020ds_rea"
    "d2st64_b64\022ds_read_addtid_b32\014ds_read_b128\013ds_read_b32\013ds_r"
    "ead_b64\013ds_read_b96\013ds_read_i16\nds_read_i8\016ds_read_i8_d16\021"
    "ds_read_i8_d16_hi\013ds_read_u16\017ds_read_u16_d16\022ds_read_u16_d16_"
    "hi\nds_read_u8\016ds_read_u8_d16\021ds_read_u8_d16_hi\017ds_rsub_rtn_u3"
    "2\017ds_rsub_rtn_u64\020ds_rsub_src2_u32\020ds_rsub_src2_u64\013ds_rsub"
    "_u32\013ds_rsub_u64\016ds_sub_rtn_u32\016ds_sub_rtn_u64\017ds_sub_src2_"
    "u32\017ds_sub_src2_u64\nds_sub_u32\nds_sub_u64\016ds_swizzle_b32\017ds_"
    "wrap_rtn_b32\015ds_write2_b32\015ds_write2_b64\021ds_write2st64_b32\021"
    "ds_write2st64_b64\023ds_write_addtid_b32\015ds_write_b128\014ds_write_b"
    "16\023ds_write_b16_d16_hi\014ds_write_b32\014ds_write_b64\013ds_write_b"
    "8\022ds_write_b8_d16_hi\014ds_write_b96\021ds_write_src2_b32\021ds_writ"
    "e_src2_b64\022ds_wrxchg2_rtn_b32\022ds_wrxchg2_rtn_b64\026ds_wrxchg2st6"
    "4_rtn_b32\026ds_wrxchg2st64_rtn_b64\021ds_wrxchg_rtn_b32\021ds_wrxchg_r"
    "tn_b64\nds_xor_b32\nds_xor_b64\016ds_xor_rtn_b32\016ds_xor_rtn_b64\017d"
    "s_xor_src2_b32\017ds_xor_src2_b64\003exp\017flat_atomic_add\022flat_ato"
    "mic_add_x2\017flat_atomic_and\022flat_atomic_and_x2\023flat_atomic_cmps"
    "wap\026flat_atomic_cmpswap_x2\017flat_atomic_dec\022flat_atomic_dec_x2\024"
    "flat_atomic_fcmpswap\027flat_atomic_fcmpswap_x2\020flat_atomic_fmax\023"
    "flat_atomic_fmax_x2\020flat_atomic_fmin\023flat_atomic_fmin_x2\017flat_"
    "atomic_inc\022flat_atomic_inc_x2\016flat_atomic_or\021flat_atomic_or_x2"
    "\020flat_atomic_smax\023flat_atomic_smax_x2\020flat_atomic_smin\023flat"
    "_atomic_smin_x2\017flat_atomic_sub\022flat_atomic_sub_x2\020flat_atomic"
    "_swap\023flat_atomic_swap_x2\020flat_atomic_umax\023flat_atomic_umax_x2"
    "\020flat_atomic_umin\023flat_atomic_umin_x2\017flat_atomic_xor\022flat_"
    "atomic_xor_x2\017flat_load_dword\021flat_load_dwordx2\021flat_load_dwor"
    "dx3\021flat_load_dwordx4\017flat_load_sbyte\023flat_load_sbyte_d16\026f"
    "lat_load_sbyte_d16_hi\023flat_load_short_d16\026flat_load_short_d16_hi\020"
    "flat_load_sshort\017flat_load_ubyte\023flat_load_ubyte_d16\026flat_load"
    "_ubyte_d16_hi\020flat_load_ushort\017flat_store_byte\026flat_store_byte"
    "_d16_hi\020flat_store_dword\022flat_store_dwordx2\022flat_store_dwordx3"
    "\022flat_store_dwordx4\020flat_store_short\027flat_store_short_d16_hi\021"
    "global_atomic_add\024global_atomic_add_x2\021global_atomic_and\024globa"
    "l_atomic_and_x2\025global_atomic_cmpswap\030global_atomic_cmpswap_x2\021"
    "global_atomic_dec\024global_atomic_dec_x2\021global_atomic_inc\024globa"
    "l_atomic_inc_x2\020global_atomic_or\023global_atomic_or_x2\022global_at"
    "omic_smax\025global_atomic_smax_x2\022global_atomic_smin\025global_atom"
    "ic_smin_x2\021global_atomic_sub\024global_atomic_sub_x2\022global_atomi"
    "c_swap\025global_atomic_swap_x2\022global_atomic_umax\025global_atomic_"
    "umax_x2\022global_atomic_umin\025global_atomic_umin_x2\021global_atomic"
    "_xor\024global_atomic_xor_x2\021global_load_dword\023global_load_dwordx"
    "2\023global_load_dwordx3\023global_load_dwordx4\021global_load_sbyte\025"
    "global_load_sbyte_d16\030global_load_sbyte_d16_hi\025global_load_short_"
    "d16\030global_load_short_d16_hi\022global_load_sshort\021global_load_ub"
    "yte\025global_load_ubyte_d16\030global_load_ubyte_d16_hi\022global_load"
    "_ushort\021global_store_byte\030global_store_byte_d16_hi\022global_stor"
    "e_dword\024global_store_dwordx2\024global_store_dwordx3\024global_store"
    "_dwordx4\022global_store_short\031global_store_short_d16_hi\020image_at"
    "omic_add\020image_atomic_and\024image_atomic_cmpswap\020image_atomic_de"
    "c\020image_atomic_inc\017image_atomic_or\021image_atomic_smax\021image_"
    "atomic_smin\020image_atomic_sub\021image_atomic_swap\021image_atomic_um"
    "ax\021image_atomic_umin\020image_atomic_xor\015image_gather4\017image_g"
    "ather4_b\022image_gather4_b_cl\024image_gather4_b_cl_o\021image_gather4"
    "_b_o\017image_gather4_c\021image_gather4_c_b\024image_gather4_c_b_cl\026"
    "image_gather4_c_b_cl_o\023image_gather4_c_b_o\022image_gather4_c_cl\024"
    "image_gather4_c_cl_o\021image_gather4_c_l\023image_gather4_c_l_o\022ima"
    "ge_gather4_c_lz\024image_gather4_c_lz_o\021image_gather4_c_o\020image_g"
    "ather4_cl\022image_gather4_cl_o\017image_gather4_l\021image_gather4_l_o"
    "\020image_gather4_lz\022image_gather4_lz_o\017image_gather4_o\015image_"
    "get_lod\021image_get_resinfo\nimage_load\016image_load_mip\022image_loa"
    "d_mip_pck\026image_load_mip_pck_sgn\016image_load_pck\022image_load_pck"
    "_sgn\014image_sample\016image_sample_b\021image_sample_b_cl\023image_sa"
    "mple_b_cl_o\020image_sample_b_o\016image_sample_c\020image_sample_c_b\023"
    "image_sample_c_b_cl\025image_sample_c_b_cl_o\022image_sample_c_b_o\021i"
    "mage_sample_c_cd\024image_sample_c_cd_cl\026image_sample_c_cd_cl_o\023i"
    "mage_sample_c_cd_o\021image_sample_c_cl\023image_sample_c_cl_o\020image"
    "_sample_c_d\023image_sample_c_d_cl\025image_sample_c_d_cl_o\022image_sa"
    "mple_c_d_o\020image_sample_c_l\022image_sample_c_l_o\021image_sample_c_"
    "lz\023image_sample_c_lz_o\020image_sample_c_o\017image_sample_cd\022ima"
    "ge_sample_cd_cl\024image_sample_cd_cl_o\021image_sample_cd_o\017image_s"
    "ample_cl\021image_sample_cl_o\016image_sample_d\021image_sample_d_cl\023"
    "image_sample_d_cl_o\020image_sample_d_o\016image_sample_l\020image_samp"
    "le_l_o\017image_sample_lz\021image_sample_lz_o\016image_sample_o\013ima"
    "ge_store\017image_store_mip\023image_store_mip_pck\017image_store_pck\t"
    "s_abs_i32\015s_absdiff_i32\ts_add_i32\ts_add_u32\ns_addc_u32\ns_addk_i3"
    "2\ts_and_b32\ts_and_b64\022s_and_saveexec_b64\024s_andn1_saveexec_b64\022"
    "s_andn1_wrexec_b64\013s_andn2_b32\013s_andn2_b64\024s_andn2_saveexec_b6"
    "4\022s_andn2_wrexec_b64\ns_ashr_i32\ns_ashr_i64\013s_atc_probe\022s_atc"
    "_probe_buffer\014s_atomic_add\017s_atomic_add_x2\014s_atomic_and\017s_a"
    "tomic_and_x2\020s_atomic_cmpswap\023s_atomic_cmpswap_x2\014s_atomic_dec"
    "\017s_atomic_dec_x2\014s_atomic_inc\017s_atomic_inc_x2\013s_atomic_or\016"
    "s_atomic_or_x2\015s_atomic_smax\020s_atomic_smax_x2\015s_atomic_smin\020"
    "s_atomic_smin_x2\014s_atomic_sub\017s_atomic_sub_x2\015s_atomic_swap\020"
    "s_atomic_swap_x2\015s_atomic_umax\020s_atomic_umax_x2\015s_atomic_umin\020"
    "s_atomic_umin_x2\014s_atomic_xor\017s_atomic_xor_x2\ts_barrier\017s_bcn"
    "t0_i32_b32\017s_bcnt0_i32_b64\017s_bcnt1_i32_b32\017s_bcnt1_i32_b64\ts_"
    "bfe_i32\ts_bfe_i64\ts_bfe_u32\ts_bfe_u64\ts_bfm_b32\ts_bfm_b64\015s_bit"
    "cmp0_b32\015s_bitcmp0_b64\015s_bitcmp1_b32\015s_bitcmp1_b64\026s_bitrep"
    "licate_b64_b32\015s_bitset0_b32\015s_bitset0_b64\015s_bitset1_b32\015s_"
    "bitset1_b64\010s_branch\ns_brev_b32\ns_brev_b64\023s_buffer_atomic_add\026"
    "s_buffer_atomic_add_x2\023s_buffer_atomic_and\026s_buffer_atomic_and_x2"
    "\027s_buffer_atomic_cmpswap\032s_buffer_atomic_cmpswap_x2\023s_buffer_a"
    "tomic_dec\026s_buffer_atomic_dec_x2\023s_buffer_atomic_inc\026s_buffer_"
    "atomic_inc_x2\022s_buffer_atomic_or\025s_buffer_atomic_or_x2\024s_buffe"
    "r_atomic_smax\027s_buffer_atomic_smax_x2\024s_buffer_atomic_smin\027s_b"
    "uffer_atomic_smin_x2\023s_buffer_atomic_sub\026s_buffer_atomic_sub_x2\024"
    "s_buffer_atomic_swap\027s_buffer_atomic_swap_x2\024s_buffer_atomic_umax"
    "\027s_buffer_atomic_umax_x2\024s_buffer_atomic_umin\027s_buffer_atomic_"
    "umin_x2\023s_buffer_atomic_xor\026s_buffer_atomic_xor_x2\023s_buffer_lo"
    "ad_dword\026s_buffer_load_dwordx16\025s_buffer_load_dwordx2\025s_buffer"
    "_load_dwordx4\025s_buffer_load_dwordx8\024s_buffer_store_dword\026s_buf"
    "fer_store_dwordx2\026s_buffer_store_dwordx4\ns_call_b64\021s_cbranch_cd"
    "bgsys\032s_cbranch_cdbgsys_and_user\031s_cbranch_cdbgsys_or_user\022s_c"
    "branch_cdbguser\020s_cbranch_execnz\017s_cbranch_execz\020s_cbranch_g_f"
    "ork\020s_cbranch_i_fork\016s_cbranch_join\016s_cbranch_scc0\016s_cbranc"
    "h_scc1\017s_cbranch_vccnz\016s_cbranch_vccz\ns_cmov_b32\ns_cmov_b64\013"
    "s_cmovk_i32\014s_cmp_eq_i32\014s_cmp_eq_u32\014s_cmp_eq_u64\014s_cmp_ge"
    "_i32\014s_cmp_ge_u32\014s_cmp_gt_i32\014s_cmp_gt_u32\014s_cmp_le_i32\014"
    "s_cmp_le_u32\014s_cmp_lg_i32\014s_cmp_lg_u32\014s_cmp_lg_u64\014s_cmp_l"
    "t_i32\014s_cmp_lt_u32\015s_cmpk_eq_i32\015s_cmpk_eq_u32\015s_cmpk_ge_i3"
    "2\015s_cmpk_ge_u32\015s_cmpk_gt_i32\015s_cmpk_gt_u32\015s_cmpk_le_i32\015"
    "s_cmpk_le_u32\015s_cmpk_lg_i32\015s_cmpk_lg_u32\015s_cmpk_lt_i32\015s_c"
    "mpk_lt_u32\015s_cselect_b32\015s_cselect_b64\020s_dcache_discard\023s_d"
    "cache_discard_x2\014s_dcache_inv\020s_dcache_inv_vol\013s_dcache_wb\017"
    "s_dcache_wb_vol\016s_decperflevel\010s_endpgm\030s_endpgm_ordered_ps_do"
    "ne\016s_endpgm_saved\015s_ff0_i32_b32\015s_ff0_i32_b64\015s_ff1_i32_b32"
    "\015s_ff1_i32_b64\013s_flbit_i32\017s_flbit_i32_b32\017s_flbit_i32_b64\017"
    "s_flbit_i32_i64\013s_getpc_b64\014s_getreg_b32\014s_icache_inv\016s_inc"
    "perflevel\014s_load_dword\017s_load_dwordx16\016s_load_dwordx2\016s_loa"
    "d_dwordx4\016s_load_dwordx8\017s_lshl1_add_u32\017s_lshl2_add_u32\017s_"
    "lshl3_add_u32\017s_lshl4_add_u32\ns_lshl_b32\ns_lshl_b64\ns_lshr_b32\ns"
    "_lshr_b64\ts_max_i32\ts_max_u32\015s_memrealtime\ts_memtime\ts_min_i32\t"
    "s_min_u32\ts_mov_b32\ts_mov_b64\015s_mov_fed_b32\017s_mov_regrd_b32\ns_"
    "movk_i32\015s_movreld_b32\015s_movreld_b64\015s_movrels_b32\015s_movrel"
    "s_b64\014s_mul_hi_i32\014s_mul_hi_u32\ts_mul_i32\ns_mulk_i32\ns_nand_b3"
    "2\ns_nand_b64\023s_nand_saveexec_b64\005s_nop\ts_nor_b32\ts_nor_b64\022"
    "s_nor_saveexec_b64\ts_not_b32\ts_not_b64\010s_or_b32\010s_or_b64\021s_o"
    "r_saveexec_b64\023s_orn1_saveexec_b64\ns_orn2_b32\ns_orn2_b64\023s_orn2"
    "_saveexec_b64\021s_pack_hh_b32_b16\021s_pack_lh_b32_b16\021s_pack_ll_b3"
    "2_b16\016s_quadmask_b32\016s_quadmask_b64\ts_rfe_b64\021s_rfe_restore_b"
    "64\024s_scratch_load_dword\026s_scratch_load_dwordx2\026s_scratch_load_"
    "dwordx4\025s_scratch_store_dword\027s_scratch_store_dwordx2\027s_scratc"
    "h_store_dwordx4\ts_sendmsg\015s_sendmsghalt\021s_set_gpr_idx_idx\022s_s"
    "et_gpr_idx_mode\021s_set_gpr_idx_off\020s_set_gpr_idx_on\ts_sethalt\ts_"
    "setkill\013s_setpc_b64\ts_setprio\014s_setreg_b32\022s_setreg_imm32_b32"
    "\ns_setvskip\016s_sext_i32_i16\015s_sext_i32_i8\007s_sleep\015s_store_d"
    "word\017s_store_dwordx2\017s_store_dwordx4\ts_sub_i32\ts_sub_u32\ns_sub"
    "b_u32\014s_swappc_b64\006s_trap\014s_ttracedata\ts_waitcnt\010s_wakeup\t"
    "s_wqm_b32\ts_wqm_b64\ns_xnor_b32\ns_xnor_b64\023s_xnor_saveexec_b64\ts_"
    "xor_b32\ts_xor_b64\022s_xor_saveexec_b64\022scratch_load_dword\024scrat"
    "ch_load_dwordx2\024scratch_load_dwordx3\024scratch_load_dwordx4\022scra"
    "tch_load_sbyte\026scratch_load_sbyte_d16\031scratch_load_sbyte_d16_hi\026"
    "scratch_load_short_d16\031scratch_load_short_d16_hi\023scratch_load_ssh"
    "ort\022scratch_load_ubyte\026scratch_load_ubyte_d16\031scratch_load_uby"
    "te_d16_hi\023scratch_load_ushort\022scratch_store_byte\031scratch_store"
    "_byte_d16_hi\023scratch_store_dword\025scratch_store_dwordx2\025scratch"
    "_store_dwordx3\025scratch_store_dwordx4\023scratch_store_short\032scrat"
    "ch_store_short_d16_hi\031tbuffer_load_format_d16_x\032tbuffer_load_form"
    "at_d16_xy\033tbuffer_load_format_d16_xyz\034tbuffer_load_format_d16_xyz"
    "w\025tbuffer_load_format_x\026tbuffer_load_format_xy\027tbuffer_load_fo"
    "rmat_xyz\030tbuffer_load_format_xyzw\032tbuffer_store_format_d16_x\033t"
    "buffer_store_format_d16_xy\034tbuffer_store_format_d16_xyz\035tbuffer_s"
    "tore_format_d16_xyzw\026tbuffer_store_format_x\027tbuffer_store_format_"
    "xy\030tbuffer_store_format_xyz\031tbuffer_store_format_xyzw\nv_add3_u32"
    "\014v_add_co_u32\tv_add_f16\tv_add_f32\tv_add_f64\tv_add_i16\tv_add_i32"
    "\016v_add_lshl_u32\tv_add_u16\tv_add_u32\015v_addc_co_u32\nv_addc_u32\016"
    "v_alignbit_b32\017v_alignbyte_b32\tv_and_b32\014v_and_or_b32\nv_ashr_i3"
    "2\nv_ashr_i64\015v_ashrrev_i16\015v_ashrrev_i32\015v_ashrrev_i64\016v_b"
    "cnt_u32_b32\tv_bfe_i32\tv_bfe_u32\tv_bfi_b32\tv_bfm_b32\013v_bfrev_b32\n"
    "v_ceil_f16\nv_ceil_f32\nv_ceil_f64\tv_clrexcp\017v_cmp_class_f16\023v_c"
    "mp_class_f16_e32\017v_cmp_class_f32\023v_cmp_class_f32_e32\017v_cmp_cla"
    "ss_f64\023v_cmp_class_f64_e32\014v_cmp_eq_f16\020v_cmp_eq_f16_e32\014v_"
    "cmp_eq_f32\020v_cmp_eq_f32_e32\014v_cmp_eq_f64\020v_cmp_eq_f64_e32\014v"
    "_cmp_eq_i16\020v_cmp_eq_i16_e32\014v_cmp_eq_i32\020v_cmp_eq_i32_e32\014"
    "v_cmp_eq_i64\020v_cmp_eq_i64_e32\014v_cmp_eq_u16\020v_cmp_eq_u16_e32\014"
    "v_cmp_eq_u32\020v_cmp_eq_u32_e32\014v_cmp_eq_u64\020v_cmp_eq_u64_e32\013"
    "v_cmp_f_f16\017v_cmp_f_f16_e32\013v_cmp_f_f32\017v_cmp_f_f32_e32\013v_c"
    "mp_f_f64\017v_cmp_f_f64_e32\013v_cmp_f_i16\017v_cmp_f_i16_e32\013v_cmp_"
    "f_i32\017v_cmp_f_i32_e32\013v_cmp_f_i64\017v_cmp_f_i64_e32\013v_cmp_f_u"
    "16\017v_cmp_f_u16_e32\013v_cmp_f_u32\017v_cmp_f_u32_e32\013v_cmp_f_u64\017"
    "v_cmp_f_u64_e32\014v_cmp_ge_f16\020v_cmp_ge_f16_e32\014v_cmp_ge_f32\020"
    "v_cmp_ge_f32_e32\014v_cmp_ge_f64\020v_cmp_ge_f64_e32\014v_cmp_ge_i16\020"
    "v_cmp_ge_i16_e32\014v_cmp_ge_i32\020v_cmp_ge_i32_e32\014v_cmp_ge_i64\020"
    "v_cmp_ge_i64_e32\014v_cmp_ge_u16\020v_cmp_ge_u16_e32\014v_cmp_ge_u32\020"
    "v_cmp_ge_u32_e32\014v_cmp_ge_u64\020v_cmp_ge_u64_e32\014v_cmp_gt_f16\020"
    "v_cmp_gt_f16_e32\014v_cmp_gt_f32\020v_cmp_gt_f32_e32\014v_cmp_gt_f64\020"
    "v_cmp_gt_f64_e32\014v_cmp_gt_i16\020v_cmp_gt_i16_e32\014v_cmp_gt_i32\020"
    "v_cmp_gt_i32_e32\014v_cmp_gt_i64\020v_cmp_gt_i64_e32\014v_cmp_gt_u16\020"
    "v_cmp_gt_u16_e32\014v_cmp_gt_u32\020v_cmp_gt_u32_e32\014v_cmp_gt_u64\020"
    "v_cmp_gt_u64_e32\014v_cmp_le_f16\020v_cmp_le_f16_e32\014v_cmp_le_f32\020"
    "v_cmp_le_f32_e32\014v_cmp_le_f64\020v_cmp_le_f64_e32\014v_cmp_le_i16\020"
    "v_cmp_le_i16_e32\014v_cmp_le_i32\020v_cmp_le_i32_e32\014v_cmp_le_i64\020"
    "v_cmp_le_i64_e32\014v_cmp_le_u16\020v_cmp_le_u16_e32\014v_cmp_le_u32\020"
    "v_cmp_le_u32_e32\014v_cmp_le_u64\020v_cmp_le_u64_e32\014v_cmp_lg_f16\020"
    "v_cmp_lg_f16_e32\014v_cmp_lg_f32\020v_cmp_lg_f32_e32\014v_cmp_lg_f64\020"
    "v_cmp_lg_f64_e32\014v_cmp_lt_f16\020v_cmp_lt_f16_e32\014v_cmp_lt_f32\020"
    "v_cmp_lt_f32_e32\014v_cmp_lt_f64\020v_cmp_lt_f64_e32\014v_cmp_lt_i16\020"
    "v_cmp_lt_i16_e32\014v_cmp_lt_i32\020v_cmp_lt_i32_e32\014v_cmp_lt_i64\020"
    "v_cmp_lt_i64_e32\014v_cmp_lt_u16\020v_cmp_lt_u16_e32\014v_cmp_lt_u32\020"
    "v_cmp_lt_u32_e32\014v_cmp_lt_u64\020v_cmp_lt_u64_e32\014v_cmp_ne_i16\020"
    "v_cmp_ne_i16_e32\014v_cmp_ne_i32\020v_cmp_ne_i32_e32\014v_cmp_ne_i64\020"
    "v_cmp_ne_i64_e32\014v_cmp_ne_u16\020v_cmp_ne_u16_e32\014v_cmp_ne_u32\020"
    "v_cmp_ne_u32_e32\014v_cmp_ne_u64\020v_cmp_ne_u64_e32\015v_cmp_neq_f16\021"
    "v_cmp_neq_f16_e32\015v_cmp_neq_f32\021v_cmp_neq_f32_e32\015v_cmp_neq_f6"
    "4\021v_cmp_neq_f64_e32\015v_cmp_nge_f16\021v_cmp_nge_f16_e32\015v_cmp_n"
    "ge_f32\021v_cmp_nge_f32_e32\015v_cmp_nge_f64\021v_cmp_nge_f64_e32\015v_"
    "cmp_ngt_f16\021v_cmp_ngt_f16_e32\015v_cmp_ngt_f32\021v_cmp_ngt_f32_e32\015"
    "v_cmp_ngt_f64\021v_cmp_ngt_f64_e32\015v_cmp_nle_f16\021v_cmp_nle_f16_e3"
    "2\015v_cmp_nle_f32\021v_cmp_nle_f32_e32\015v_cmp_nle_f64\021v_cmp_nle_f"
    "64_e32\015v_cmp_nlg_f16\021v_cmp_nlg_f16_e32\015v_cmp_nlg_f32\021v_cmp_"
    "nlg_f32_e32\015v_cmp_nlg_f64\021v_cmp_nlg_f64_e32\015v_cmp_nlt_f16\021v"
    "_cmp_nlt_f16_e32\015v_cmp_nlt_f32\021v_cmp_nlt_f32_e32\015v_cmp_nlt_f64"
    "\021v_cmp_nlt_f64_e32\013v_cmp_o_f16\017v_cmp_o_f16_e32\013v_cmp_o_f32\017"
    "v_cmp_o_f32_e32\013v_cmp_o_f64\017v_cmp_o_f64_e32\013v_cmp_t_i16\017v_c"
    "mp_t_i16_e32\013v_cmp_t_i32\017v_cmp_t_i32_e32\013v_cmp_t_i64\017v_cmp_"
    "t_i64_e32\013v_cmp_t_u16\017v_cmp_t_u16_e32\013v_cmp_t_u32\017v_cmp_t_u"
    "32_e32\013v_cmp_t_u64\017v_cmp_t_u64_e32\015v_cmp_tru_f16\021v_cmp_tru_"
    "f16_e32\015v_cmp_tru_f32\021v_cmp_tru_f32_e32\015v_cmp_tru_f64\021v_cmp"
    "_tru_f64_e32\013v_cmp_u_f16\017v_cmp_u_f16_e32\013v_cmp_u_f32\017v_cmp_"
    "u_f32_e32\013v_cmp_u_f64\017v_cmp_u_f64_e32\015v_cmps_eq_f32\021v_cmps_"
    "eq_f32_e32\015v_cmps_eq_f64\021v_cmps_eq_f64_e32\014v_cmps_f_f32\020v_c"
    "mps_f_f32_e32\014v_cmps_f_f64\020v_cmps_f_f64_e32\015v_cmps_ge_f32\021v"
    "_cmps_ge_f32_e32\015v_cmps_ge_f64\021v_cmps_ge_f64_e32\015v_cmps_gt_f32"
    "\021v_cmps_gt_f32_e32\015v_cmps_gt_f64\021v_cmps_gt_f64_e32\015v_cmps_l"
    "e_f32\021v_cmps_le_f32_e32\015v_cmps_le_f64\021v_cmps_le_f64_e32\015v_c"
    "mps_lg_f32\021v_cmps_lg_f32_e32\015v_cmps_lg_f64\021v_cmps_lg_f64_e32\015"
    "v_cmps_lt_f32\021v_cmps_lt_f32_e32\015v_cmps_lt_f64\021v_cmps_lt_f64_e3"
    "2\016v_cmps_neq_f32\022v_cmps_neq_f32_e32\016v_cmps_neq_f64\022v_cmps_n"
    "eq_f64_e32\016v_cmps_nge_f32\022v_cmps_nge_f32_e32\016v_cmps_nge_f64\022"
    "v_cmps_nge_f64_e32\016v_cmps_ngt_f32\022v_cmps_ngt_f32_e32\016v_cmps_ng"
    "t_f64\022v_cmps_ngt_f64_e32\016v_cmps_nle_f32\022v_cmps_nle_f32_e32\016"
    "v_cmps_nle_f64\022v_cmps_nle_f64_e32\016v_cmps_nlg_f32\022v_cmps_nlg_f3"
    "2_e32\016v_cmps_nlg_f64\022v_cmps_nlg_f64_e32\016v_cmps_nlt_f32\022v_cm"
    "ps_nlt_f32_e32\016v_cmps_nlt_f64\022v_cmps_nlt_f64_e32\014v_cmps_o_f32\020"
    "v_cmps_o_f32_e32\014v_cmps_o_f64\020v_cmps_o_f64_e32\016v_cmps_tru_f32\022"
    "v_cmps_tru_f32_e32\016v_cmps_tru_f64\022v_cmps_tru_f64_e32\014v_cmps_u_"
    "f32\020v_cmps_u_f32_e32\014v_cmps_u_f64\020v_cmps_u_f64_e32\016v_cmpsx_"
    "eq_f32\022v_cmpsx_eq_f32_e32\016v_cmpsx_eq_f64\022v_cmpsx_eq_f64_e32\015"
    "v_cmpsx_f_f32\021v_cmpsx_f_f32_e32\015v_cmpsx_f_f64\021v_cmpsx_f_f64_e3"
    "2\016v_cmpsx_ge_f32\022v_cmpsx_ge_f32_e32\016v_cmpsx_ge_f64\022v_cmpsx_"
    "ge_f64_e32\016v_cmpsx_gt_f32\022v_cmpsx_gt_f32_e32\016v_cmpsx_gt_f64\022"
    "v_cmpsx_gt_f64_e32\016v_cmpsx_le_f32\022v_cmpsx_le_f32_e32\016v_cmpsx_l"
    "e_f64\022v_cmpsx_le_f64_e32\016v_cmpsx_lg_f32\022v_cmpsx_lg_f32_e32\016"
    "v_cmpsx_lg_f64\022v_cmpsx_lg_f64_e32\016v_cmpsx_lt_f32\022v_cmpsx_lt_f3"
    "2_e32\016v_cmpsx_lt_f64\022v_cmpsx_lt_f64_e32\017v_cmpsx_neq_f32\023v_c"
    "mpsx_neq_f32_e32\017v_cmpsx_neq_f64\023v_cmpsx_neq_f64_e32\017v_cmpsx_n"
    "ge_f32\023v_cmpsx_nge_f32_e32\017v_cmpsx_nge_f64\023v_cmpsx_nge_f64_e32"
    "\017v_cmpsx_ngt_f32\023v_cmpsx_ngt_f32_e32\017v_cmpsx_ngt_f64\023v_cmps"
    "x_ngt_f64_e32\017v_cmpsx_nle_f32\023v_cmpsx_nle_f32_e32\017v_cmpsx_nle_"
    "f64\023v_cmpsx_nle_f64_e32\017v_cmpsx_nlg_f32\023v_cmpsx_nlg_f32_e32\017"
    "v_cmpsx_nlg_f64\023v_cmpsx_nlg_f64_e32\017v_cmpsx_nlt_f32\023v_cmpsx_nl"
    "t_f32_e32\017v_cmpsx_nlt_f64\023v_cmpsx_nlt_f64_e32\015v_cmpsx_o_f32\021"
    "v_cmpsx_o_f32_e32\015v_cmpsx_o_f64\021v_cmpsx_o_f64_e32\017v_cmpsx_tru_"
    "f32\023v_cmpsx_tru_f32_e32\017v_cmpsx_tru_f64\023v_cmpsx_tru_f64_e32\015"
    "v_cmpsx_u_f32\021v_cmpsx_u_f32_e32\015v_cmpsx_u_f64\021v_cmpsx_u_f64_e3"
    "2\020v_cmpx_class_f16\024v_cmpx_class_f16_e32\020v_cmpx_class_f32\024v_"
    "cmpx_class_f32_e32\020v_cmpx_class_f64\024v_cmpx_class_f64_e32\015v_cmp"
    "x_eq_f16\021v_cmpx_eq_f16_e32\015v_cmpx_eq_f32\021v_cmpx_eq_f32_e32\015"
    "v_cmpx_eq_f64\021v_cmpx_eq_f64_e32\015v_cmpx_eq_i16\021v_cmpx_eq_i16_e3"
    "2\015v_cmpx_eq_i32\021v_cmpx_eq_i32_e32\015v_cmpx_eq_i64\021v_cmpx_eq_i"
    "64_e32\015v_cmpx_eq_u16\021v_cmpx_eq_u16_e32\015v_cmpx_eq_u32\021v_cmpx"
    "_eq_u32_e32\015v_cmpx_eq_u64\021v_cmpx_eq_u64_e32\014v_cmpx_f_f16\020v_"
    "cmpx_f_f16_e32\014v_cmpx_f_f32\020v_cmpx_f_f32_e32\014v_cmpx_f_f64\020v"
    "_cmpx_f_f64_e32\014v_cmpx_f_i16\020v_cmpx_f_i16_e32\014v_cmpx_f_i32\020"
    "v_cmpx_f_i32_e32\014v_cmpx_f_i64\020v_cmpx_f_i64_e32\014v_cmpx_f_u16\020"
    "v_cmpx_f_u16_e32\014v_cmpx_f_u32\020v_cmpx_f_u32_e32\014v_cmpx_f_u64\020"
    "v_cmpx_f_u64_e32\015v_cmpx_ge_f16\021v_cmpx_ge_f16_e32\015v_cmpx_ge_f32"
    "\021v_cmpx_ge_f32_e32\015v_cmpx_ge_f64\021v_cmpx_ge_f64_e32\015v_cmpx_g"
    "e_i16\021v_cmpx_ge_i16_e32\015v_cmpx_ge_i32\021v_cmpx_ge_i32_e32\015v_c"
    "mpx_ge_i64\021v_cmpx_ge_i64_e32\015v_cmpx_ge_u16\021v_cmpx_ge_u16_e32\015"
    "v_cmpx_ge_u32\021v_cmpx_ge_u32_e32\015v_cmpx_ge_u64\021v_cmpx_ge_u64_e3"
    "2\015v_cmpx_gt_f16\021v_cmpx_gt_f16_e32\015v_cmpx_gt_f32\021v_cmpx_gt_f"
    "32_e32\015v_cmpx_gt_f64\021v_cmpx_gt_f64_e32\015v_cmpx_gt_i16\021v_cmpx"
    "_gt_i16_e32\015v_cmpx_gt_i32\021v_cmpx_gt_i32_e32\015v_cmpx_gt_i64\021v"
    "_cmpx_gt_i64_e32\015v_cmpx_gt_u16\021v_cmpx_gt_u16_e32\015v_cmpx_gt_u32"
    "\021v_cmpx_gt_u32_e32\015v_cmpx_gt_u64\021v_cmpx_gt_u64_e32\015v_cmpx_l"
    "e_f16\021v_cmpx_le_f16_e32\015v_cmpx_le_f32\021v_cmpx_le_f32_e32\015v_c"
    "mpx_le_f64\021v_cmpx_le_f64_e32\015v_cmpx_le_i16\021v_cmpx_le_i16_e32\015"
    "v_cmpx_le_i32\021v_cmpx_le_i32_e32\015v_cmpx_le_i64\021v_cmpx_le_i64_e3"
    "2\015v_cmpx_le_u16\021v_cmpx_le_u16_e32\015v_cmpx_le_u32\021v_cmpx_le_u"
    "32_e32\015v_cmpx_le_u64\021v_cmpx_le_u64_e32\015v_cmpx_lg_f16\021v_cmpx"
    "_lg_f16_e32\015v_cmpx_lg_f32\021v_cmpx_lg_f32_e32\015v_cmpx_lg_f64\021v"
    "_cmpx_lg_f64_e32\015v_cmpx_lt_f16\021v_cmpx_lt_f16_e32\015v_cmpx_lt_f32"
    "\021v_cmpx_lt_f32_e32\015v_cmpx_lt_f64\021v_cmpx_lt_f64_e32\015v_cmpx_l"
    "t_i16\021v_cmpx_lt_i16_e32\015v_cmpx_lt_i32\021v_cmpx_lt_i32_e32\015v_c"
    "mpx_lt_i64\021v_cmpx_lt_i64_e32\015v_cmpx_lt_u16\021v_cmpx_lt_u16_e32\015"
    "v_cmpx_lt_u32\021v_cmpx_lt_u32_e32\015v_cmpx_lt_u64\021v_cmpx_lt_u64_e3"
    "2\015v_cmpx_ne_i16\021v_cmpx_ne_i16_e32\015v_cmpx_ne_i32\021v_cmpx_ne_i"
    "32_e32\015v_cmpx_ne_i64\021v_cmpx_ne_i64_e32\015v_cmpx_ne_u16\021v_cmpx"
    "_ne_u16_e32\015v_cmpx_ne_u32\021v_cmpx_ne_u32_e32\015v_cmpx_ne_u64\021v"
    "_cmpx_ne_u64_e32\016v_cmpx_neq_f16\022v_cmpx_neq_f16_e32\016v_cmpx_neq_"
    "f32\022v_cmpx_neq_f32_e32\016v_cmpx_neq_f64\022v_cmpx_neq_f64_e32\016v_"
    "cmpx_nge_f16\022v_cmpx_nge_f16_e32\016v_cmpx_nge_f32\022v_cmpx_nge_f32_"
    "e32\016v_cmpx_nge_f64\022v_cmpx_nge_f64_e32\016v_cmpx_ngt_f16\022v_cmpx"
    "_ngt_f16_e32\016v_cmpx_ngt_f32\022v_cmpx_ngt_f32_e32\016v_cmpx_ngt_f64\022"
    "v_cmpx_ngt_f64_e32\016v_cmpx_nle_f16\022v_cmpx_nle_f16_e32\016v_cmpx_nl"
    "e_f32\022v_cmpx_nle_f32_e32\016v_cmpx_nle_f64\022v_cmpx_nle_f64_e32\016"
    "v_cmpx_nlg_f16\022v_cmpx_nlg_f16_e32\016v_cmpx_nlg_f32\022v_cmpx_nlg_f3"
    "2_e32\016v_cmpx_nlg_f64\022v_cmpx_nlg_f64_e32\016v_cmpx_nlt_f16\022v_cm"
    "px_nlt_f16_e32\016v_cmpx_nlt_f32\022v_cmpx_nlt_f32_e32\016v_cmpx_nlt_f6"
    "4\022v_cmpx_nlt_f64_e32\014v_cmpx_o_f16\020v_cmpx_o_f16_e32\014v_cmpx_o"
    "_f32\020v_cmpx_o_f32_e32\014v_cmpx_o_f64\020v_cmpx_o_f64_e32\014v_cmpx_"
    "t_i16\020v_cmpx_t_i16_e32\014v_cmpx_t_i32\020v_cmpx_t_i32_e32\014v_cmpx"
    "_t_i64\020v_cmpx_t_i64_e32\014v_cmpx_t_u16\020v_cmpx_t_u16_e32\014v_cmp"
    "x_t_u32\020v_cmpx_t_u32_e32\014v_cmpx_t_u64\020v_cmpx_t_u64_e32\016v_cm"
    "px_tru_f16\022v_cmpx_tru_f16_e32\016v_cmpx_tru_f32\022v_cmpx_tru_f32_e3"
    "2\016v_cmpx_tru_f64\022v_cmpx_tru_f64_e32\014v_cmpx_u_f16\020v_cmpx_u_f"
    "16_e32\014v_cmpx_u_f32\020v_cmpx_u_f32_e32\014v_cmpx_u_f64\020v_cmpx_u_"
    "f64_e32\015v_cndmask_b32\tv_cos_f16\tv_cos_f32\014v_cubeid_f32\014v_cub"
    "ema_f32\014v_cubesc_f32\014v_cubetc_f32\015v_cvt_f16_f32\015v_cvt_f16_i"
    "16\015v_cvt_f16_u16\015v_cvt_f32_f16\015v_cvt_f32_f64\015v_cvt_f32_i32\015"
    "v_cvt_f32_u32\020v_cvt_f32_ubyte0\020v_cvt_f32_ubyte1\020v_cvt_f32_ubyt"
    "e2\020v_cvt_f32_ubyte3\015v_cvt_f64_f32\015v_cvt_f64_i32\015v_cvt_f64_u"
    "32\021v_cvt_flr_i32_f32\015v_cvt_i16_f16\015v_cvt_i32_f32\015v_cvt_i32_"
    "f64\022v_cvt_norm_i16_f16\022v_cvt_norm_u16_f16\020v_cvt_off_f32_i4\020"
    "v_cvt_pk_i16_i32\020v_cvt_pk_u16_u32\017v_cvt_pk_u8_f32\024v_cvt_pkaccu"
    "m_u8_f32\024v_cvt_pknorm_i16_f16\024v_cvt_pknorm_i16_f32\024v_cvt_pknor"
    "m_u16_f16\024v_cvt_pknorm_u16_f32\023v_cvt_pkrtz_f16_f32\021v_cvt_rpi_i"
    "32_f32\015v_cvt_u16_f16\015v_cvt_u32_f32\015v_cvt_u32_f64\017v_div_fixu"
    "p_f16\017v_div_fixup_f32\017v_div_fixup_f64\026v_div_fixup_legacy_f16\016"
    "v_div_fmas_f32\016v_div_fmas_f64\017v_div_scale_f32\017v_div_scale_f64\016"
    "v_dot2_f32_f16\016v_dot2_i32_i16\016v_dot2_u32_u16\015v_dot4_i32_i8\015"
    "v_dot4_u32_u8\015v_dot8_i32_i4\015v_dot8_u32_u4\tv_exp_f16\tv_exp_f32\020"
    "v_exp_legacy_f32\nv_ffbh_i32\nv_ffbh_u32\nv_ffbl_b32\013v_floor_f16\013"
    "v_floor_f32\013v_floor_f64\tv_fma_f16\tv_fma_f32\tv_fma_f64\020v_fma_le"
    "gacy_f16\015v_fma_mix_f32\017v_fma_mixhi_f16\017v_fma_mixlo_f16\nv_fmac"
    "_f32\013v_fract_f16\013v_fract_f32\013v_fract_f64\023v_frexp_exp_i16_f1"
    "6\023v_frexp_exp_i32_f32\023v_frexp_exp_i32_f64\020v_frexp_mant_f16\020"
    "v_frexp_mant_f32\020v_frexp_mant_f64\020v_interp_mov_f32\017v_interp_p1"
    "_f32\021v_interp_p1ll_f16\021v_interp_p1lv_f16\017v_interp_p2_f16\017v_"
    "interp_p2_f32\026v_interp_p2_legacy_f16\013v_ldexp_f16\013v_ldexp_f32\013"
    "v_ldexp_f64\tv_lerp_u8\017v_log_clamp_f32\tv_log_f16\tv_log_f32\020v_lo"
    "g_legacy_f32\016v_lshl_add_u32\nv_lshl_b32\nv_lshl_b64\015v_lshl_or_b32"
    "\015v_lshlrev_b16\015v_lshlrev_b32\015v_lshlrev_b64\nv_lshr_b32\nv_lshr"
    "_b64\015v_lshrrev_b16\015v_lshrrev_b32\015v_lshrrev_b64\tv_mac_f16\tv_m"
    "ac_f32\020v_mac_legacy_f32\tv_mad_f16\tv_mad_f32\tv_mad_i16\015v_mad_i3"
    "2_i16\015v_mad_i32_i24\015v_mad_i64_i32\020v_mad_legacy_f16\020v_mad_le"
    "gacy_f32\020v_mad_legacy_i16\020v_mad_legacy_u16\015v_mad_mix_f32\017v_"
    "mad_mixhi_f16\017v_mad_mixlo_f16\tv_mad_u16\015v_mad_u32_u16\015v_mad_u"
    "32_u24\015v_mad_u64_u32\013v_madak_f16\013v_madak_f32\013v_madmk_f16\013"
    "v_madmk_f32\nv_max3_f16\nv_max3_f32\nv_max3_i16\nv_max3_i32\nv_max3_u16"
    "\nv_max3_u32\tv_max_f16\tv_max_f32\tv_max_f64\tv_max_i16\tv_max_i32\020"
    "v_max_legacy_f32\tv_max_u16\tv_max_u32\022v_mbcnt_hi_u32_b32\022v_mbcnt"
    "_lo_u32_b32\nv_med3_f16\nv_med3_f32\nv_med3_i16\nv_med3_i32\nv_med3_u16"
    "\nv_med3_u32\nv_min3_f16\nv_min3_f32\nv_min3_i16\nv_min3_i32\nv_min3_u1"
    "6\nv_min3_u32\tv_min_f16\tv_min_f32\tv_min_f64\tv_min_i16\tv_min_i32\020"
    "v_min_legacy_f32\tv_min_u16\tv_min_u32\tv_mov_b32\015v_mov_fed_b32\015v"
    "_movreld_b32\015v_movrels_b32\016v_movrelsd_b32\021v_mqsad_pk_u16_u8\016"
    "v_mqsad_u32_u8\tv_msad_u8\tv_mul_f16\tv_mul_f32\tv_mul_f64\014v_mul_hi_"
    "i32\020v_mul_hi_i32_i24\014v_mul_hi_u32\020v_mul_hi_u32_u24\015v_mul_i3"
    "2_i24\020v_mul_legacy_f32\014v_mul_lo_i32\014v_mul_lo_u16\014v_mul_lo_u"
    "32\015v_mul_u32_u24\014v_mullit_f32\005v_nop\tv_not_b32\tv_or3_b32\010v"
    "_or_b32\016v_pack_b32_f16\nv_perm_b32\014v_pk_add_f16\014v_pk_add_i16\014"
    "v_pk_add_u16\020v_pk_ashrrev_i16\014v_pk_fma_f16\020v_pk_lshlrev_b16\020"
    "v_pk_lshrrev_b16\014v_pk_mad_i16\014v_pk_mad_u16\014v_pk_max_f16\014v_p"
    "k_max_i16\014v_pk_max_u16\014v_pk_min_f16\014v_pk_min_i16\014v_pk_min_u"
    "16\014v_pk_mul_f16\017v_pk_mul_lo_u16\014v_pk_sub_i16\014v_pk_sub_u16\020"
    "v_qsad_pk_u16_u8\017v_rcp_clamp_f32\017v_rcp_clamp_f64\tv_rcp_f16\tv_rc"
    "p_f32\tv_rcp_f64\017v_rcp_iflag_f32\020v_rcp_legacy_f32\023v_readfirstl"
    "ane_b32\016v_readlane_b32\013v_rndne_f16\013v_rndne_f32\013v_rndne_f64\017"
    "v_rsq_clamp_f32\017v_rsq_clamp_f64\tv_rsq_f16\tv_rsq_f32\tv_rsq_f64\020"
    "v_rsq_legacy_f32\013v_sad_hi_u8\tv_sad_u16\tv_sad_u32\010v_sad_u8\017v_"
    "sat_pk_u8_i16\032v_screen_partition_4se_b32\tv_sin_f16\tv_sin_f32\nv_sq"
    "rt_f16\nv_sqrt_f32\nv_sqrt_f64\014v_sub_co_u32\tv_sub_f16\tv_sub_f32\tv"
    "_sub_i16\tv_sub_i32\tv_sub_u16\tv_sub_u32\015v_subb_co_u32\nv_subb_u32\020"
    "v_subbrev_co_u32\015v_subbrev_u32\017v_subrev_co_u32\014v_subrev_f16\014"
    "v_subrev_f32\014v_subrev_i32\014v_subrev_u16\014v_subrev_u32\nv_swap_b3"
    "2\020v_trig_preop_f64\013v_trunc_f16\013v_trunc_f32\013v_trunc_f64\017v"
    "_writelane_b32\tv_xad_u32\nv_xnor_b32\tv_xor_b32";

namespace {
  struct MatchEntry {
    uint16_t Mnemonic;
    uint16_t Opcode;
    uint16_t ConvertFn;
    uint64_t RequiredFeatures;
    uint8_t Classes[13];
    StringRef getMnemonic() const {
      return StringRef(MnemonicTable + Mnemonic + 1,
                       MnemonicTable[Mnemonic]);
    }
  };

  // Predicate for searching for an opcode.
  struct LessOpcode {
    bool operator()(const MatchEntry &LHS, StringRef RHS) {
      return LHS.getMnemonic() < RHS;
    }
    bool operator()(StringRef LHS, const MatchEntry &RHS) {
      return LHS < RHS.getMnemonic();
    }
    bool operator()(const MatchEntry &LHS, const MatchEntry &RHS) {
      return LHS.getMnemonic() < RHS.getMnemonic();
    }
  };
} // end anonymous namespace.

static const MatchEntry MatchTable0[] = {
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 0 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 18 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 39 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 57 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 78 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 100 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 125 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 143 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 164 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 182 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 203 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 220 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 240 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 259 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 281 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 300 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 322 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 340 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 361 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 380 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 402 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 421 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 443 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 462 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 484 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFSET_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFSET_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_ADDR64_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_IDXEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_IDXEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_BOTHEN_RTN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 502 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_BOTHEN_RTN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_OFFSET_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_ADDR64_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_IDXEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_OFFEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_BOTHEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 523 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 541 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 561 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 581 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 601 /* buffer_load_format_d16_hi_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_HI_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 601 /* buffer_load_format_d16_hi_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_HI_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 601 /* buffer_load_format_d16_hi_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_HI_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 601 /* buffer_load_format_d16_hi_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_HI_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 629 /* buffer_load_format_d16_x */, AMDGPU::BUFFER_LOAD_FORMAT_D16_X_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 654 /* buffer_load_format_d16_xy */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XY_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 680 /* buffer_load_format_d16_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZ_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 707 /* buffer_load_format_d16_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_D16_XYZW_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_OFFSET_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_ADDR64_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_IDXEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_OFFEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_BOTHEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 756 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 778 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 801 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_OFFSET_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_ADDR64_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_IDXEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_OFFEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_BOTHEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 825 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 843 /* buffer_load_sbyte_d16 */, AMDGPU::BUFFER_LOAD_SBYTE_D16_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 843 /* buffer_load_sbyte_d16 */, AMDGPU::BUFFER_LOAD_SBYTE_D16_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 843 /* buffer_load_sbyte_d16 */, AMDGPU::BUFFER_LOAD_SBYTE_D16_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 843 /* buffer_load_sbyte_d16 */, AMDGPU::BUFFER_LOAD_SBYTE_D16_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 865 /* buffer_load_sbyte_d16_hi */, AMDGPU::BUFFER_LOAD_SBYTE_D16_HI_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 865 /* buffer_load_sbyte_d16_hi */, AMDGPU::BUFFER_LOAD_SBYTE_D16_HI_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 865 /* buffer_load_sbyte_d16_hi */, AMDGPU::BUFFER_LOAD_SBYTE_D16_HI_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 865 /* buffer_load_sbyte_d16_hi */, AMDGPU::BUFFER_LOAD_SBYTE_D16_HI_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 890 /* buffer_load_short_d16 */, AMDGPU::BUFFER_LOAD_SHORT_D16_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 890 /* buffer_load_short_d16 */, AMDGPU::BUFFER_LOAD_SHORT_D16_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 890 /* buffer_load_short_d16 */, AMDGPU::BUFFER_LOAD_SHORT_D16_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 890 /* buffer_load_short_d16 */, AMDGPU::BUFFER_LOAD_SHORT_D16_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 912 /* buffer_load_short_d16_hi */, AMDGPU::BUFFER_LOAD_SHORT_D16_HI_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 912 /* buffer_load_short_d16_hi */, AMDGPU::BUFFER_LOAD_SHORT_D16_HI_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 912 /* buffer_load_short_d16_hi */, AMDGPU::BUFFER_LOAD_SHORT_D16_HI_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 912 /* buffer_load_short_d16_hi */, AMDGPU::BUFFER_LOAD_SHORT_D16_HI_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_OFFSET_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_ADDR64_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_IDXEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_OFFEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_BOTHEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_OFFSET_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_ADDR64_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_IDXEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_OFFEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_BOTHEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 974 /* buffer_load_ubyte_d16 */, AMDGPU::BUFFER_LOAD_UBYTE_D16_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 974 /* buffer_load_ubyte_d16 */, AMDGPU::BUFFER_LOAD_UBYTE_D16_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 974 /* buffer_load_ubyte_d16 */, AMDGPU::BUFFER_LOAD_UBYTE_D16_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 974 /* buffer_load_ubyte_d16 */, AMDGPU::BUFFER_LOAD_UBYTE_D16_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 996 /* buffer_load_ubyte_d16_hi */, AMDGPU::BUFFER_LOAD_UBYTE_D16_HI_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 996 /* buffer_load_ubyte_d16_hi */, AMDGPU::BUFFER_LOAD_UBYTE_D16_HI_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 996 /* buffer_load_ubyte_d16_hi */, AMDGPU::BUFFER_LOAD_UBYTE_D16_HI_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 996 /* buffer_load_ubyte_d16_hi */, AMDGPU::BUFFER_LOAD_UBYTE_D16_HI_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_OFFSET_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_OFFSET_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_ADDR64_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_IDXEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_IDXEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_OFFEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_OFFEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_BOTHEN_si, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_LDS_BOTHEN_vi, ConvertCustom_cvtMubufLds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_lds }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1021 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1040 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1058 /* buffer_store_byte_d16_hi */, AMDGPU::BUFFER_STORE_BYTE_D16_HI_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1058 /* buffer_store_byte_d16_hi */, AMDGPU::BUFFER_STORE_BYTE_D16_HI_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1058 /* buffer_store_byte_d16_hi */, AMDGPU::BUFFER_STORE_BYTE_D16_HI_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1058 /* buffer_store_byte_d16_hi */, AMDGPU::BUFFER_STORE_BYTE_D16_HI_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1083 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1102 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1123 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1144 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1165 /* buffer_store_format_d16_hi_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_HI_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1165 /* buffer_store_format_d16_hi_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_HI_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1165 /* buffer_store_format_d16_hi_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_HI_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1165 /* buffer_store_format_d16_hi_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_HI_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1194 /* buffer_store_format_d16_x */, AMDGPU::BUFFER_STORE_FORMAT_D16_X_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1220 /* buffer_store_format_d16_xy */, AMDGPU::BUFFER_STORE_FORMAT_D16_XY_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1247 /* buffer_store_format_d16_xyz */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZ_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_gfx80_OFFSET_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_gfx80_IDXEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_gfx80_OFFEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMubuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1275 /* buffer_store_format_d16_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_D16_XYZW_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1304 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1326 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1349 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1373 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1398 /* buffer_store_lds_dword */, AMDGPU::BUFFER_STORE_LDS_DWORD_vi, ConvertCustom_cvtMubufLds, Feature_isVI|Feature_isVI, { MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_lds, MCK_ImmGLC, MCK_ImmSLC }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1421 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1440 /* buffer_store_short_d16_hi */, AMDGPU::BUFFER_STORE_SHORT_D16_HI_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1440 /* buffer_store_short_d16_hi */, AMDGPU::BUFFER_STORE_SHORT_D16_HI_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1440 /* buffer_store_short_d16_hi */, AMDGPU::BUFFER_STORE_SHORT_D16_HI_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1440 /* buffer_store_short_d16_hi */, AMDGPU::BUFFER_STORE_SHORT_D16_HI_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1466 /* buffer_wbinvl1 */, AMDGPU::BUFFER_WBINVL1_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 1466 /* buffer_wbinvl1 */, AMDGPU::BUFFER_WBINVL1_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 1481 /* buffer_wbinvl1_sc */, AMDGPU::BUFFER_WBINVL1_SC_si, Convert_NoOperands, Feature_isSI|Feature_isSICI, {  }, },
  { 1499 /* buffer_wbinvl1_vol */, AMDGPU::BUFFER_WBINVL1_VOL_ci, Convert_NoOperands, Feature_isCIVI|Feature_isCIOnly, {  }, },
  { 1499 /* buffer_wbinvl1_vol */, AMDGPU::BUFFER_WBINVL1_VOL_vi, Convert_NoOperands, Feature_isCIVI|Feature_isVI, {  }, },
  { 1518 /* ds_add_f32 */, AMDGPU::DS_ADD_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1529 /* ds_add_rtn_f32 */, AMDGPU::DS_ADD_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1544 /* ds_add_rtn_u32 */, AMDGPU::DS_ADD_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1544 /* ds_add_rtn_u32 */, AMDGPU::DS_ADD_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1559 /* ds_add_rtn_u64 */, AMDGPU::DS_ADD_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1559 /* ds_add_rtn_u64 */, AMDGPU::DS_ADD_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1574 /* ds_add_src2_f32 */, AMDGPU::DS_ADD_SRC2_F32_vi, ConvertCustom_cvtDS, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1590 /* ds_add_src2_u32 */, AMDGPU::DS_ADD_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1590 /* ds_add_src2_u32 */, AMDGPU::DS_ADD_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1606 /* ds_add_src2_u64 */, AMDGPU::DS_ADD_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1606 /* ds_add_src2_u64 */, AMDGPU::DS_ADD_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1622 /* ds_add_u32 */, AMDGPU::DS_ADD_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1622 /* ds_add_u32 */, AMDGPU::DS_ADD_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1633 /* ds_add_u64 */, AMDGPU::DS_ADD_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1633 /* ds_add_u64 */, AMDGPU::DS_ADD_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1644 /* ds_and_b32 */, AMDGPU::DS_AND_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1644 /* ds_and_b32 */, AMDGPU::DS_AND_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1655 /* ds_and_b64 */, AMDGPU::DS_AND_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1655 /* ds_and_b64 */, AMDGPU::DS_AND_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1666 /* ds_and_rtn_b32 */, AMDGPU::DS_AND_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1666 /* ds_and_rtn_b32 */, AMDGPU::DS_AND_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1681 /* ds_and_rtn_b64 */, AMDGPU::DS_AND_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1681 /* ds_and_rtn_b64 */, AMDGPU::DS_AND_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1696 /* ds_and_src2_b32 */, AMDGPU::DS_AND_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1696 /* ds_and_src2_b32 */, AMDGPU::DS_AND_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1712 /* ds_and_src2_b64 */, AMDGPU::DS_AND_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1712 /* ds_and_src2_b64 */, AMDGPU::DS_AND_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1728 /* ds_append */, AMDGPU::DS_APPEND_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1728 /* ds_append */, AMDGPU::DS_APPEND_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1738 /* ds_bpermute_b32 */, AMDGPU::DS_BPERMUTE_B32_vi, ConvertCustom_cvtDS, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset }, },
  { 1754 /* ds_cmpst_b32 */, AMDGPU::DS_CMPST_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1754 /* ds_cmpst_b32 */, AMDGPU::DS_CMPST_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1767 /* ds_cmpst_b64 */, AMDGPU::DS_CMPST_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1767 /* ds_cmpst_b64 */, AMDGPU::DS_CMPST_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1780 /* ds_cmpst_f32 */, AMDGPU::DS_CMPST_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1780 /* ds_cmpst_f32 */, AMDGPU::DS_CMPST_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1793 /* ds_cmpst_f64 */, AMDGPU::DS_CMPST_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1793 /* ds_cmpst_f64 */, AMDGPU::DS_CMPST_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1806 /* ds_cmpst_rtn_b32 */, AMDGPU::DS_CMPST_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1806 /* ds_cmpst_rtn_b32 */, AMDGPU::DS_CMPST_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1823 /* ds_cmpst_rtn_b64 */, AMDGPU::DS_CMPST_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1823 /* ds_cmpst_rtn_b64 */, AMDGPU::DS_CMPST_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1840 /* ds_cmpst_rtn_f32 */, AMDGPU::DS_CMPST_RTN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1840 /* ds_cmpst_rtn_f32 */, AMDGPU::DS_CMPST_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1857 /* ds_cmpst_rtn_f64 */, AMDGPU::DS_CMPST_RTN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1857 /* ds_cmpst_rtn_f64 */, AMDGPU::DS_CMPST_RTN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1874 /* ds_condxchg32_rtn_b64 */, AMDGPU::DS_CONDXCHG32_RTN_B64_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1874 /* ds_condxchg32_rtn_b64 */, AMDGPU::DS_CONDXCHG32_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1896 /* ds_consume */, AMDGPU::DS_CONSUME_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1896 /* ds_consume */, AMDGPU::DS_CONSUME_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1907 /* ds_dec_rtn_u32 */, AMDGPU::DS_DEC_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1907 /* ds_dec_rtn_u32 */, AMDGPU::DS_DEC_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1922 /* ds_dec_rtn_u64 */, AMDGPU::DS_DEC_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1922 /* ds_dec_rtn_u64 */, AMDGPU::DS_DEC_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1937 /* ds_dec_src2_u32 */, AMDGPU::DS_DEC_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1937 /* ds_dec_src2_u32 */, AMDGPU::DS_DEC_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1953 /* ds_dec_src2_u64 */, AMDGPU::DS_DEC_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1953 /* ds_dec_src2_u64 */, AMDGPU::DS_DEC_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1969 /* ds_dec_u32 */, AMDGPU::DS_DEC_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1969 /* ds_dec_u32 */, AMDGPU::DS_DEC_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1980 /* ds_dec_u64 */, AMDGPU::DS_DEC_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1980 /* ds_dec_u64 */, AMDGPU::DS_DEC_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1991 /* ds_gws_barrier */, AMDGPU::DS_GWS_BARRIER_si, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 1991 /* ds_gws_barrier */, AMDGPU::DS_GWS_BARRIER_vi, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2006 /* ds_gws_init */, AMDGPU::DS_GWS_INIT_si, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2006 /* ds_gws_init */, AMDGPU::DS_GWS_INIT_vi, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2018 /* ds_gws_sema_br */, AMDGPU::DS_GWS_SEMA_BR_si, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2018 /* ds_gws_sema_br */, AMDGPU::DS_GWS_SEMA_BR_vi, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2033 /* ds_gws_sema_p */, AMDGPU::DS_GWS_SEMA_P_si, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isSICI, { MCK_ImmOffset, MCK_gds }, },
  { 2033 /* ds_gws_sema_p */, AMDGPU::DS_GWS_SEMA_P_vi, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isVI, { MCK_ImmOffset, MCK_gds }, },
  { 2047 /* ds_gws_sema_release_all */, AMDGPU::DS_GWS_SEMA_RELEASE_ALL_si, ConvertCustom_cvtDSGds, Feature_isCIVI|Feature_isSICI, { MCK_ImmOffset, MCK_gds }, },
  { 2047 /* ds_gws_sema_release_all */, AMDGPU::DS_GWS_SEMA_RELEASE_ALL_vi, ConvertCustom_cvtDSGds, Feature_isCIVI|Feature_isVI, { MCK_ImmOffset, MCK_gds }, },
  { 2071 /* ds_gws_sema_v */, AMDGPU::DS_GWS_SEMA_V_si, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isSICI, { MCK_ImmOffset, MCK_gds }, },
  { 2071 /* ds_gws_sema_v */, AMDGPU::DS_GWS_SEMA_V_vi, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isVI, { MCK_ImmOffset, MCK_gds }, },
  { 2085 /* ds_inc_rtn_u32 */, AMDGPU::DS_INC_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2085 /* ds_inc_rtn_u32 */, AMDGPU::DS_INC_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2100 /* ds_inc_rtn_u64 */, AMDGPU::DS_INC_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2100 /* ds_inc_rtn_u64 */, AMDGPU::DS_INC_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2115 /* ds_inc_src2_u32 */, AMDGPU::DS_INC_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2115 /* ds_inc_src2_u32 */, AMDGPU::DS_INC_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2131 /* ds_inc_src2_u64 */, AMDGPU::DS_INC_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2131 /* ds_inc_src2_u64 */, AMDGPU::DS_INC_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2147 /* ds_inc_u32 */, AMDGPU::DS_INC_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2147 /* ds_inc_u32 */, AMDGPU::DS_INC_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2158 /* ds_inc_u64 */, AMDGPU::DS_INC_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2158 /* ds_inc_u64 */, AMDGPU::DS_INC_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2169 /* ds_max_f32 */, AMDGPU::DS_MAX_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2169 /* ds_max_f32 */, AMDGPU::DS_MAX_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2180 /* ds_max_f64 */, AMDGPU::DS_MAX_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2180 /* ds_max_f64 */, AMDGPU::DS_MAX_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2191 /* ds_max_i32 */, AMDGPU::DS_MAX_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2191 /* ds_max_i32 */, AMDGPU::DS_MAX_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2202 /* ds_max_i64 */, AMDGPU::DS_MAX_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2202 /* ds_max_i64 */, AMDGPU::DS_MAX_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2213 /* ds_max_rtn_f32 */, AMDGPU::DS_MAX_RTN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2213 /* ds_max_rtn_f32 */, AMDGPU::DS_MAX_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2228 /* ds_max_rtn_f64 */, AMDGPU::DS_MAX_RTN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2228 /* ds_max_rtn_f64 */, AMDGPU::DS_MAX_RTN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2243 /* ds_max_rtn_i32 */, AMDGPU::DS_MAX_RTN_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2243 /* ds_max_rtn_i32 */, AMDGPU::DS_MAX_RTN_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2258 /* ds_max_rtn_i64 */, AMDGPU::DS_MAX_RTN_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2258 /* ds_max_rtn_i64 */, AMDGPU::DS_MAX_RTN_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2273 /* ds_max_rtn_u32 */, AMDGPU::DS_MAX_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2273 /* ds_max_rtn_u32 */, AMDGPU::DS_MAX_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2288 /* ds_max_rtn_u64 */, AMDGPU::DS_MAX_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2288 /* ds_max_rtn_u64 */, AMDGPU::DS_MAX_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2303 /* ds_max_src2_f32 */, AMDGPU::DS_MAX_SRC2_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2303 /* ds_max_src2_f32 */, AMDGPU::DS_MAX_SRC2_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2319 /* ds_max_src2_f64 */, AMDGPU::DS_MAX_SRC2_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2319 /* ds_max_src2_f64 */, AMDGPU::DS_MAX_SRC2_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2335 /* ds_max_src2_i32 */, AMDGPU::DS_MAX_SRC2_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2335 /* ds_max_src2_i32 */, AMDGPU::DS_MAX_SRC2_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2351 /* ds_max_src2_i64 */, AMDGPU::DS_MAX_SRC2_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2351 /* ds_max_src2_i64 */, AMDGPU::DS_MAX_SRC2_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2367 /* ds_max_src2_u32 */, AMDGPU::DS_MAX_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2367 /* ds_max_src2_u32 */, AMDGPU::DS_MAX_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2383 /* ds_max_src2_u64 */, AMDGPU::DS_MAX_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2383 /* ds_max_src2_u64 */, AMDGPU::DS_MAX_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2399 /* ds_max_u32 */, AMDGPU::DS_MAX_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2399 /* ds_max_u32 */, AMDGPU::DS_MAX_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2410 /* ds_max_u64 */, AMDGPU::DS_MAX_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2410 /* ds_max_u64 */, AMDGPU::DS_MAX_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2421 /* ds_min_f32 */, AMDGPU::DS_MIN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2421 /* ds_min_f32 */, AMDGPU::DS_MIN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2432 /* ds_min_f64 */, AMDGPU::DS_MIN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2432 /* ds_min_f64 */, AMDGPU::DS_MIN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2443 /* ds_min_i32 */, AMDGPU::DS_MIN_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2443 /* ds_min_i32 */, AMDGPU::DS_MIN_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2454 /* ds_min_i64 */, AMDGPU::DS_MIN_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2454 /* ds_min_i64 */, AMDGPU::DS_MIN_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2465 /* ds_min_rtn_f32 */, AMDGPU::DS_MIN_RTN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2465 /* ds_min_rtn_f32 */, AMDGPU::DS_MIN_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2480 /* ds_min_rtn_f64 */, AMDGPU::DS_MIN_RTN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2480 /* ds_min_rtn_f64 */, AMDGPU::DS_MIN_RTN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2495 /* ds_min_rtn_i32 */, AMDGPU::DS_MIN_RTN_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2495 /* ds_min_rtn_i32 */, AMDGPU::DS_MIN_RTN_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2510 /* ds_min_rtn_i64 */, AMDGPU::DS_MIN_RTN_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2510 /* ds_min_rtn_i64 */, AMDGPU::DS_MIN_RTN_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2525 /* ds_min_rtn_u32 */, AMDGPU::DS_MIN_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2525 /* ds_min_rtn_u32 */, AMDGPU::DS_MIN_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2540 /* ds_min_rtn_u64 */, AMDGPU::DS_MIN_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2540 /* ds_min_rtn_u64 */, AMDGPU::DS_MIN_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2555 /* ds_min_src2_f32 */, AMDGPU::DS_MIN_SRC2_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2555 /* ds_min_src2_f32 */, AMDGPU::DS_MIN_SRC2_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2571 /* ds_min_src2_f64 */, AMDGPU::DS_MIN_SRC2_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2571 /* ds_min_src2_f64 */, AMDGPU::DS_MIN_SRC2_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2587 /* ds_min_src2_i32 */, AMDGPU::DS_MIN_SRC2_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2587 /* ds_min_src2_i32 */, AMDGPU::DS_MIN_SRC2_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2603 /* ds_min_src2_i64 */, AMDGPU::DS_MIN_SRC2_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2603 /* ds_min_src2_i64 */, AMDGPU::DS_MIN_SRC2_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2619 /* ds_min_src2_u32 */, AMDGPU::DS_MIN_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2619 /* ds_min_src2_u32 */, AMDGPU::DS_MIN_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2635 /* ds_min_src2_u64 */, AMDGPU::DS_MIN_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2635 /* ds_min_src2_u64 */, AMDGPU::DS_MIN_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2651 /* ds_min_u32 */, AMDGPU::DS_MIN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2651 /* ds_min_u32 */, AMDGPU::DS_MIN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2662 /* ds_min_u64 */, AMDGPU::DS_MIN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2662 /* ds_min_u64 */, AMDGPU::DS_MIN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2673 /* ds_mskor_b32 */, AMDGPU::DS_MSKOR_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2673 /* ds_mskor_b32 */, AMDGPU::DS_MSKOR_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2686 /* ds_mskor_b64 */, AMDGPU::DS_MSKOR_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2686 /* ds_mskor_b64 */, AMDGPU::DS_MSKOR_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2699 /* ds_mskor_rtn_b32 */, AMDGPU::DS_MSKOR_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2699 /* ds_mskor_rtn_b32 */, AMDGPU::DS_MSKOR_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2716 /* ds_mskor_rtn_b64 */, AMDGPU::DS_MSKOR_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2716 /* ds_mskor_rtn_b64 */, AMDGPU::DS_MSKOR_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2733 /* ds_nop */, AMDGPU::DS_NOP_si, Convert_NoOperands, Feature_isCIVI|Feature_isSICI, {  }, },
  { 2733 /* ds_nop */, AMDGPU::DS_NOP_vi, Convert_NoOperands, Feature_isCIVI|Feature_isVI, {  }, },
  { 2740 /* ds_or_b32 */, AMDGPU::DS_OR_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2740 /* ds_or_b32 */, AMDGPU::DS_OR_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2750 /* ds_or_b64 */, AMDGPU::DS_OR_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2750 /* ds_or_b64 */, AMDGPU::DS_OR_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2760 /* ds_or_rtn_b32 */, AMDGPU::DS_OR_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2760 /* ds_or_rtn_b32 */, AMDGPU::DS_OR_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2774 /* ds_or_rtn_b64 */, AMDGPU::DS_OR_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2774 /* ds_or_rtn_b64 */, AMDGPU::DS_OR_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2788 /* ds_or_src2_b32 */, AMDGPU::DS_OR_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2788 /* ds_or_src2_b32 */, AMDGPU::DS_OR_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2803 /* ds_or_src2_b64 */, AMDGPU::DS_OR_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2803 /* ds_or_src2_b64 */, AMDGPU::DS_OR_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2818 /* ds_ordered_count */, AMDGPU::DS_ORDERED_COUNT_si, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2818 /* ds_ordered_count */, AMDGPU::DS_ORDERED_COUNT_vi, ConvertCustom_cvtDSGds, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2835 /* ds_permute_b32 */, AMDGPU::DS_PERMUTE_B32_vi, ConvertCustom_cvtDS, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset }, },
  { 2850 /* ds_read2_b32 */, AMDGPU::DS_READ2_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2850 /* ds_read2_b32 */, AMDGPU::DS_READ2_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2863 /* ds_read2_b64 */, AMDGPU::DS_READ2_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2863 /* ds_read2_b64 */, AMDGPU::DS_READ2_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2876 /* ds_read2st64_b32 */, AMDGPU::DS_READ2ST64_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2876 /* ds_read2st64_b32 */, AMDGPU::DS_READ2ST64_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2893 /* ds_read2st64_b64 */, AMDGPU::DS_READ2ST64_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2893 /* ds_read2st64_b64 */, AMDGPU::DS_READ2ST64_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2910 /* ds_read_addtid_b32 */, AMDGPU::DS_READ_ADDTID_B32_vi, ConvertCustom_cvtDS, Feature_HasDSAddTid|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2929 /* ds_read_b128 */, AMDGPU::DS_READ_B128_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2929 /* ds_read_b128 */, AMDGPU::DS_READ_B128_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2942 /* ds_read_b32 */, AMDGPU::DS_READ_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2942 /* ds_read_b32 */, AMDGPU::DS_READ_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2954 /* ds_read_b64 */, AMDGPU::DS_READ_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2954 /* ds_read_b64 */, AMDGPU::DS_READ_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2966 /* ds_read_b96 */, AMDGPU::DS_READ_B96_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2966 /* ds_read_b96 */, AMDGPU::DS_READ_B96_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2978 /* ds_read_i16 */, AMDGPU::DS_READ_I16_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2978 /* ds_read_i16 */, AMDGPU::DS_READ_I16_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2990 /* ds_read_i8 */, AMDGPU::DS_READ_I8_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2990 /* ds_read_i8 */, AMDGPU::DS_READ_I8_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3001 /* ds_read_i8_d16 */, AMDGPU::DS_READ_I8_D16_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3016 /* ds_read_i8_d16_hi */, AMDGPU::DS_READ_I8_D16_HI_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3034 /* ds_read_u16 */, AMDGPU::DS_READ_U16_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3034 /* ds_read_u16 */, AMDGPU::DS_READ_U16_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3046 /* ds_read_u16_d16 */, AMDGPU::DS_READ_U16_D16_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3062 /* ds_read_u16_d16_hi */, AMDGPU::DS_READ_U16_D16_HI_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3081 /* ds_read_u8 */, AMDGPU::DS_READ_U8_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3081 /* ds_read_u8 */, AMDGPU::DS_READ_U8_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3092 /* ds_read_u8_d16 */, AMDGPU::DS_READ_U8_D16_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3107 /* ds_read_u8_d16_hi */, AMDGPU::DS_READ_U8_D16_HI_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3125 /* ds_rsub_rtn_u32 */, AMDGPU::DS_RSUB_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3125 /* ds_rsub_rtn_u32 */, AMDGPU::DS_RSUB_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3141 /* ds_rsub_rtn_u64 */, AMDGPU::DS_RSUB_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3141 /* ds_rsub_rtn_u64 */, AMDGPU::DS_RSUB_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3157 /* ds_rsub_src2_u32 */, AMDGPU::DS_RSUB_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3157 /* ds_rsub_src2_u32 */, AMDGPU::DS_RSUB_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3174 /* ds_rsub_src2_u64 */, AMDGPU::DS_RSUB_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3174 /* ds_rsub_src2_u64 */, AMDGPU::DS_RSUB_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3191 /* ds_rsub_u32 */, AMDGPU::DS_RSUB_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3191 /* ds_rsub_u32 */, AMDGPU::DS_RSUB_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3203 /* ds_rsub_u64 */, AMDGPU::DS_RSUB_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3203 /* ds_rsub_u64 */, AMDGPU::DS_RSUB_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3215 /* ds_sub_rtn_u32 */, AMDGPU::DS_SUB_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3215 /* ds_sub_rtn_u32 */, AMDGPU::DS_SUB_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3230 /* ds_sub_rtn_u64 */, AMDGPU::DS_SUB_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3230 /* ds_sub_rtn_u64 */, AMDGPU::DS_SUB_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3245 /* ds_sub_src2_u32 */, AMDGPU::DS_SUB_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3245 /* ds_sub_src2_u32 */, AMDGPU::DS_SUB_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3261 /* ds_sub_src2_u64 */, AMDGPU::DS_SUB_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3261 /* ds_sub_src2_u64 */, AMDGPU::DS_SUB_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3277 /* ds_sub_u32 */, AMDGPU::DS_SUB_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3277 /* ds_sub_u32 */, AMDGPU::DS_SUB_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3288 /* ds_sub_u64 */, AMDGPU::DS_SUB_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3288 /* ds_sub_u64 */, AMDGPU::DS_SUB_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3299 /* ds_swizzle_b32 */, AMDGPU::DS_SWIZZLE_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Swizzle, MCK_ImmGDS }, },
  { 3299 /* ds_swizzle_b32 */, AMDGPU::DS_SWIZZLE_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Swizzle, MCK_ImmGDS }, },
  { 3314 /* ds_wrap_rtn_b32 */, AMDGPU::DS_WRAP_RTN_B32_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3314 /* ds_wrap_rtn_b32 */, AMDGPU::DS_WRAP_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3330 /* ds_write2_b32 */, AMDGPU::DS_WRITE2_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3330 /* ds_write2_b32 */, AMDGPU::DS_WRITE2_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3344 /* ds_write2_b64 */, AMDGPU::DS_WRITE2_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3344 /* ds_write2_b64 */, AMDGPU::DS_WRITE2_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3358 /* ds_write2st64_b32 */, AMDGPU::DS_WRITE2ST64_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3358 /* ds_write2st64_b32 */, AMDGPU::DS_WRITE2ST64_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3376 /* ds_write2st64_b64 */, AMDGPU::DS_WRITE2ST64_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3376 /* ds_write2st64_b64 */, AMDGPU::DS_WRITE2ST64_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3394 /* ds_write_addtid_b32 */, AMDGPU::DS_WRITE_ADDTID_B32_vi, ConvertCustom_cvtDS, Feature_HasDSAddTid|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3414 /* ds_write_b128 */, AMDGPU::DS_WRITE_B128_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3414 /* ds_write_b128 */, AMDGPU::DS_WRITE_B128_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3428 /* ds_write_b16 */, AMDGPU::DS_WRITE_B16_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3428 /* ds_write_b16 */, AMDGPU::DS_WRITE_B16_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3441 /* ds_write_b16_d16_hi */, AMDGPU::DS_WRITE_B16_D16_HI_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3461 /* ds_write_b32 */, AMDGPU::DS_WRITE_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3461 /* ds_write_b32 */, AMDGPU::DS_WRITE_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3474 /* ds_write_b64 */, AMDGPU::DS_WRITE_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3474 /* ds_write_b64 */, AMDGPU::DS_WRITE_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3487 /* ds_write_b8 */, AMDGPU::DS_WRITE_B8_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3487 /* ds_write_b8 */, AMDGPU::DS_WRITE_B8_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3499 /* ds_write_b8_d16_hi */, AMDGPU::DS_WRITE_B8_D16_HI_vi, ConvertCustom_cvtDS, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3518 /* ds_write_b96 */, AMDGPU::DS_WRITE_B96_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3518 /* ds_write_b96 */, AMDGPU::DS_WRITE_B96_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3531 /* ds_write_src2_b32 */, AMDGPU::DS_WRITE_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3531 /* ds_write_src2_b32 */, AMDGPU::DS_WRITE_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3549 /* ds_write_src2_b64 */, AMDGPU::DS_WRITE_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3549 /* ds_write_src2_b64 */, AMDGPU::DS_WRITE_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3567 /* ds_wrxchg2_rtn_b32 */, AMDGPU::DS_WRXCHG2_RTN_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3567 /* ds_wrxchg2_rtn_b32 */, AMDGPU::DS_WRXCHG2_RTN_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3586 /* ds_wrxchg2_rtn_b64 */, AMDGPU::DS_WRXCHG2_RTN_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3586 /* ds_wrxchg2_rtn_b64 */, AMDGPU::DS_WRXCHG2_RTN_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3605 /* ds_wrxchg2st64_rtn_b32 */, AMDGPU::DS_WRXCHG2ST64_RTN_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3605 /* ds_wrxchg2st64_rtn_b32 */, AMDGPU::DS_WRXCHG2ST64_RTN_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3628 /* ds_wrxchg2st64_rtn_b64 */, AMDGPU::DS_WRXCHG2ST64_RTN_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3628 /* ds_wrxchg2st64_rtn_b64 */, AMDGPU::DS_WRXCHG2ST64_RTN_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 3651 /* ds_wrxchg_rtn_b32 */, AMDGPU::DS_WRXCHG_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3651 /* ds_wrxchg_rtn_b32 */, AMDGPU::DS_WRXCHG_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3669 /* ds_wrxchg_rtn_b64 */, AMDGPU::DS_WRXCHG_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3669 /* ds_wrxchg_rtn_b64 */, AMDGPU::DS_WRXCHG_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3687 /* ds_xor_b32 */, AMDGPU::DS_XOR_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3687 /* ds_xor_b32 */, AMDGPU::DS_XOR_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3698 /* ds_xor_b64 */, AMDGPU::DS_XOR_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3698 /* ds_xor_b64 */, AMDGPU::DS_XOR_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3709 /* ds_xor_rtn_b32 */, AMDGPU::DS_XOR_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3709 /* ds_xor_rtn_b32 */, AMDGPU::DS_XOR_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3724 /* ds_xor_rtn_b64 */, AMDGPU::DS_XOR_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3724 /* ds_xor_rtn_b64 */, AMDGPU::DS_XOR_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3739 /* ds_xor_src2_b32 */, AMDGPU::DS_XOR_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3739 /* ds_xor_src2_b32 */, AMDGPU::DS_XOR_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3755 /* ds_xor_src2_b64 */, AMDGPU::DS_XOR_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3755 /* ds_xor_src2_b64 */, AMDGPU::DS_XOR_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3771 /* exp */, AMDGPU::EXP_si, ConvertCustom_cvtExp, Feature_isGCN|Feature_isSICI, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3771 /* exp */, AMDGPU::EXP_vi, ConvertCustom_cvtExp, Feature_isGCN|Feature_isVI, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3771 /* exp */, AMDGPU::EXP_DONE_si, ConvertCustom_cvtExp, Feature_isGCN|Feature_isSICI, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_done, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3771 /* exp */, AMDGPU::EXP_DONE_vi, ConvertCustom_cvtExp, Feature_isGCN|Feature_isVI, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_done, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3775 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3775 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3775 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3775 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3791 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3791 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3791 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3791 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3810 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3810 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3810 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3810 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3826 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3826 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3826 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3826 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3845 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3845 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3845 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3845 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3865 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3865 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3865 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3865 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3888 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3888 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3888 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3888 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3904 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3904 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3904 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3904 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3923 /* flat_atomic_fcmpswap */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3923 /* flat_atomic_fcmpswap */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3944 /* flat_atomic_fcmpswap_x2 */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3944 /* flat_atomic_fcmpswap_x2 */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3968 /* flat_atomic_fmax */, AMDGPU::FLAT_ATOMIC_FMAX_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3968 /* flat_atomic_fmax */, AMDGPU::FLAT_ATOMIC_FMAX_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 3985 /* flat_atomic_fmax_x2 */, AMDGPU::FLAT_ATOMIC_FMAX_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 3985 /* flat_atomic_fmax_x2 */, AMDGPU::FLAT_ATOMIC_FMAX_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4005 /* flat_atomic_fmin */, AMDGPU::FLAT_ATOMIC_FMIN_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4005 /* flat_atomic_fmin */, AMDGPU::FLAT_ATOMIC_FMIN_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4022 /* flat_atomic_fmin_x2 */, AMDGPU::FLAT_ATOMIC_FMIN_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4022 /* flat_atomic_fmin_x2 */, AMDGPU::FLAT_ATOMIC_FMIN_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4042 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4042 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4042 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4042 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4058 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4058 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4058 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4058 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4077 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4077 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4077 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4077 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4092 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4092 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4092 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4092 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4110 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4110 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4110 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4110 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4127 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4127 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4127 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4127 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4147 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4147 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4147 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4147 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4164 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4164 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4164 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4164 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4184 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4184 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4184 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4184 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4200 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4200 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4200 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4200 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4219 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4219 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4219 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4219 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4236 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4236 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4236 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4236 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4256 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4256 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4256 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4256 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4273 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4273 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4273 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4273 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4293 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4293 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4293 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4293 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4310 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4310 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4310 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4310 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4330 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4330 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4330 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4330 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4346 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4346 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmSLC1_3, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmSLC }, },
  { 4346 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4346 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetU121_3__ImmSLC1_5, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_glc, MCK_ImmSLC }, },
  { 4365 /* flat_load_dword */, AMDGPU::FLAT_LOAD_DWORD_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4365 /* flat_load_dword */, AMDGPU::FLAT_LOAD_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4381 /* flat_load_dwordx2 */, AMDGPU::FLAT_LOAD_DWORDX2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4381 /* flat_load_dwordx2 */, AMDGPU::FLAT_LOAD_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4399 /* flat_load_dwordx3 */, AMDGPU::FLAT_LOAD_DWORDX3_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_96, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4399 /* flat_load_dwordx3 */, AMDGPU::FLAT_LOAD_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4417 /* flat_load_dwordx4 */, AMDGPU::FLAT_LOAD_DWORDX4_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_128, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4417 /* flat_load_dwordx4 */, AMDGPU::FLAT_LOAD_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4435 /* flat_load_sbyte */, AMDGPU::FLAT_LOAD_SBYTE_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4435 /* flat_load_sbyte */, AMDGPU::FLAT_LOAD_SBYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4451 /* flat_load_sbyte_d16 */, AMDGPU::FLAT_LOAD_SBYTE_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4471 /* flat_load_sbyte_d16_hi */, AMDGPU::FLAT_LOAD_SBYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4494 /* flat_load_short_d16 */, AMDGPU::FLAT_LOAD_SHORT_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4514 /* flat_load_short_d16_hi */, AMDGPU::FLAT_LOAD_SHORT_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4537 /* flat_load_sshort */, AMDGPU::FLAT_LOAD_SSHORT_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4537 /* flat_load_sshort */, AMDGPU::FLAT_LOAD_SSHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4554 /* flat_load_ubyte */, AMDGPU::FLAT_LOAD_UBYTE_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4554 /* flat_load_ubyte */, AMDGPU::FLAT_LOAD_UBYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4570 /* flat_load_ubyte_d16 */, AMDGPU::FLAT_LOAD_UBYTE_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4590 /* flat_load_ubyte_d16_hi */, AMDGPU::FLAT_LOAD_UBYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4__imm_95_0, Feature_HasD16LoadStore|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4613 /* flat_load_ushort */, AMDGPU::FLAT_LOAD_USHORT_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4613 /* flat_load_ushort */, AMDGPU::FLAT_LOAD_USHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4630 /* flat_store_byte */, AMDGPU::FLAT_STORE_BYTE_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4630 /* flat_store_byte */, AMDGPU::FLAT_STORE_BYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4646 /* flat_store_byte_d16_hi */, AMDGPU::FLAT_STORE_BYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasD16LoadStore|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4669 /* flat_store_dword */, AMDGPU::FLAT_STORE_DWORD_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4669 /* flat_store_dword */, AMDGPU::FLAT_STORE_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4686 /* flat_store_dwordx2 */, AMDGPU::FLAT_STORE_DWORDX2_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4686 /* flat_store_dwordx2 */, AMDGPU::FLAT_STORE_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4705 /* flat_store_dwordx3 */, AMDGPU::FLAT_STORE_DWORDX3_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_96, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4705 /* flat_store_dwordx3 */, AMDGPU::FLAT_STORE_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4724 /* flat_store_dwordx4 */, AMDGPU::FLAT_STORE_DWORDX4_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4724 /* flat_store_dwordx4 */, AMDGPU::FLAT_STORE_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4743 /* flat_store_short */, AMDGPU::FLAT_STORE_SHORT_ci, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4743 /* flat_store_short */, AMDGPU::FLAT_STORE_SHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasFlatAddressSpace|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4760 /* flat_store_short_d16_hi */, AMDGPU::FLAT_STORE_SHORT_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetU121_2__ImmGLC1_3__ImmSLC1_4, Feature_HasD16LoadStore|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffsetU12, MCK_ImmGLC, MCK_ImmSLC }, },
  { 4784 /* global_atomic_add */, AMDGPU::GLOBAL_ATOMIC_ADD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4784 /* global_atomic_add */, AMDGPU::GLOBAL_ATOMIC_ADD_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4784 /* global_atomic_add */, AMDGPU::GLOBAL_ATOMIC_ADD_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4784 /* global_atomic_add */, AMDGPU::GLOBAL_ATOMIC_ADD_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4802 /* global_atomic_add_x2 */, AMDGPU::GLOBAL_ATOMIC_ADD_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4802 /* global_atomic_add_x2 */, AMDGPU::GLOBAL_ATOMIC_ADD_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4802 /* global_atomic_add_x2 */, AMDGPU::GLOBAL_ATOMIC_ADD_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4802 /* global_atomic_add_x2 */, AMDGPU::GLOBAL_ATOMIC_ADD_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4823 /* global_atomic_and */, AMDGPU::GLOBAL_ATOMIC_AND_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4823 /* global_atomic_and */, AMDGPU::GLOBAL_ATOMIC_AND_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4823 /* global_atomic_and */, AMDGPU::GLOBAL_ATOMIC_AND_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4823 /* global_atomic_and */, AMDGPU::GLOBAL_ATOMIC_AND_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4841 /* global_atomic_and_x2 */, AMDGPU::GLOBAL_ATOMIC_AND_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4841 /* global_atomic_and_x2 */, AMDGPU::GLOBAL_ATOMIC_AND_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4841 /* global_atomic_and_x2 */, AMDGPU::GLOBAL_ATOMIC_AND_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4841 /* global_atomic_and_x2 */, AMDGPU::GLOBAL_ATOMIC_AND_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4862 /* global_atomic_cmpswap */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4862 /* global_atomic_cmpswap */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4862 /* global_atomic_cmpswap */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4862 /* global_atomic_cmpswap */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4884 /* global_atomic_cmpswap_x2 */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4884 /* global_atomic_cmpswap_x2 */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4884 /* global_atomic_cmpswap_x2 */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4884 /* global_atomic_cmpswap_x2 */, AMDGPU::GLOBAL_ATOMIC_CMPSWAP_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4909 /* global_atomic_dec */, AMDGPU::GLOBAL_ATOMIC_DEC_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4909 /* global_atomic_dec */, AMDGPU::GLOBAL_ATOMIC_DEC_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4909 /* global_atomic_dec */, AMDGPU::GLOBAL_ATOMIC_DEC_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4909 /* global_atomic_dec */, AMDGPU::GLOBAL_ATOMIC_DEC_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4927 /* global_atomic_dec_x2 */, AMDGPU::GLOBAL_ATOMIC_DEC_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4927 /* global_atomic_dec_x2 */, AMDGPU::GLOBAL_ATOMIC_DEC_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4927 /* global_atomic_dec_x2 */, AMDGPU::GLOBAL_ATOMIC_DEC_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4927 /* global_atomic_dec_x2 */, AMDGPU::GLOBAL_ATOMIC_DEC_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4948 /* global_atomic_inc */, AMDGPU::GLOBAL_ATOMIC_INC_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4948 /* global_atomic_inc */, AMDGPU::GLOBAL_ATOMIC_INC_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4948 /* global_atomic_inc */, AMDGPU::GLOBAL_ATOMIC_INC_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4948 /* global_atomic_inc */, AMDGPU::GLOBAL_ATOMIC_INC_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4966 /* global_atomic_inc_x2 */, AMDGPU::GLOBAL_ATOMIC_INC_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4966 /* global_atomic_inc_x2 */, AMDGPU::GLOBAL_ATOMIC_INC_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4966 /* global_atomic_inc_x2 */, AMDGPU::GLOBAL_ATOMIC_INC_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4966 /* global_atomic_inc_x2 */, AMDGPU::GLOBAL_ATOMIC_INC_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4987 /* global_atomic_or */, AMDGPU::GLOBAL_ATOMIC_OR_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4987 /* global_atomic_or */, AMDGPU::GLOBAL_ATOMIC_OR_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 4987 /* global_atomic_or */, AMDGPU::GLOBAL_ATOMIC_OR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 4987 /* global_atomic_or */, AMDGPU::GLOBAL_ATOMIC_OR_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5004 /* global_atomic_or_x2 */, AMDGPU::GLOBAL_ATOMIC_OR_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5004 /* global_atomic_or_x2 */, AMDGPU::GLOBAL_ATOMIC_OR_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5004 /* global_atomic_or_x2 */, AMDGPU::GLOBAL_ATOMIC_OR_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5004 /* global_atomic_or_x2 */, AMDGPU::GLOBAL_ATOMIC_OR_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5024 /* global_atomic_smax */, AMDGPU::GLOBAL_ATOMIC_SMAX_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5024 /* global_atomic_smax */, AMDGPU::GLOBAL_ATOMIC_SMAX_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5024 /* global_atomic_smax */, AMDGPU::GLOBAL_ATOMIC_SMAX_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5024 /* global_atomic_smax */, AMDGPU::GLOBAL_ATOMIC_SMAX_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5043 /* global_atomic_smax_x2 */, AMDGPU::GLOBAL_ATOMIC_SMAX_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5043 /* global_atomic_smax_x2 */, AMDGPU::GLOBAL_ATOMIC_SMAX_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5043 /* global_atomic_smax_x2 */, AMDGPU::GLOBAL_ATOMIC_SMAX_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5043 /* global_atomic_smax_x2 */, AMDGPU::GLOBAL_ATOMIC_SMAX_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5065 /* global_atomic_smin */, AMDGPU::GLOBAL_ATOMIC_SMIN_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5065 /* global_atomic_smin */, AMDGPU::GLOBAL_ATOMIC_SMIN_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5065 /* global_atomic_smin */, AMDGPU::GLOBAL_ATOMIC_SMIN_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5065 /* global_atomic_smin */, AMDGPU::GLOBAL_ATOMIC_SMIN_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5084 /* global_atomic_smin_x2 */, AMDGPU::GLOBAL_ATOMIC_SMIN_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5084 /* global_atomic_smin_x2 */, AMDGPU::GLOBAL_ATOMIC_SMIN_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5084 /* global_atomic_smin_x2 */, AMDGPU::GLOBAL_ATOMIC_SMIN_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5084 /* global_atomic_smin_x2 */, AMDGPU::GLOBAL_ATOMIC_SMIN_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5106 /* global_atomic_sub */, AMDGPU::GLOBAL_ATOMIC_SUB_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5106 /* global_atomic_sub */, AMDGPU::GLOBAL_ATOMIC_SUB_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5106 /* global_atomic_sub */, AMDGPU::GLOBAL_ATOMIC_SUB_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5106 /* global_atomic_sub */, AMDGPU::GLOBAL_ATOMIC_SUB_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5124 /* global_atomic_sub_x2 */, AMDGPU::GLOBAL_ATOMIC_SUB_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5124 /* global_atomic_sub_x2 */, AMDGPU::GLOBAL_ATOMIC_SUB_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5124 /* global_atomic_sub_x2 */, AMDGPU::GLOBAL_ATOMIC_SUB_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5124 /* global_atomic_sub_x2 */, AMDGPU::GLOBAL_ATOMIC_SUB_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5145 /* global_atomic_swap */, AMDGPU::GLOBAL_ATOMIC_SWAP_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5145 /* global_atomic_swap */, AMDGPU::GLOBAL_ATOMIC_SWAP_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5145 /* global_atomic_swap */, AMDGPU::GLOBAL_ATOMIC_SWAP_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5145 /* global_atomic_swap */, AMDGPU::GLOBAL_ATOMIC_SWAP_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5164 /* global_atomic_swap_x2 */, AMDGPU::GLOBAL_ATOMIC_SWAP_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5164 /* global_atomic_swap_x2 */, AMDGPU::GLOBAL_ATOMIC_SWAP_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5164 /* global_atomic_swap_x2 */, AMDGPU::GLOBAL_ATOMIC_SWAP_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5164 /* global_atomic_swap_x2 */, AMDGPU::GLOBAL_ATOMIC_SWAP_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5186 /* global_atomic_umax */, AMDGPU::GLOBAL_ATOMIC_UMAX_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5186 /* global_atomic_umax */, AMDGPU::GLOBAL_ATOMIC_UMAX_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5186 /* global_atomic_umax */, AMDGPU::GLOBAL_ATOMIC_UMAX_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5186 /* global_atomic_umax */, AMDGPU::GLOBAL_ATOMIC_UMAX_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5205 /* global_atomic_umax_x2 */, AMDGPU::GLOBAL_ATOMIC_UMAX_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5205 /* global_atomic_umax_x2 */, AMDGPU::GLOBAL_ATOMIC_UMAX_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5205 /* global_atomic_umax_x2 */, AMDGPU::GLOBAL_ATOMIC_UMAX_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5205 /* global_atomic_umax_x2 */, AMDGPU::GLOBAL_ATOMIC_UMAX_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5227 /* global_atomic_umin */, AMDGPU::GLOBAL_ATOMIC_UMIN_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5227 /* global_atomic_umin */, AMDGPU::GLOBAL_ATOMIC_UMIN_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5227 /* global_atomic_umin */, AMDGPU::GLOBAL_ATOMIC_UMIN_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5227 /* global_atomic_umin */, AMDGPU::GLOBAL_ATOMIC_UMIN_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5246 /* global_atomic_umin_x2 */, AMDGPU::GLOBAL_ATOMIC_UMIN_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5246 /* global_atomic_umin_x2 */, AMDGPU::GLOBAL_ATOMIC_UMIN_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5246 /* global_atomic_umin_x2 */, AMDGPU::GLOBAL_ATOMIC_UMIN_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5246 /* global_atomic_umin_x2 */, AMDGPU::GLOBAL_ATOMIC_UMIN_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5268 /* global_atomic_xor */, AMDGPU::GLOBAL_ATOMIC_XOR_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5268 /* global_atomic_xor */, AMDGPU::GLOBAL_ATOMIC_XOR_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5268 /* global_atomic_xor */, AMDGPU::GLOBAL_ATOMIC_XOR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5268 /* global_atomic_xor */, AMDGPU::GLOBAL_ATOMIC_XOR_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5286 /* global_atomic_xor_x2 */, AMDGPU::GLOBAL_ATOMIC_XOR_X2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5286 /* global_atomic_xor_x2 */, AMDGPU::GLOBAL_ATOMIC_XOR_X2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmSLC1_4, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmSLC }, },
  { 5286 /* global_atomic_xor_x2 */, AMDGPU::GLOBAL_ATOMIC_XOR_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5286 /* global_atomic_xor_x2 */, AMDGPU::GLOBAL_ATOMIC_XOR_X2_SADDR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmOffsetS131_4__ImmSLC1_6, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_glc, MCK_ImmSLC }, },
  { 5307 /* global_load_dword */, AMDGPU::GLOBAL_LOAD_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5307 /* global_load_dword */, AMDGPU::GLOBAL_LOAD_DWORD_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5325 /* global_load_dwordx2 */, AMDGPU::GLOBAL_LOAD_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5325 /* global_load_dwordx2 */, AMDGPU::GLOBAL_LOAD_DWORDX2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5345 /* global_load_dwordx3 */, AMDGPU::GLOBAL_LOAD_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5345 /* global_load_dwordx3 */, AMDGPU::GLOBAL_LOAD_DWORDX3_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5365 /* global_load_dwordx4 */, AMDGPU::GLOBAL_LOAD_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5365 /* global_load_dwordx4 */, AMDGPU::GLOBAL_LOAD_DWORDX4_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5385 /* global_load_sbyte */, AMDGPU::GLOBAL_LOAD_SBYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5385 /* global_load_sbyte */, AMDGPU::GLOBAL_LOAD_SBYTE_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5403 /* global_load_sbyte_d16 */, AMDGPU::GLOBAL_LOAD_SBYTE_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5403 /* global_load_sbyte_d16 */, AMDGPU::GLOBAL_LOAD_SBYTE_D16_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5425 /* global_load_sbyte_d16_hi */, AMDGPU::GLOBAL_LOAD_SBYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5425 /* global_load_sbyte_d16_hi */, AMDGPU::GLOBAL_LOAD_SBYTE_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5450 /* global_load_short_d16 */, AMDGPU::GLOBAL_LOAD_SHORT_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5450 /* global_load_short_d16 */, AMDGPU::GLOBAL_LOAD_SHORT_D16_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5472 /* global_load_short_d16_hi */, AMDGPU::GLOBAL_LOAD_SHORT_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5472 /* global_load_short_d16_hi */, AMDGPU::GLOBAL_LOAD_SHORT_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5497 /* global_load_sshort */, AMDGPU::GLOBAL_LOAD_SSHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5497 /* global_load_sshort */, AMDGPU::GLOBAL_LOAD_SSHORT_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5516 /* global_load_ubyte */, AMDGPU::GLOBAL_LOAD_UBYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5516 /* global_load_ubyte */, AMDGPU::GLOBAL_LOAD_UBYTE_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5534 /* global_load_ubyte_d16 */, AMDGPU::GLOBAL_LOAD_UBYTE_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5534 /* global_load_ubyte_d16 */, AMDGPU::GLOBAL_LOAD_UBYTE_D16_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5556 /* global_load_ubyte_d16_hi */, AMDGPU::GLOBAL_LOAD_UBYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5556 /* global_load_ubyte_d16_hi */, AMDGPU::GLOBAL_LOAD_UBYTE_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5__imm_95_0, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5581 /* global_load_ushort */, AMDGPU::GLOBAL_LOAD_USHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5581 /* global_load_ushort */, AMDGPU::GLOBAL_LOAD_USHORT_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5600 /* global_store_byte */, AMDGPU::GLOBAL_STORE_BYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5600 /* global_store_byte */, AMDGPU::GLOBAL_STORE_BYTE_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5618 /* global_store_byte_d16_hi */, AMDGPU::GLOBAL_STORE_BYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5618 /* global_store_byte_d16_hi */, AMDGPU::GLOBAL_STORE_BYTE_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5643 /* global_store_dword */, AMDGPU::GLOBAL_STORE_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5643 /* global_store_dword */, AMDGPU::GLOBAL_STORE_DWORD_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5662 /* global_store_dwordx2 */, AMDGPU::GLOBAL_STORE_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5662 /* global_store_dwordx2 */, AMDGPU::GLOBAL_STORE_DWORDX2_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5683 /* global_store_dwordx3 */, AMDGPU::GLOBAL_STORE_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5683 /* global_store_dwordx3 */, AMDGPU::GLOBAL_STORE_DWORDX3_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5704 /* global_store_dwordx4 */, AMDGPU::GLOBAL_STORE_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5704 /* global_store_dwordx4 */, AMDGPU::GLOBAL_STORE_DWORDX4_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5725 /* global_store_short */, AMDGPU::GLOBAL_STORE_SHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5725 /* global_store_short */, AMDGPU::GLOBAL_STORE_SHORT_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5744 /* global_store_short_d16_hi */, AMDGPU::GLOBAL_STORE_SHORT_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5744 /* global_store_short_d16_hi */, AMDGPU::GLOBAL_STORE_SHORT_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatGlobalInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_64, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5770 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5787 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5804 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5825 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5842 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5859 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5875 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5893 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5911 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5928 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5946 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5964 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V3_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V3_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5982 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 5999 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6013 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6029 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6048 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6069 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6087 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6103 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6121 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6142 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6142 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6142 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6142 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6142 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6142 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6165 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6165 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6165 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6165 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6165 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6165 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6185 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6204 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6225 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6243 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6263 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6282 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6303 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6321 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6338 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6357 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6373 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6391 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6408 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6427 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6443 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6457 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6475 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6486 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6501 /* image_load_mip_pck */, AMDGPU::IMAGE_LOAD_MIP_PCK_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6520 /* image_load_mip_pck_sgn */, AMDGPU::IMAGE_LOAD_MIP_PCK_SGN_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6543 /* image_load_pck */, AMDGPU::IMAGE_LOAD_PCK_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6558 /* image_load_pck_sgn */, AMDGPU::IMAGE_LOAD_PCK_SGN_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6577 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6590 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6605 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6623 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6643 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6660 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6675 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6692 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6712 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6734 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6753 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6771 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6792 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6815 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6835 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6853 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6873 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6890 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6910 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6932 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6951 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6968 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 6987 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7005 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7025 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7042 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7058 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7077 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7098 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7116 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7132 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7150 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7165 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7183 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V8_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7203 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7220 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V8_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7235 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V8_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7252 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7268 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V8_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V8_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V8_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_256, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7286 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7301 /* image_store */, AMDGPU::IMAGE_STORE_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7313 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA, MCK_ImmD16 }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7329 /* image_store_mip_pck */, AMDGPU::IMAGE_STORE_MIP_PCK_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V4_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V3_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V2_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V1_V3, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_96, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7349 /* image_store_pck */, AMDGPU::IMAGE_STORE_PCK_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128A16, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 7365 /* s_abs_i32 */, AMDGPU::S_ABS_I32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7365 /* s_abs_i32 */, AMDGPU::S_ABS_I32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7375 /* s_absdiff_i32 */, AMDGPU::S_ABSDIFF_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7375 /* s_absdiff_i32 */, AMDGPU::S_ABSDIFF_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7389 /* s_add_i32 */, AMDGPU::S_ADD_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7389 /* s_add_i32 */, AMDGPU::S_ADD_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7399 /* s_add_u32 */, AMDGPU::S_ADD_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7399 /* s_add_u32 */, AMDGPU::S_ADD_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7409 /* s_addc_u32 */, AMDGPU::S_ADDC_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7409 /* s_addc_u32 */, AMDGPU::S_ADDC_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7420 /* s_addk_i32 */, AMDGPU::S_ADDK_I32_si, Convert__Reg1_0__Tie0_1_1__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 7420 /* s_addk_i32 */, AMDGPU::S_ADDK_I32_vi, Convert__Reg1_0__Tie0_1_1__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 7431 /* s_and_b32 */, AMDGPU::S_AND_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7431 /* s_and_b32 */, AMDGPU::S_AND_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7441 /* s_and_b64 */, AMDGPU::S_AND_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7441 /* s_and_b64 */, AMDGPU::S_AND_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7451 /* s_and_saveexec_b64 */, AMDGPU::S_AND_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7451 /* s_and_saveexec_b64 */, AMDGPU::S_AND_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7470 /* s_andn1_saveexec_b64 */, AMDGPU::S_ANDN1_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7491 /* s_andn1_wrexec_b64 */, AMDGPU::S_ANDN1_WREXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7510 /* s_andn2_b32 */, AMDGPU::S_ANDN2_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7510 /* s_andn2_b32 */, AMDGPU::S_ANDN2_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7522 /* s_andn2_b64 */, AMDGPU::S_ANDN2_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7522 /* s_andn2_b64 */, AMDGPU::S_ANDN2_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7534 /* s_andn2_saveexec_b64 */, AMDGPU::S_ANDN2_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7534 /* s_andn2_saveexec_b64 */, AMDGPU::S_ANDN2_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7555 /* s_andn2_wrexec_b64 */, AMDGPU::S_ANDN2_WREXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7574 /* s_ashr_i32 */, AMDGPU::S_ASHR_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7574 /* s_ashr_i32 */, AMDGPU::S_ASHR_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7585 /* s_ashr_i64 */, AMDGPU::S_ASHR_I64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 7585 /* s_ashr_i64 */, AMDGPU::S_ASHR_I64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 7596 /* s_atc_probe */, AMDGPU::S_ATC_PROBE_SGPR_vi, Convert__Imm1_0__Reg1_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_Imm, MCK_SReg_64, MCK_SReg_32 }, },
  { 7596 /* s_atc_probe */, AMDGPU::S_ATC_PROBE_IMM_vi, Convert__Imm1_0__Reg1_1__ImmSMRDOffset201_2, Feature_isVI|Feature_isVI, { MCK_Imm, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7608 /* s_atc_probe_buffer */, AMDGPU::S_ATC_PROBE_BUFFER_SGPR_vi, Convert__Imm1_0__Reg1_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_Imm, MCK_SReg_128, MCK_SReg_32 }, },
  { 7608 /* s_atc_probe_buffer */, AMDGPU::S_ATC_PROBE_BUFFER_IMM_vi, Convert__Imm1_0__Reg1_1__ImmSMRDOffset201_2, Feature_isVI|Feature_isVI, { MCK_Imm, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 7627 /* s_atomic_add */, AMDGPU::S_ATOMIC_ADD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7627 /* s_atomic_add */, AMDGPU::S_ATOMIC_ADD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7627 /* s_atomic_add */, AMDGPU::S_ATOMIC_ADD_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7627 /* s_atomic_add */, AMDGPU::S_ATOMIC_ADD_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7640 /* s_atomic_add_x2 */, AMDGPU::S_ATOMIC_ADD_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7640 /* s_atomic_add_x2 */, AMDGPU::S_ATOMIC_ADD_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7640 /* s_atomic_add_x2 */, AMDGPU::S_ATOMIC_ADD_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7640 /* s_atomic_add_x2 */, AMDGPU::S_ATOMIC_ADD_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7656 /* s_atomic_and */, AMDGPU::S_ATOMIC_AND_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7656 /* s_atomic_and */, AMDGPU::S_ATOMIC_AND_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7656 /* s_atomic_and */, AMDGPU::S_ATOMIC_AND_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7656 /* s_atomic_and */, AMDGPU::S_ATOMIC_AND_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7669 /* s_atomic_and_x2 */, AMDGPU::S_ATOMIC_AND_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7669 /* s_atomic_and_x2 */, AMDGPU::S_ATOMIC_AND_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7669 /* s_atomic_and_x2 */, AMDGPU::S_ATOMIC_AND_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7669 /* s_atomic_and_x2 */, AMDGPU::S_ATOMIC_AND_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7685 /* s_atomic_cmpswap */, AMDGPU::S_ATOMIC_CMPSWAP_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7685 /* s_atomic_cmpswap */, AMDGPU::S_ATOMIC_CMPSWAP_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7685 /* s_atomic_cmpswap */, AMDGPU::S_ATOMIC_CMPSWAP_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7685 /* s_atomic_cmpswap */, AMDGPU::S_ATOMIC_CMPSWAP_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7702 /* s_atomic_cmpswap_x2 */, AMDGPU::S_ATOMIC_CMPSWAP_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32 }, },
  { 7702 /* s_atomic_cmpswap_x2 */, AMDGPU::S_ATOMIC_CMPSWAP_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7702 /* s_atomic_cmpswap_x2 */, AMDGPU::S_ATOMIC_CMPSWAP_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7702 /* s_atomic_cmpswap_x2 */, AMDGPU::S_ATOMIC_CMPSWAP_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7722 /* s_atomic_dec */, AMDGPU::S_ATOMIC_DEC_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7722 /* s_atomic_dec */, AMDGPU::S_ATOMIC_DEC_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7722 /* s_atomic_dec */, AMDGPU::S_ATOMIC_DEC_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7722 /* s_atomic_dec */, AMDGPU::S_ATOMIC_DEC_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7735 /* s_atomic_dec_x2 */, AMDGPU::S_ATOMIC_DEC_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7735 /* s_atomic_dec_x2 */, AMDGPU::S_ATOMIC_DEC_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7735 /* s_atomic_dec_x2 */, AMDGPU::S_ATOMIC_DEC_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7735 /* s_atomic_dec_x2 */, AMDGPU::S_ATOMIC_DEC_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7751 /* s_atomic_inc */, AMDGPU::S_ATOMIC_INC_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7751 /* s_atomic_inc */, AMDGPU::S_ATOMIC_INC_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7751 /* s_atomic_inc */, AMDGPU::S_ATOMIC_INC_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7751 /* s_atomic_inc */, AMDGPU::S_ATOMIC_INC_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7764 /* s_atomic_inc_x2 */, AMDGPU::S_ATOMIC_INC_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7764 /* s_atomic_inc_x2 */, AMDGPU::S_ATOMIC_INC_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7764 /* s_atomic_inc_x2 */, AMDGPU::S_ATOMIC_INC_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7764 /* s_atomic_inc_x2 */, AMDGPU::S_ATOMIC_INC_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7780 /* s_atomic_or */, AMDGPU::S_ATOMIC_OR_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7780 /* s_atomic_or */, AMDGPU::S_ATOMIC_OR_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7780 /* s_atomic_or */, AMDGPU::S_ATOMIC_OR_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7780 /* s_atomic_or */, AMDGPU::S_ATOMIC_OR_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7792 /* s_atomic_or_x2 */, AMDGPU::S_ATOMIC_OR_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7792 /* s_atomic_or_x2 */, AMDGPU::S_ATOMIC_OR_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7792 /* s_atomic_or_x2 */, AMDGPU::S_ATOMIC_OR_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7792 /* s_atomic_or_x2 */, AMDGPU::S_ATOMIC_OR_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7807 /* s_atomic_smax */, AMDGPU::S_ATOMIC_SMAX_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7807 /* s_atomic_smax */, AMDGPU::S_ATOMIC_SMAX_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7807 /* s_atomic_smax */, AMDGPU::S_ATOMIC_SMAX_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7807 /* s_atomic_smax */, AMDGPU::S_ATOMIC_SMAX_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7821 /* s_atomic_smax_x2 */, AMDGPU::S_ATOMIC_SMAX_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7821 /* s_atomic_smax_x2 */, AMDGPU::S_ATOMIC_SMAX_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7821 /* s_atomic_smax_x2 */, AMDGPU::S_ATOMIC_SMAX_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7821 /* s_atomic_smax_x2 */, AMDGPU::S_ATOMIC_SMAX_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7838 /* s_atomic_smin */, AMDGPU::S_ATOMIC_SMIN_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7838 /* s_atomic_smin */, AMDGPU::S_ATOMIC_SMIN_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7838 /* s_atomic_smin */, AMDGPU::S_ATOMIC_SMIN_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7838 /* s_atomic_smin */, AMDGPU::S_ATOMIC_SMIN_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7852 /* s_atomic_smin_x2 */, AMDGPU::S_ATOMIC_SMIN_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7852 /* s_atomic_smin_x2 */, AMDGPU::S_ATOMIC_SMIN_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7852 /* s_atomic_smin_x2 */, AMDGPU::S_ATOMIC_SMIN_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7852 /* s_atomic_smin_x2 */, AMDGPU::S_ATOMIC_SMIN_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7869 /* s_atomic_sub */, AMDGPU::S_ATOMIC_SUB_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7869 /* s_atomic_sub */, AMDGPU::S_ATOMIC_SUB_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7869 /* s_atomic_sub */, AMDGPU::S_ATOMIC_SUB_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7869 /* s_atomic_sub */, AMDGPU::S_ATOMIC_SUB_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7882 /* s_atomic_sub_x2 */, AMDGPU::S_ATOMIC_SUB_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7882 /* s_atomic_sub_x2 */, AMDGPU::S_ATOMIC_SUB_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7882 /* s_atomic_sub_x2 */, AMDGPU::S_ATOMIC_SUB_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7882 /* s_atomic_sub_x2 */, AMDGPU::S_ATOMIC_SUB_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7898 /* s_atomic_swap */, AMDGPU::S_ATOMIC_SWAP_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7898 /* s_atomic_swap */, AMDGPU::S_ATOMIC_SWAP_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7898 /* s_atomic_swap */, AMDGPU::S_ATOMIC_SWAP_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7898 /* s_atomic_swap */, AMDGPU::S_ATOMIC_SWAP_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7912 /* s_atomic_swap_x2 */, AMDGPU::S_ATOMIC_SWAP_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7912 /* s_atomic_swap_x2 */, AMDGPU::S_ATOMIC_SWAP_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7912 /* s_atomic_swap_x2 */, AMDGPU::S_ATOMIC_SWAP_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7912 /* s_atomic_swap_x2 */, AMDGPU::S_ATOMIC_SWAP_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7929 /* s_atomic_umax */, AMDGPU::S_ATOMIC_UMAX_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7929 /* s_atomic_umax */, AMDGPU::S_ATOMIC_UMAX_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7929 /* s_atomic_umax */, AMDGPU::S_ATOMIC_UMAX_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7929 /* s_atomic_umax */, AMDGPU::S_ATOMIC_UMAX_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7943 /* s_atomic_umax_x2 */, AMDGPU::S_ATOMIC_UMAX_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7943 /* s_atomic_umax_x2 */, AMDGPU::S_ATOMIC_UMAX_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7943 /* s_atomic_umax_x2 */, AMDGPU::S_ATOMIC_UMAX_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7943 /* s_atomic_umax_x2 */, AMDGPU::S_ATOMIC_UMAX_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7960 /* s_atomic_umin */, AMDGPU::S_ATOMIC_UMIN_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7960 /* s_atomic_umin */, AMDGPU::S_ATOMIC_UMIN_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7960 /* s_atomic_umin */, AMDGPU::S_ATOMIC_UMIN_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7960 /* s_atomic_umin */, AMDGPU::S_ATOMIC_UMIN_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7974 /* s_atomic_umin_x2 */, AMDGPU::S_ATOMIC_UMIN_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7974 /* s_atomic_umin_x2 */, AMDGPU::S_ATOMIC_UMIN_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7974 /* s_atomic_umin_x2 */, AMDGPU::S_ATOMIC_UMIN_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7974 /* s_atomic_umin_x2 */, AMDGPU::S_ATOMIC_UMIN_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 7991 /* s_atomic_xor */, AMDGPU::S_ATOMIC_XOR_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 7991 /* s_atomic_xor */, AMDGPU::S_ATOMIC_XOR_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 7991 /* s_atomic_xor */, AMDGPU::S_ATOMIC_XOR_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 7991 /* s_atomic_xor */, AMDGPU::S_ATOMIC_XOR_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8004 /* s_atomic_xor_x2 */, AMDGPU::S_ATOMIC_XOR_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32 }, },
  { 8004 /* s_atomic_xor_x2 */, AMDGPU::S_ATOMIC_XOR_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 8004 /* s_atomic_xor_x2 */, AMDGPU::S_ATOMIC_XOR_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_glc }, },
  { 8004 /* s_atomic_xor_x2 */, AMDGPU::S_ATOMIC_XOR_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8020 /* s_barrier */, AMDGPU::S_BARRIER, Convert_NoOperands, Feature_isGCN, {  }, },
  { 8030 /* s_bcnt0_i32_b32 */, AMDGPU::S_BCNT0_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8030 /* s_bcnt0_i32_b32 */, AMDGPU::S_BCNT0_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8046 /* s_bcnt0_i32_b64 */, AMDGPU::S_BCNT0_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 8046 /* s_bcnt0_i32_b64 */, AMDGPU::S_BCNT0_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 8062 /* s_bcnt1_i32_b32 */, AMDGPU::S_BCNT1_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8062 /* s_bcnt1_i32_b32 */, AMDGPU::S_BCNT1_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8078 /* s_bcnt1_i32_b64 */, AMDGPU::S_BCNT1_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 8078 /* s_bcnt1_i32_b64 */, AMDGPU::S_BCNT1_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 8094 /* s_bfe_i32 */, AMDGPU::S_BFE_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8094 /* s_bfe_i32 */, AMDGPU::S_BFE_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8104 /* s_bfe_i64 */, AMDGPU::S_BFE_I64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 8104 /* s_bfe_i64 */, AMDGPU::S_BFE_I64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 8114 /* s_bfe_u32 */, AMDGPU::S_BFE_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8114 /* s_bfe_u32 */, AMDGPU::S_BFE_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8124 /* s_bfe_u64 */, AMDGPU::S_BFE_U64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 8124 /* s_bfe_u64 */, AMDGPU::S_BFE_U64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 8134 /* s_bfm_b32 */, AMDGPU::S_BFM_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8134 /* s_bfm_b32 */, AMDGPU::S_BFM_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8144 /* s_bfm_b64 */, AMDGPU::S_BFM_B64_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8144 /* s_bfm_b64 */, AMDGPU::S_BFM_B64_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8154 /* s_bitcmp0_b32 */, AMDGPU::S_BITCMP0_B32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8168 /* s_bitcmp0_b64 */, AMDGPU::S_BITCMP0_B64, Convert__SSrcB641_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB64, MCK_SSrcB32 }, },
  { 8182 /* s_bitcmp1_b32 */, AMDGPU::S_BITCMP1_B32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 8196 /* s_bitcmp1_b64 */, AMDGPU::S_BITCMP1_B64, Convert__SSrcB641_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB64, MCK_SSrcB32 }, },
  { 8210 /* s_bitreplicate_b64_b32 */, AMDGPU::S_BITREPLICATE_B64_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 8233 /* s_bitset0_b32 */, AMDGPU::S_BITSET0_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8233 /* s_bitset0_b32 */, AMDGPU::S_BITSET0_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8247 /* s_bitset0_b64 */, AMDGPU::S_BITSET0_B64_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 8247 /* s_bitset0_b64 */, AMDGPU::S_BITSET0_B64_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 8261 /* s_bitset1_b32 */, AMDGPU::S_BITSET1_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8261 /* s_bitset1_b32 */, AMDGPU::S_BITSET1_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8275 /* s_bitset1_b64 */, AMDGPU::S_BITSET1_B64_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 8275 /* s_bitset1_b64 */, AMDGPU::S_BITSET1_B64_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 8289 /* s_branch */, AMDGPU::S_BRANCH, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 8298 /* s_brev_b32 */, AMDGPU::S_BREV_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8298 /* s_brev_b32 */, AMDGPU::S_BREV_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 8309 /* s_brev_b64 */, AMDGPU::S_BREV_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 8309 /* s_brev_b64 */, AMDGPU::S_BREV_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 8320 /* s_buffer_atomic_add */, AMDGPU::S_BUFFER_ATOMIC_ADD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8320 /* s_buffer_atomic_add */, AMDGPU::S_BUFFER_ATOMIC_ADD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8320 /* s_buffer_atomic_add */, AMDGPU::S_BUFFER_ATOMIC_ADD_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8320 /* s_buffer_atomic_add */, AMDGPU::S_BUFFER_ATOMIC_ADD_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8340 /* s_buffer_atomic_add_x2 */, AMDGPU::S_BUFFER_ATOMIC_ADD_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8340 /* s_buffer_atomic_add_x2 */, AMDGPU::S_BUFFER_ATOMIC_ADD_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8340 /* s_buffer_atomic_add_x2 */, AMDGPU::S_BUFFER_ATOMIC_ADD_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8340 /* s_buffer_atomic_add_x2 */, AMDGPU::S_BUFFER_ATOMIC_ADD_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8363 /* s_buffer_atomic_and */, AMDGPU::S_BUFFER_ATOMIC_AND_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8363 /* s_buffer_atomic_and */, AMDGPU::S_BUFFER_ATOMIC_AND_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8363 /* s_buffer_atomic_and */, AMDGPU::S_BUFFER_ATOMIC_AND_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8363 /* s_buffer_atomic_and */, AMDGPU::S_BUFFER_ATOMIC_AND_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8383 /* s_buffer_atomic_and_x2 */, AMDGPU::S_BUFFER_ATOMIC_AND_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8383 /* s_buffer_atomic_and_x2 */, AMDGPU::S_BUFFER_ATOMIC_AND_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8383 /* s_buffer_atomic_and_x2 */, AMDGPU::S_BUFFER_ATOMIC_AND_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8383 /* s_buffer_atomic_and_x2 */, AMDGPU::S_BUFFER_ATOMIC_AND_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8406 /* s_buffer_atomic_cmpswap */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8406 /* s_buffer_atomic_cmpswap */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8406 /* s_buffer_atomic_cmpswap */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8406 /* s_buffer_atomic_cmpswap */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8430 /* s_buffer_atomic_cmpswap_x2 */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32 }, },
  { 8430 /* s_buffer_atomic_cmpswap_x2 */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8430 /* s_buffer_atomic_cmpswap_x2 */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8430 /* s_buffer_atomic_cmpswap_x2 */, AMDGPU::S_BUFFER_ATOMIC_CMPSWAP_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8457 /* s_buffer_atomic_dec */, AMDGPU::S_BUFFER_ATOMIC_DEC_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8457 /* s_buffer_atomic_dec */, AMDGPU::S_BUFFER_ATOMIC_DEC_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8457 /* s_buffer_atomic_dec */, AMDGPU::S_BUFFER_ATOMIC_DEC_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8457 /* s_buffer_atomic_dec */, AMDGPU::S_BUFFER_ATOMIC_DEC_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8477 /* s_buffer_atomic_dec_x2 */, AMDGPU::S_BUFFER_ATOMIC_DEC_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8477 /* s_buffer_atomic_dec_x2 */, AMDGPU::S_BUFFER_ATOMIC_DEC_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8477 /* s_buffer_atomic_dec_x2 */, AMDGPU::S_BUFFER_ATOMIC_DEC_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8477 /* s_buffer_atomic_dec_x2 */, AMDGPU::S_BUFFER_ATOMIC_DEC_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8500 /* s_buffer_atomic_inc */, AMDGPU::S_BUFFER_ATOMIC_INC_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8500 /* s_buffer_atomic_inc */, AMDGPU::S_BUFFER_ATOMIC_INC_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8500 /* s_buffer_atomic_inc */, AMDGPU::S_BUFFER_ATOMIC_INC_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8500 /* s_buffer_atomic_inc */, AMDGPU::S_BUFFER_ATOMIC_INC_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8520 /* s_buffer_atomic_inc_x2 */, AMDGPU::S_BUFFER_ATOMIC_INC_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8520 /* s_buffer_atomic_inc_x2 */, AMDGPU::S_BUFFER_ATOMIC_INC_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8520 /* s_buffer_atomic_inc_x2 */, AMDGPU::S_BUFFER_ATOMIC_INC_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8520 /* s_buffer_atomic_inc_x2 */, AMDGPU::S_BUFFER_ATOMIC_INC_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8543 /* s_buffer_atomic_or */, AMDGPU::S_BUFFER_ATOMIC_OR_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8543 /* s_buffer_atomic_or */, AMDGPU::S_BUFFER_ATOMIC_OR_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8543 /* s_buffer_atomic_or */, AMDGPU::S_BUFFER_ATOMIC_OR_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8543 /* s_buffer_atomic_or */, AMDGPU::S_BUFFER_ATOMIC_OR_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8562 /* s_buffer_atomic_or_x2 */, AMDGPU::S_BUFFER_ATOMIC_OR_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8562 /* s_buffer_atomic_or_x2 */, AMDGPU::S_BUFFER_ATOMIC_OR_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8562 /* s_buffer_atomic_or_x2 */, AMDGPU::S_BUFFER_ATOMIC_OR_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8562 /* s_buffer_atomic_or_x2 */, AMDGPU::S_BUFFER_ATOMIC_OR_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8584 /* s_buffer_atomic_smax */, AMDGPU::S_BUFFER_ATOMIC_SMAX_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8584 /* s_buffer_atomic_smax */, AMDGPU::S_BUFFER_ATOMIC_SMAX_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8584 /* s_buffer_atomic_smax */, AMDGPU::S_BUFFER_ATOMIC_SMAX_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8584 /* s_buffer_atomic_smax */, AMDGPU::S_BUFFER_ATOMIC_SMAX_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8605 /* s_buffer_atomic_smax_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMAX_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8605 /* s_buffer_atomic_smax_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMAX_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8605 /* s_buffer_atomic_smax_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMAX_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8605 /* s_buffer_atomic_smax_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMAX_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8629 /* s_buffer_atomic_smin */, AMDGPU::S_BUFFER_ATOMIC_SMIN_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8629 /* s_buffer_atomic_smin */, AMDGPU::S_BUFFER_ATOMIC_SMIN_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8629 /* s_buffer_atomic_smin */, AMDGPU::S_BUFFER_ATOMIC_SMIN_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8629 /* s_buffer_atomic_smin */, AMDGPU::S_BUFFER_ATOMIC_SMIN_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8650 /* s_buffer_atomic_smin_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMIN_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8650 /* s_buffer_atomic_smin_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMIN_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8650 /* s_buffer_atomic_smin_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMIN_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8650 /* s_buffer_atomic_smin_x2 */, AMDGPU::S_BUFFER_ATOMIC_SMIN_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8674 /* s_buffer_atomic_sub */, AMDGPU::S_BUFFER_ATOMIC_SUB_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8674 /* s_buffer_atomic_sub */, AMDGPU::S_BUFFER_ATOMIC_SUB_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8674 /* s_buffer_atomic_sub */, AMDGPU::S_BUFFER_ATOMIC_SUB_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8674 /* s_buffer_atomic_sub */, AMDGPU::S_BUFFER_ATOMIC_SUB_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8694 /* s_buffer_atomic_sub_x2 */, AMDGPU::S_BUFFER_ATOMIC_SUB_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8694 /* s_buffer_atomic_sub_x2 */, AMDGPU::S_BUFFER_ATOMIC_SUB_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8694 /* s_buffer_atomic_sub_x2 */, AMDGPU::S_BUFFER_ATOMIC_SUB_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8694 /* s_buffer_atomic_sub_x2 */, AMDGPU::S_BUFFER_ATOMIC_SUB_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8717 /* s_buffer_atomic_swap */, AMDGPU::S_BUFFER_ATOMIC_SWAP_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8717 /* s_buffer_atomic_swap */, AMDGPU::S_BUFFER_ATOMIC_SWAP_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8717 /* s_buffer_atomic_swap */, AMDGPU::S_BUFFER_ATOMIC_SWAP_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8717 /* s_buffer_atomic_swap */, AMDGPU::S_BUFFER_ATOMIC_SWAP_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8738 /* s_buffer_atomic_swap_x2 */, AMDGPU::S_BUFFER_ATOMIC_SWAP_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8738 /* s_buffer_atomic_swap_x2 */, AMDGPU::S_BUFFER_ATOMIC_SWAP_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8738 /* s_buffer_atomic_swap_x2 */, AMDGPU::S_BUFFER_ATOMIC_SWAP_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8738 /* s_buffer_atomic_swap_x2 */, AMDGPU::S_BUFFER_ATOMIC_SWAP_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8762 /* s_buffer_atomic_umax */, AMDGPU::S_BUFFER_ATOMIC_UMAX_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8762 /* s_buffer_atomic_umax */, AMDGPU::S_BUFFER_ATOMIC_UMAX_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8762 /* s_buffer_atomic_umax */, AMDGPU::S_BUFFER_ATOMIC_UMAX_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8762 /* s_buffer_atomic_umax */, AMDGPU::S_BUFFER_ATOMIC_UMAX_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8783 /* s_buffer_atomic_umax_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMAX_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8783 /* s_buffer_atomic_umax_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMAX_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8783 /* s_buffer_atomic_umax_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMAX_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8783 /* s_buffer_atomic_umax_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMAX_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8807 /* s_buffer_atomic_umin */, AMDGPU::S_BUFFER_ATOMIC_UMIN_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8807 /* s_buffer_atomic_umin */, AMDGPU::S_BUFFER_ATOMIC_UMIN_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8807 /* s_buffer_atomic_umin */, AMDGPU::S_BUFFER_ATOMIC_UMIN_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8807 /* s_buffer_atomic_umin */, AMDGPU::S_BUFFER_ATOMIC_UMIN_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8828 /* s_buffer_atomic_umin_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMIN_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8828 /* s_buffer_atomic_umin_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMIN_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8828 /* s_buffer_atomic_umin_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMIN_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8828 /* s_buffer_atomic_umin_x2 */, AMDGPU::S_BUFFER_ATOMIC_UMIN_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8852 /* s_buffer_atomic_xor */, AMDGPU::S_BUFFER_ATOMIC_XOR_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8852 /* s_buffer_atomic_xor */, AMDGPU::S_BUFFER_ATOMIC_XOR_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8852 /* s_buffer_atomic_xor */, AMDGPU::S_BUFFER_ATOMIC_XOR_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8852 /* s_buffer_atomic_xor */, AMDGPU::S_BUFFER_ATOMIC_XOR_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8872 /* s_buffer_atomic_xor_x2 */, AMDGPU::S_BUFFER_ATOMIC_XOR_X2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32 }, },
  { 8872 /* s_buffer_atomic_xor_x2 */, AMDGPU::S_BUFFER_ATOMIC_XOR_X2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20 }, },
  { 8872 /* s_buffer_atomic_xor_x2 */, AMDGPU::S_BUFFER_ATOMIC_XOR_X2_SGPR_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_glc }, },
  { 8872 /* s_buffer_atomic_xor_x2 */, AMDGPU::S_BUFFER_ATOMIC_XOR_X2_IMM_RTN_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmSMRDOffset201_2, Feature_HasScalarAtomics|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_glc }, },
  { 8895 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8895 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8895 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 8895 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 8895 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 8915 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8915 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8915 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 8915 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 8915 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_512, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 8938 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8938 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8938 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 8938 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 8938 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 8960 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8960 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8960 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 8960 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 8960 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 8982 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8982 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 8982 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 8982 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 8982 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_256, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 9004 /* s_buffer_store_dword */, AMDGPU::S_BUFFER_STORE_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 9004 /* s_buffer_store_dword */, AMDGPU::S_BUFFER_STORE_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 9025 /* s_buffer_store_dwordx2 */, AMDGPU::S_BUFFER_STORE_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 9025 /* s_buffer_store_dwordx2 */, AMDGPU::S_BUFFER_STORE_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 9048 /* s_buffer_store_dwordx4 */, AMDGPU::S_BUFFER_STORE_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 9048 /* s_buffer_store_dwordx4 */, AMDGPU::S_BUFFER_STORE_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 9071 /* s_call_b64 */, AMDGPU::S_CALL_B64_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_S16Imm }, },
  { 9082 /* s_cbranch_cdbgsys */, AMDGPU::S_CBRANCH_CDBGSYS, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9100 /* s_cbranch_cdbgsys_and_user */, AMDGPU::S_CBRANCH_CDBGSYS_AND_USER, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9127 /* s_cbranch_cdbgsys_or_user */, AMDGPU::S_CBRANCH_CDBGSYS_OR_USER, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9153 /* s_cbranch_cdbguser */, AMDGPU::S_CBRANCH_CDBGUSER, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9172 /* s_cbranch_execnz */, AMDGPU::S_CBRANCH_EXECNZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9189 /* s_cbranch_execz */, AMDGPU::S_CBRANCH_EXECZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9205 /* s_cbranch_g_fork */, AMDGPU::S_CBRANCH_G_FORK_si, Convert__SCSrcB641_0__SCSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SCSrcB64, MCK_SCSrcB64 }, },
  { 9205 /* s_cbranch_g_fork */, AMDGPU::S_CBRANCH_G_FORK_vi, Convert__SCSrcB641_0__SCSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SCSrcB64, MCK_SCSrcB64 }, },
  { 9222 /* s_cbranch_i_fork */, AMDGPU::S_CBRANCH_I_FORK_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_S16Imm }, },
  { 9222 /* s_cbranch_i_fork */, AMDGPU::S_CBRANCH_I_FORK_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_S16Imm }, },
  { 9239 /* s_cbranch_join */, AMDGPU::S_CBRANCH_JOIN_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_32 }, },
  { 9239 /* s_cbranch_join */, AMDGPU::S_CBRANCH_JOIN_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_32 }, },
  { 9254 /* s_cbranch_scc0 */, AMDGPU::S_CBRANCH_SCC0, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9269 /* s_cbranch_scc1 */, AMDGPU::S_CBRANCH_SCC1, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9284 /* s_cbranch_vccnz */, AMDGPU::S_CBRANCH_VCCNZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9300 /* s_cbranch_vccz */, AMDGPU::S_CBRANCH_VCCZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 9315 /* s_cmov_b32 */, AMDGPU::S_CMOV_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9315 /* s_cmov_b32 */, AMDGPU::S_CMOV_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9326 /* s_cmov_b64 */, AMDGPU::S_CMOV_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 9326 /* s_cmov_b64 */, AMDGPU::S_CMOV_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 9337 /* s_cmovk_i32 */, AMDGPU::S_CMOVK_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9337 /* s_cmovk_i32 */, AMDGPU::S_CMOVK_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9349 /* s_cmp_eq_i32 */, AMDGPU::S_CMP_EQ_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9362 /* s_cmp_eq_u32 */, AMDGPU::S_CMP_EQ_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9375 /* s_cmp_eq_u64 */, AMDGPU::S_CMP_EQ_U64, Convert__SSrcB641_0__SSrcB641_1, Feature_isVI, { MCK_SSrcB64, MCK_SSrcB64 }, },
  { 9388 /* s_cmp_ge_i32 */, AMDGPU::S_CMP_GE_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9401 /* s_cmp_ge_u32 */, AMDGPU::S_CMP_GE_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9414 /* s_cmp_gt_i32 */, AMDGPU::S_CMP_GT_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9427 /* s_cmp_gt_u32 */, AMDGPU::S_CMP_GT_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9440 /* s_cmp_le_i32 */, AMDGPU::S_CMP_LE_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9453 /* s_cmp_le_u32 */, AMDGPU::S_CMP_LE_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9466 /* s_cmp_lg_i32 */, AMDGPU::S_CMP_LG_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9479 /* s_cmp_lg_u32 */, AMDGPU::S_CMP_LG_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9492 /* s_cmp_lg_u64 */, AMDGPU::S_CMP_LG_U64, Convert__SSrcB641_0__SSrcB641_1, Feature_isVI, { MCK_SSrcB64, MCK_SSrcB64 }, },
  { 9505 /* s_cmp_lt_i32 */, AMDGPU::S_CMP_LT_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9518 /* s_cmp_lt_u32 */, AMDGPU::S_CMP_LT_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9531 /* s_cmpk_eq_i32 */, AMDGPU::S_CMPK_EQ_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9531 /* s_cmpk_eq_i32 */, AMDGPU::S_CMPK_EQ_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9545 /* s_cmpk_eq_u32 */, AMDGPU::S_CMPK_EQ_U32_si, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9545 /* s_cmpk_eq_u32 */, AMDGPU::S_CMPK_EQ_U32_vi, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9559 /* s_cmpk_ge_i32 */, AMDGPU::S_CMPK_GE_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9559 /* s_cmpk_ge_i32 */, AMDGPU::S_CMPK_GE_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9573 /* s_cmpk_ge_u32 */, AMDGPU::S_CMPK_GE_U32_si, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9573 /* s_cmpk_ge_u32 */, AMDGPU::S_CMPK_GE_U32_vi, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9587 /* s_cmpk_gt_i32 */, AMDGPU::S_CMPK_GT_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9587 /* s_cmpk_gt_i32 */, AMDGPU::S_CMPK_GT_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9601 /* s_cmpk_gt_u32 */, AMDGPU::S_CMPK_GT_U32_si, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9601 /* s_cmpk_gt_u32 */, AMDGPU::S_CMPK_GT_U32_vi, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9615 /* s_cmpk_le_i32 */, AMDGPU::S_CMPK_LE_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9615 /* s_cmpk_le_i32 */, AMDGPU::S_CMPK_LE_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9629 /* s_cmpk_le_u32 */, AMDGPU::S_CMPK_LE_U32_si, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9629 /* s_cmpk_le_u32 */, AMDGPU::S_CMPK_LE_U32_vi, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9643 /* s_cmpk_lg_i32 */, AMDGPU::S_CMPK_LG_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9643 /* s_cmpk_lg_i32 */, AMDGPU::S_CMPK_LG_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9657 /* s_cmpk_lg_u32 */, AMDGPU::S_CMPK_LG_U32_si, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9657 /* s_cmpk_lg_u32 */, AMDGPU::S_CMPK_LG_U32_vi, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9671 /* s_cmpk_lt_i32 */, AMDGPU::S_CMPK_LT_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9671 /* s_cmpk_lt_i32 */, AMDGPU::S_CMPK_LT_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 9685 /* s_cmpk_lt_u32 */, AMDGPU::S_CMPK_LT_U32_si, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9685 /* s_cmpk_lt_u32 */, AMDGPU::S_CMPK_LT_U32_vi, Convert__Reg1_0__U16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_U16Imm }, },
  { 9699 /* s_cselect_b32 */, AMDGPU::S_CSELECT_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9699 /* s_cselect_b32 */, AMDGPU::S_CSELECT_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 9713 /* s_cselect_b64 */, AMDGPU::S_CSELECT_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 9713 /* s_cselect_b64 */, AMDGPU::S_CSELECT_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 9727 /* s_dcache_discard */, AMDGPU::S_DCACHE_DISCARD_SGPR_vi, Convert__Reg1_0__Reg1_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SReg_32 }, },
  { 9727 /* s_dcache_discard */, AMDGPU::S_DCACHE_DISCARD_IMM_vi, Convert__Reg1_0__ImmSMRDOffset201_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 9744 /* s_dcache_discard_x2 */, AMDGPU::S_DCACHE_DISCARD_X2_SGPR_vi, Convert__Reg1_0__Reg1_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SReg_32 }, },
  { 9744 /* s_dcache_discard_x2 */, AMDGPU::S_DCACHE_DISCARD_X2_IMM_vi, Convert__Reg1_0__ImmSMRDOffset201_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_ImmSMRDOffset20 }, },
  { 9764 /* s_dcache_inv */, AMDGPU::S_DCACHE_INV_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 9764 /* s_dcache_inv */, AMDGPU::S_DCACHE_INV_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 9777 /* s_dcache_inv_vol */, AMDGPU::S_DCACHE_INV_VOL_ci, Convert_NoOperands, Feature_isCIVI|Feature_isCIOnly, {  }, },
  { 9777 /* s_dcache_inv_vol */, AMDGPU::S_DCACHE_INV_VOL_vi, Convert_NoOperands, Feature_isCIVI|Feature_isVI, {  }, },
  { 9794 /* s_dcache_wb */, AMDGPU::S_DCACHE_WB_vi, Convert_NoOperands, Feature_isVI|Feature_isVI, {  }, },
  { 9806 /* s_dcache_wb_vol */, AMDGPU::S_DCACHE_WB_VOL_vi, Convert_NoOperands, Feature_isVI|Feature_isVI, {  }, },
  { 9822 /* s_decperflevel */, AMDGPU::S_DECPERFLEVEL, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 9837 /* s_endpgm */, AMDGPU::S_ENDPGM, Convert_NoOperands, Feature_isGCN, {  }, },
  { 9846 /* s_endpgm_ordered_ps_done */, AMDGPU::S_ENDPGM_ORDERED_PS_DONE, Convert_NoOperands, Feature_isGFX9, {  }, },
  { 9871 /* s_endpgm_saved */, AMDGPU::S_ENDPGM_SAVED, Convert_NoOperands, Feature_isVI, {  }, },
  { 9886 /* s_ff0_i32_b32 */, AMDGPU::S_FF0_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9886 /* s_ff0_i32_b32 */, AMDGPU::S_FF0_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9900 /* s_ff0_i32_b64 */, AMDGPU::S_FF0_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9900 /* s_ff0_i32_b64 */, AMDGPU::S_FF0_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9914 /* s_ff1_i32_b32 */, AMDGPU::S_FF1_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9914 /* s_ff1_i32_b32 */, AMDGPU::S_FF1_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9928 /* s_ff1_i32_b64 */, AMDGPU::S_FF1_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9928 /* s_ff1_i32_b64 */, AMDGPU::S_FF1_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9942 /* s_flbit_i32 */, AMDGPU::S_FLBIT_I32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9942 /* s_flbit_i32 */, AMDGPU::S_FLBIT_I32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9954 /* s_flbit_i32_b32 */, AMDGPU::S_FLBIT_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9954 /* s_flbit_i32_b32 */, AMDGPU::S_FLBIT_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 9970 /* s_flbit_i32_b64 */, AMDGPU::S_FLBIT_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9970 /* s_flbit_i32_b64 */, AMDGPU::S_FLBIT_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9986 /* s_flbit_i32_i64 */, AMDGPU::S_FLBIT_I32_I64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 9986 /* s_flbit_i32_i64 */, AMDGPU::S_FLBIT_I32_I64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 10002 /* s_getpc_b64 */, AMDGPU::S_GETPC_B64_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 10002 /* s_getpc_b64 */, AMDGPU::S_GETPC_B64_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 10014 /* s_getreg_b32 */, AMDGPU::S_GETREG_B32_si, Convert__Reg1_0__ImmHwreg1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_ImmHwreg }, },
  { 10014 /* s_getreg_b32 */, AMDGPU::S_GETREG_B32_vi, Convert__Reg1_0__ImmHwreg1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_ImmHwreg }, },
  { 10027 /* s_icache_inv */, AMDGPU::S_ICACHE_INV, Convert_NoOperands, Feature_isGCN, {  }, },
  { 10040 /* s_incperflevel */, AMDGPU::S_INCPERFLEVEL, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 10055 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10055 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10055 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 10055 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10055 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 10068 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10068 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10068 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 10068 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10068 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_512, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 10084 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10084 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10084 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 10084 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10084 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 10099 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10099 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10099 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 10099 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10099 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 10114 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10114 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10114 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 10114 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10114 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_256, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 10129 /* s_lshl1_add_u32 */, AMDGPU::S_LSHL1_ADD_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10145 /* s_lshl2_add_u32 */, AMDGPU::S_LSHL2_ADD_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10161 /* s_lshl3_add_u32 */, AMDGPU::S_LSHL3_ADD_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10177 /* s_lshl4_add_u32 */, AMDGPU::S_LSHL4_ADD_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10193 /* s_lshl_b32 */, AMDGPU::S_LSHL_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10193 /* s_lshl_b32 */, AMDGPU::S_LSHL_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10204 /* s_lshl_b64 */, AMDGPU::S_LSHL_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 10204 /* s_lshl_b64 */, AMDGPU::S_LSHL_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 10215 /* s_lshr_b32 */, AMDGPU::S_LSHR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10215 /* s_lshr_b32 */, AMDGPU::S_LSHR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10226 /* s_lshr_b64 */, AMDGPU::S_LSHR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 10226 /* s_lshr_b64 */, AMDGPU::S_LSHR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 10237 /* s_max_i32 */, AMDGPU::S_MAX_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10237 /* s_max_i32 */, AMDGPU::S_MAX_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10247 /* s_max_u32 */, AMDGPU::S_MAX_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10247 /* s_max_u32 */, AMDGPU::S_MAX_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10257 /* s_memrealtime */, AMDGPU::S_MEMREALTIME_vi, Convert__Reg1_0, Feature_isVI|Feature_isVI, { MCK_SReg_64_XEXEC }, },
  { 10271 /* s_memtime */, AMDGPU::S_MEMTIME_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC }, },
  { 10271 /* s_memtime */, AMDGPU::S_MEMTIME_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC }, },
  { 10281 /* s_min_i32 */, AMDGPU::S_MIN_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10281 /* s_min_i32 */, AMDGPU::S_MIN_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10291 /* s_min_u32 */, AMDGPU::S_MIN_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10291 /* s_min_u32 */, AMDGPU::S_MIN_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10301 /* s_mov_b32 */, AMDGPU::S_MOV_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10301 /* s_mov_b32 */, AMDGPU::S_MOV_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10311 /* s_mov_b64 */, AMDGPU::S_MOV_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10311 /* s_mov_b64 */, AMDGPU::S_MOV_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10321 /* s_mov_fed_b32 */, AMDGPU::S_MOV_FED_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10321 /* s_mov_fed_b32 */, AMDGPU::S_MOV_FED_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10335 /* s_mov_regrd_b32 */, AMDGPU::S_MOV_REGRD_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10335 /* s_mov_regrd_b32 */, AMDGPU::S_MOV_REGRD_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10351 /* s_movk_i32 */, AMDGPU::S_MOVK_I32_si, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 10351 /* s_movk_i32 */, AMDGPU::S_MOVK_I32_vi, Convert__Reg1_0__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 10362 /* s_movreld_b32 */, AMDGPU::S_MOVRELD_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10362 /* s_movreld_b32 */, AMDGPU::S_MOVRELD_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10376 /* s_movreld_b64 */, AMDGPU::S_MOVRELD_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10376 /* s_movreld_b64 */, AMDGPU::S_MOVRELD_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10390 /* s_movrels_b32 */, AMDGPU::S_MOVRELS_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10390 /* s_movrels_b32 */, AMDGPU::S_MOVRELS_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10404 /* s_movrels_b64 */, AMDGPU::S_MOVRELS_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10404 /* s_movrels_b64 */, AMDGPU::S_MOVRELS_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10418 /* s_mul_hi_i32 */, AMDGPU::S_MUL_HI_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10431 /* s_mul_hi_u32 */, AMDGPU::S_MUL_HI_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10444 /* s_mul_i32 */, AMDGPU::S_MUL_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10444 /* s_mul_i32 */, AMDGPU::S_MUL_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10454 /* s_mulk_i32 */, AMDGPU::S_MULK_I32_si, Convert__Reg1_0__Tie0_1_1__S16Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_S16Imm }, },
  { 10454 /* s_mulk_i32 */, AMDGPU::S_MULK_I32_vi, Convert__Reg1_0__Tie0_1_1__S16Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_S16Imm }, },
  { 10465 /* s_nand_b32 */, AMDGPU::S_NAND_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10465 /* s_nand_b32 */, AMDGPU::S_NAND_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10476 /* s_nand_b64 */, AMDGPU::S_NAND_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10476 /* s_nand_b64 */, AMDGPU::S_NAND_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10487 /* s_nand_saveexec_b64 */, AMDGPU::S_NAND_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10487 /* s_nand_saveexec_b64 */, AMDGPU::S_NAND_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10507 /* s_nop */, AMDGPU::S_NOP, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 10513 /* s_nor_b32 */, AMDGPU::S_NOR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10513 /* s_nor_b32 */, AMDGPU::S_NOR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10523 /* s_nor_b64 */, AMDGPU::S_NOR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10523 /* s_nor_b64 */, AMDGPU::S_NOR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10533 /* s_nor_saveexec_b64 */, AMDGPU::S_NOR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10533 /* s_nor_saveexec_b64 */, AMDGPU::S_NOR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10552 /* s_not_b32 */, AMDGPU::S_NOT_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10552 /* s_not_b32 */, AMDGPU::S_NOT_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10562 /* s_not_b64 */, AMDGPU::S_NOT_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10562 /* s_not_b64 */, AMDGPU::S_NOT_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10572 /* s_or_b32 */, AMDGPU::S_OR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10572 /* s_or_b32 */, AMDGPU::S_OR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10581 /* s_or_b64 */, AMDGPU::S_OR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10581 /* s_or_b64 */, AMDGPU::S_OR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10590 /* s_or_saveexec_b64 */, AMDGPU::S_OR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10590 /* s_or_saveexec_b64 */, AMDGPU::S_OR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10608 /* s_orn1_saveexec_b64 */, AMDGPU::S_ORN1_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGFX9|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10628 /* s_orn2_b32 */, AMDGPU::S_ORN2_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10628 /* s_orn2_b32 */, AMDGPU::S_ORN2_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10639 /* s_orn2_b64 */, AMDGPU::S_ORN2_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10639 /* s_orn2_b64 */, AMDGPU::S_ORN2_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 10650 /* s_orn2_saveexec_b64 */, AMDGPU::S_ORN2_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10650 /* s_orn2_saveexec_b64 */, AMDGPU::S_ORN2_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10670 /* s_pack_hh_b32_b16 */, AMDGPU::S_PACK_HH_B32_B16_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10688 /* s_pack_lh_b32_b16 */, AMDGPU::S_PACK_LH_B32_B16_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10706 /* s_pack_ll_b32_b16 */, AMDGPU::S_PACK_LL_B32_B16_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGFX9|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 10724 /* s_quadmask_b32 */, AMDGPU::S_QUADMASK_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10724 /* s_quadmask_b32 */, AMDGPU::S_QUADMASK_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 10739 /* s_quadmask_b64 */, AMDGPU::S_QUADMASK_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10739 /* s_quadmask_b64 */, AMDGPU::S_QUADMASK_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 10754 /* s_rfe_b64 */, AMDGPU::S_RFE_B64_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 10754 /* s_rfe_b64 */, AMDGPU::S_RFE_B64_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 10764 /* s_rfe_restore_b64 */, AMDGPU::S_RFE_RESTORE_B64_vi, Convert__SSrcB641_0__SSrcB321_1, Feature_isVI|Feature_isVI, { MCK_SSrcB64, MCK_SSrcB32 }, },
  { 10782 /* s_scratch_load_dword */, AMDGPU::S_SCRATCH_LOAD_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10782 /* s_scratch_load_dword */, AMDGPU::S_SCRATCH_LOAD_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10803 /* s_scratch_load_dwordx2 */, AMDGPU::S_SCRATCH_LOAD_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10803 /* s_scratch_load_dwordx2 */, AMDGPU::S_SCRATCH_LOAD_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10826 /* s_scratch_load_dwordx4 */, AMDGPU::S_SCRATCH_LOAD_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10826 /* s_scratch_load_dwordx4 */, AMDGPU::S_SCRATCH_LOAD_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10849 /* s_scratch_store_dword */, AMDGPU::S_SCRATCH_STORE_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10849 /* s_scratch_store_dword */, AMDGPU::S_SCRATCH_STORE_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10871 /* s_scratch_store_dwordx2 */, AMDGPU::S_SCRATCH_STORE_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10871 /* s_scratch_store_dwordx2 */, AMDGPU::S_SCRATCH_STORE_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10895 /* s_scratch_store_dwordx4 */, AMDGPU::S_SCRATCH_STORE_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 10895 /* s_scratch_store_dwordx4 */, AMDGPU::S_SCRATCH_STORE_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 10919 /* s_sendmsg */, AMDGPU::S_SENDMSG, Convert__SendMsg1_0, Feature_isGCN, { MCK_SendMsg }, },
  { 10929 /* s_sendmsghalt */, AMDGPU::S_SENDMSGHALT, Convert__SendMsg1_0, Feature_isGCN, { MCK_SendMsg }, },
  { 10943 /* s_set_gpr_idx_idx */, AMDGPU::S_SET_GPR_IDX_IDX_vi, Convert__SSrcB321_0, Feature_HasVGPRIndexMode|Feature_isVI, { MCK_SSrcB32 }, },
  { 10961 /* s_set_gpr_idx_mode */, AMDGPU::S_SET_GPR_IDX_MODE, Convert__GPRIdxMode1_0, Feature_HasVGPRIndexMode, { MCK_GPRIdxMode }, },
  { 10980 /* s_set_gpr_idx_off */, AMDGPU::S_SET_GPR_IDX_OFF, Convert_NoOperands, Feature_HasVGPRIndexMode, {  }, },
  { 10998 /* s_set_gpr_idx_on */, AMDGPU::S_SET_GPR_IDX_ON, Convert__SSrcB321_0__GPRIdxMode1_1, Feature_HasVGPRIndexMode, { MCK_SSrcB32, MCK_GPRIdxMode }, },
  { 11015 /* s_sethalt */, AMDGPU::S_SETHALT, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 11025 /* s_setkill */, AMDGPU::S_SETKILL, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 11035 /* s_setpc_b64 */, AMDGPU::S_SETPC_B64_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 11035 /* s_setpc_b64 */, AMDGPU::S_SETPC_B64_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 11047 /* s_setprio */, AMDGPU::S_SETPRIO, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 11057 /* s_setreg_b32 */, AMDGPU::S_SETREG_B32_si, Convert__Reg1_1__ImmHwreg1_0, Feature_isGCN|Feature_isSICI, { MCK_ImmHwreg, MCK_SReg_32 }, },
  { 11057 /* s_setreg_b32 */, AMDGPU::S_SETREG_B32_vi, Convert__Reg1_1__ImmHwreg1_0, Feature_isGCN|Feature_isVI, { MCK_ImmHwreg, MCK_SReg_32 }, },
  { 11070 /* s_setreg_imm32_b32 */, AMDGPU::S_SETREG_IMM32_B32_si, Convert__Imm1_1__ImmHwreg1_0, Feature_isGCN|Feature_isSICI, { MCK_ImmHwreg, MCK_Imm }, },
  { 11070 /* s_setreg_imm32_b32 */, AMDGPU::S_SETREG_IMM32_B32_vi, Convert__Imm1_1__ImmHwreg1_0, Feature_isGCN|Feature_isVI, { MCK_ImmHwreg, MCK_Imm }, },
  { 11089 /* s_setvskip */, AMDGPU::S_SETVSKIP, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11100 /* s_sext_i32_i16 */, AMDGPU::S_SEXT_I32_I16_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 11100 /* s_sext_i32_i16 */, AMDGPU::S_SEXT_I32_I16_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 11115 /* s_sext_i32_i8 */, AMDGPU::S_SEXT_I32_I8_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 11115 /* s_sext_i32_i8 */, AMDGPU::S_SEXT_I32_I8_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 11129 /* s_sleep */, AMDGPU::S_SLEEP, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 11137 /* s_store_dword */, AMDGPU::S_STORE_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 11137 /* s_store_dword */, AMDGPU::S_STORE_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 11151 /* s_store_dwordx2 */, AMDGPU::S_STORE_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 11151 /* s_store_dwordx2 */, AMDGPU::S_STORE_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 11167 /* s_store_dwordx4 */, AMDGPU::S_STORE_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 11167 /* s_store_dwordx4 */, AMDGPU::S_STORE_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 11183 /* s_sub_i32 */, AMDGPU::S_SUB_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11183 /* s_sub_i32 */, AMDGPU::S_SUB_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11193 /* s_sub_u32 */, AMDGPU::S_SUB_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11193 /* s_sub_u32 */, AMDGPU::S_SUB_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11203 /* s_subb_u32 */, AMDGPU::S_SUBB_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11203 /* s_subb_u32 */, AMDGPU::S_SUBB_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11214 /* s_swappc_b64 */, AMDGPU::S_SWAPPC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11214 /* s_swappc_b64 */, AMDGPU::S_SWAPPC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11227 /* s_trap */, AMDGPU::S_TRAP, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 11234 /* s_ttracedata */, AMDGPU::S_TTRACEDATA, Convert_NoOperands, Feature_isGCN, {  }, },
  { 11247 /* s_waitcnt */, AMDGPU::S_WAITCNT, Convert__SWaitCnt1_0, Feature_isGCN, { MCK_SWaitCnt }, },
  { 11257 /* s_wakeup */, AMDGPU::S_WAKEUP, Convert_NoOperands, Feature_isVI, {  }, },
  { 11266 /* s_wqm_b32 */, AMDGPU::S_WQM_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 11266 /* s_wqm_b32 */, AMDGPU::S_WQM_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 11276 /* s_wqm_b64 */, AMDGPU::S_WQM_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11276 /* s_wqm_b64 */, AMDGPU::S_WQM_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11286 /* s_xnor_b32 */, AMDGPU::S_XNOR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11286 /* s_xnor_b32 */, AMDGPU::S_XNOR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11297 /* s_xnor_b64 */, AMDGPU::S_XNOR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 11297 /* s_xnor_b64 */, AMDGPU::S_XNOR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 11308 /* s_xnor_saveexec_b64 */, AMDGPU::S_XNOR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11308 /* s_xnor_saveexec_b64 */, AMDGPU::S_XNOR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11328 /* s_xor_b32 */, AMDGPU::S_XOR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11328 /* s_xor_b32 */, AMDGPU::S_XOR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 11338 /* s_xor_b64 */, AMDGPU::S_XOR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 11338 /* s_xor_b64 */, AMDGPU::S_XOR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 11348 /* s_xor_saveexec_b64 */, AMDGPU::S_XOR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11348 /* s_xor_saveexec_b64 */, AMDGPU::S_XOR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 11367 /* scratch_load_dword */, AMDGPU::SCRATCH_LOAD_DWORD_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11367 /* scratch_load_dword */, AMDGPU::SCRATCH_LOAD_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11386 /* scratch_load_dwordx2 */, AMDGPU::SCRATCH_LOAD_DWORDX2_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11386 /* scratch_load_dwordx2 */, AMDGPU::SCRATCH_LOAD_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11407 /* scratch_load_dwordx3 */, AMDGPU::SCRATCH_LOAD_DWORDX3_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11407 /* scratch_load_dwordx3 */, AMDGPU::SCRATCH_LOAD_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11428 /* scratch_load_dwordx4 */, AMDGPU::SCRATCH_LOAD_DWORDX4_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11428 /* scratch_load_dwordx4 */, AMDGPU::SCRATCH_LOAD_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11449 /* scratch_load_sbyte */, AMDGPU::SCRATCH_LOAD_SBYTE_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11449 /* scratch_load_sbyte */, AMDGPU::SCRATCH_LOAD_SBYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11468 /* scratch_load_sbyte_d16 */, AMDGPU::SCRATCH_LOAD_SBYTE_D16_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11468 /* scratch_load_sbyte_d16 */, AMDGPU::SCRATCH_LOAD_SBYTE_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11491 /* scratch_load_sbyte_d16_hi */, AMDGPU::SCRATCH_LOAD_SBYTE_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11491 /* scratch_load_sbyte_d16_hi */, AMDGPU::SCRATCH_LOAD_SBYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11517 /* scratch_load_short_d16 */, AMDGPU::SCRATCH_LOAD_SHORT_D16_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11517 /* scratch_load_short_d16 */, AMDGPU::SCRATCH_LOAD_SHORT_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11540 /* scratch_load_short_d16_hi */, AMDGPU::SCRATCH_LOAD_SHORT_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11540 /* scratch_load_short_d16_hi */, AMDGPU::SCRATCH_LOAD_SHORT_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11566 /* scratch_load_sshort */, AMDGPU::SCRATCH_LOAD_SSHORT_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11566 /* scratch_load_sshort */, AMDGPU::SCRATCH_LOAD_SSHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11586 /* scratch_load_ubyte */, AMDGPU::SCRATCH_LOAD_UBYTE_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11586 /* scratch_load_ubyte */, AMDGPU::SCRATCH_LOAD_UBYTE_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11605 /* scratch_load_ubyte_d16 */, AMDGPU::SCRATCH_LOAD_UBYTE_D16_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11605 /* scratch_load_ubyte_d16 */, AMDGPU::SCRATCH_LOAD_UBYTE_D16_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11628 /* scratch_load_ubyte_d16_hi */, AMDGPU::SCRATCH_LOAD_UBYTE_D16_HI_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11628 /* scratch_load_ubyte_d16_hi */, AMDGPU::SCRATCH_LOAD_UBYTE_D16_HI_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11654 /* scratch_load_ushort */, AMDGPU::SCRATCH_LOAD_USHORT_SADDR_vi, Convert__Reg1_0__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11654 /* scratch_load_ushort */, AMDGPU::SCRATCH_LOAD_USHORT_vi, Convert__Reg1_0__Reg1_1__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11674 /* scratch_store_byte */, AMDGPU::SCRATCH_STORE_BYTE_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VGPR_32, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11674 /* scratch_store_byte */, AMDGPU::SCRATCH_STORE_BYTE_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11693 /* scratch_store_byte_d16_hi */, AMDGPU::SCRATCH_STORE_BYTE_D16_HI_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VGPR_32, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11693 /* scratch_store_byte_d16_hi */, AMDGPU::SCRATCH_STORE_BYTE_D16_HI_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11719 /* scratch_store_dword */, AMDGPU::SCRATCH_STORE_DWORD_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VGPR_32, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11719 /* scratch_store_dword */, AMDGPU::SCRATCH_STORE_DWORD_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11739 /* scratch_store_dwordx2 */, AMDGPU::SCRATCH_STORE_DWORDX2_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VReg_64, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11739 /* scratch_store_dwordx2 */, AMDGPU::SCRATCH_STORE_DWORDX2_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11761 /* scratch_store_dwordx3 */, AMDGPU::SCRATCH_STORE_DWORDX3_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VReg_96, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11761 /* scratch_store_dwordx3 */, AMDGPU::SCRATCH_STORE_DWORDX3_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_96, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11783 /* scratch_store_dwordx4 */, AMDGPU::SCRATCH_STORE_DWORDX4_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VReg_128, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11783 /* scratch_store_dwordx4 */, AMDGPU::SCRATCH_STORE_DWORDX4_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11805 /* scratch_store_short */, AMDGPU::SCRATCH_STORE_SHORT_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VGPR_32, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11805 /* scratch_store_short */, AMDGPU::SCRATCH_STORE_SHORT_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11825 /* scratch_store_short_d16_hi */, AMDGPU::SCRATCH_STORE_SHORT_D16_HI_SADDR_vi, Convert__Reg1_1__Reg1_2__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_off, MCK_VGPR_32, MCK_SReg_32_XEXEC_HI, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11825 /* scratch_store_short_d16_hi */, AMDGPU::SCRATCH_STORE_SHORT_D16_HI_vi, Convert__Reg1_1__Reg1_0__ImmOffsetS131_3__ImmGLC1_4__ImmSLC1_5, Feature_HasFlatScratchInsts|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_off, MCK_ImmOffsetS13, MCK_ImmGLC, MCK_ImmSLC }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11852 /* tbuffer_load_format_d16_x */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_X_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11878 /* tbuffer_load_format_d16_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XY_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11905 /* tbuffer_load_format_d16_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZ_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11933 /* tbuffer_load_format_d16_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_D16_XYZW_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11962 /* tbuffer_load_format_x */, AMDGPU::TBUFFER_LOAD_FORMAT_X_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 11984 /* tbuffer_load_format_xy */, AMDGPU::TBUFFER_LOAD_FORMAT_XY_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12007 /* tbuffer_load_format_xyz */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZ_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12031 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12056 /* tbuffer_store_format_d16_x */, AMDGPU::TBUFFER_STORE_FORMAT_D16_X_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12083 /* tbuffer_store_format_d16_xy */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XY_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12111 /* tbuffer_store_format_d16_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZ_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_gfx80_OFFSET_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_gfx80_IDXEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_gfx80_OFFEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_gfx80_BOTHEN_gfx80, ConvertCustom_cvtMtbuf, Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12140 /* tbuffer_store_format_d16_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_D16_XYZW_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_HasPackedD16VMem|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12170 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12193 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12217 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_OFFSET_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_OFFSET_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_ADDR64_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_IDXEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_IDXEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_OFFEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_OFFEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_BOTHEN_si, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12242 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_BOTHEN_vi, ConvertCustom_cvtMtbuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_ImmFORMAT, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 12279 /* v_add_co_u32 */, AMDGPU::V_ADD_CO_U32_e32_gfx9, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12292 /* v_add_f16 */, AMDGPU::V_ADD_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12332 /* v_add_i32 */, AMDGPU::V_ADD_I32_e32_si, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12357 /* v_add_u16 */, AMDGPU::V_ADD_U16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_e32_gfx9, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_HasAddNoCarryInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_e32_vi, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12377 /* v_addc_co_u32 */, AMDGPU::V_ADDC_CO_U32_e32_gfx9, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 12391 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e32_si, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 12391 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e32_vi, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12456 /* v_ashr_i32 */, AMDGPU::V_ASHR_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12478 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12520 /* v_bcnt_u32_b32 */, AMDGPU::V_BCNT_U32_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12565 /* v_bfm_b32 */, AMDGPU::V_BFM_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 12587 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 12609 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 12609 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 12620 /* v_clrexcp */, AMDGPU::V_CLREXCP_e32_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 12620 /* v_clrexcp */, AMDGPU::V_CLREXCP_e32_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 12630 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 12646 /* v_cmp_class_f16_e32 */, AMDGPU::V_CMP_CLASS_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 12666 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12666 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12682 /* v_cmp_class_f32_e32 */, AMDGPU::V_CMP_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12682 /* v_cmp_class_f32_e32 */, AMDGPU::V_CMP_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12702 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 12702 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 12718 /* v_cmp_class_f64_e32 */, AMDGPU::V_CMP_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 12718 /* v_cmp_class_f64_e32 */, AMDGPU::V_CMP_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 12738 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 12751 /* v_cmp_eq_f16_e32 */, AMDGPU::V_CMP_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 12768 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12768 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12781 /* v_cmp_eq_f32_e32 */, AMDGPU::V_CMP_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12781 /* v_cmp_eq_f32_e32 */, AMDGPU::V_CMP_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12798 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12798 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12811 /* v_cmp_eq_f64_e32 */, AMDGPU::V_CMP_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12811 /* v_cmp_eq_f64_e32 */, AMDGPU::V_CMP_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12828 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 12841 /* v_cmp_eq_i16_e32 */, AMDGPU::V_CMP_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 12858 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12858 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12871 /* v_cmp_eq_i32_e32 */, AMDGPU::V_CMP_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12871 /* v_cmp_eq_i32_e32 */, AMDGPU::V_CMP_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12888 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12888 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12901 /* v_cmp_eq_i64_e32 */, AMDGPU::V_CMP_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12901 /* v_cmp_eq_i64_e32 */, AMDGPU::V_CMP_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12918 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 12931 /* v_cmp_eq_u16_e32 */, AMDGPU::V_CMP_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 12948 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12948 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12961 /* v_cmp_eq_u32_e32 */, AMDGPU::V_CMP_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12961 /* v_cmp_eq_u32_e32 */, AMDGPU::V_CMP_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 12978 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12978 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12991 /* v_cmp_eq_u64_e32 */, AMDGPU::V_CMP_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 12991 /* v_cmp_eq_u64_e32 */, AMDGPU::V_CMP_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13008 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13020 /* v_cmp_f_f16_e32 */, AMDGPU::V_CMP_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13036 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13036 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13048 /* v_cmp_f_f32_e32 */, AMDGPU::V_CMP_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13048 /* v_cmp_f_f32_e32 */, AMDGPU::V_CMP_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13064 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13064 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13076 /* v_cmp_f_f64_e32 */, AMDGPU::V_CMP_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13076 /* v_cmp_f_f64_e32 */, AMDGPU::V_CMP_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13092 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13104 /* v_cmp_f_i16_e32 */, AMDGPU::V_CMP_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13120 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13120 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13132 /* v_cmp_f_i32_e32 */, AMDGPU::V_CMP_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13132 /* v_cmp_f_i32_e32 */, AMDGPU::V_CMP_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13148 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13148 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13160 /* v_cmp_f_i64_e32 */, AMDGPU::V_CMP_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13160 /* v_cmp_f_i64_e32 */, AMDGPU::V_CMP_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13176 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13188 /* v_cmp_f_u16_e32 */, AMDGPU::V_CMP_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13204 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13204 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13216 /* v_cmp_f_u32_e32 */, AMDGPU::V_CMP_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13216 /* v_cmp_f_u32_e32 */, AMDGPU::V_CMP_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13232 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13232 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13244 /* v_cmp_f_u64_e32 */, AMDGPU::V_CMP_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13244 /* v_cmp_f_u64_e32 */, AMDGPU::V_CMP_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13260 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13273 /* v_cmp_ge_f16_e32 */, AMDGPU::V_CMP_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13290 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13290 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13303 /* v_cmp_ge_f32_e32 */, AMDGPU::V_CMP_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13303 /* v_cmp_ge_f32_e32 */, AMDGPU::V_CMP_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13320 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13320 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13333 /* v_cmp_ge_f64_e32 */, AMDGPU::V_CMP_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13333 /* v_cmp_ge_f64_e32 */, AMDGPU::V_CMP_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13350 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13363 /* v_cmp_ge_i16_e32 */, AMDGPU::V_CMP_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13380 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13380 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13393 /* v_cmp_ge_i32_e32 */, AMDGPU::V_CMP_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13393 /* v_cmp_ge_i32_e32 */, AMDGPU::V_CMP_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13410 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13410 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13423 /* v_cmp_ge_i64_e32 */, AMDGPU::V_CMP_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13423 /* v_cmp_ge_i64_e32 */, AMDGPU::V_CMP_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13440 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13453 /* v_cmp_ge_u16_e32 */, AMDGPU::V_CMP_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13470 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13470 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13483 /* v_cmp_ge_u32_e32 */, AMDGPU::V_CMP_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13483 /* v_cmp_ge_u32_e32 */, AMDGPU::V_CMP_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13500 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13500 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13513 /* v_cmp_ge_u64_e32 */, AMDGPU::V_CMP_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13513 /* v_cmp_ge_u64_e32 */, AMDGPU::V_CMP_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13530 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13543 /* v_cmp_gt_f16_e32 */, AMDGPU::V_CMP_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13560 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13560 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13573 /* v_cmp_gt_f32_e32 */, AMDGPU::V_CMP_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13573 /* v_cmp_gt_f32_e32 */, AMDGPU::V_CMP_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13590 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13590 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13603 /* v_cmp_gt_f64_e32 */, AMDGPU::V_CMP_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13603 /* v_cmp_gt_f64_e32 */, AMDGPU::V_CMP_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13620 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13633 /* v_cmp_gt_i16_e32 */, AMDGPU::V_CMP_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13650 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13650 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13663 /* v_cmp_gt_i32_e32 */, AMDGPU::V_CMP_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13663 /* v_cmp_gt_i32_e32 */, AMDGPU::V_CMP_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13680 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13680 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13693 /* v_cmp_gt_i64_e32 */, AMDGPU::V_CMP_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13693 /* v_cmp_gt_i64_e32 */, AMDGPU::V_CMP_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13710 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13723 /* v_cmp_gt_u16_e32 */, AMDGPU::V_CMP_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13740 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13740 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13753 /* v_cmp_gt_u32_e32 */, AMDGPU::V_CMP_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13753 /* v_cmp_gt_u32_e32 */, AMDGPU::V_CMP_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13770 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13770 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13783 /* v_cmp_gt_u64_e32 */, AMDGPU::V_CMP_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13783 /* v_cmp_gt_u64_e32 */, AMDGPU::V_CMP_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13800 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13813 /* v_cmp_le_f16_e32 */, AMDGPU::V_CMP_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13830 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13830 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13843 /* v_cmp_le_f32_e32 */, AMDGPU::V_CMP_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13843 /* v_cmp_le_f32_e32 */, AMDGPU::V_CMP_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13860 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13860 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13873 /* v_cmp_le_f64_e32 */, AMDGPU::V_CMP_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13873 /* v_cmp_le_f64_e32 */, AMDGPU::V_CMP_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13890 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13903 /* v_cmp_le_i16_e32 */, AMDGPU::V_CMP_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13920 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13920 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13933 /* v_cmp_le_i32_e32 */, AMDGPU::V_CMP_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13933 /* v_cmp_le_i32_e32 */, AMDGPU::V_CMP_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13950 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13950 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13963 /* v_cmp_le_i64_e32 */, AMDGPU::V_CMP_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13963 /* v_cmp_le_i64_e32 */, AMDGPU::V_CMP_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13980 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13993 /* v_cmp_le_u16_e32 */, AMDGPU::V_CMP_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14010 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14010 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14023 /* v_cmp_le_u32_e32 */, AMDGPU::V_CMP_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14023 /* v_cmp_le_u32_e32 */, AMDGPU::V_CMP_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14040 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14040 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14053 /* v_cmp_le_u64_e32 */, AMDGPU::V_CMP_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14053 /* v_cmp_le_u64_e32 */, AMDGPU::V_CMP_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14070 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14083 /* v_cmp_lg_f16_e32 */, AMDGPU::V_CMP_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14100 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14100 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14113 /* v_cmp_lg_f32_e32 */, AMDGPU::V_CMP_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14113 /* v_cmp_lg_f32_e32 */, AMDGPU::V_CMP_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14130 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14130 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14143 /* v_cmp_lg_f64_e32 */, AMDGPU::V_CMP_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14143 /* v_cmp_lg_f64_e32 */, AMDGPU::V_CMP_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14160 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14173 /* v_cmp_lt_f16_e32 */, AMDGPU::V_CMP_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14190 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14190 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14203 /* v_cmp_lt_f32_e32 */, AMDGPU::V_CMP_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14203 /* v_cmp_lt_f32_e32 */, AMDGPU::V_CMP_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14220 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14220 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14233 /* v_cmp_lt_f64_e32 */, AMDGPU::V_CMP_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14233 /* v_cmp_lt_f64_e32 */, AMDGPU::V_CMP_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14250 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14263 /* v_cmp_lt_i16_e32 */, AMDGPU::V_CMP_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14280 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14280 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14293 /* v_cmp_lt_i32_e32 */, AMDGPU::V_CMP_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14293 /* v_cmp_lt_i32_e32 */, AMDGPU::V_CMP_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14310 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14310 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14323 /* v_cmp_lt_i64_e32 */, AMDGPU::V_CMP_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14323 /* v_cmp_lt_i64_e32 */, AMDGPU::V_CMP_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14340 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14353 /* v_cmp_lt_u16_e32 */, AMDGPU::V_CMP_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14370 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14370 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14383 /* v_cmp_lt_u32_e32 */, AMDGPU::V_CMP_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14383 /* v_cmp_lt_u32_e32 */, AMDGPU::V_CMP_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14400 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14400 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14413 /* v_cmp_lt_u64_e32 */, AMDGPU::V_CMP_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14413 /* v_cmp_lt_u64_e32 */, AMDGPU::V_CMP_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14430 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14443 /* v_cmp_ne_i16_e32 */, AMDGPU::V_CMP_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14460 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14460 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14473 /* v_cmp_ne_i32_e32 */, AMDGPU::V_CMP_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14473 /* v_cmp_ne_i32_e32 */, AMDGPU::V_CMP_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14490 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14490 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14503 /* v_cmp_ne_i64_e32 */, AMDGPU::V_CMP_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14503 /* v_cmp_ne_i64_e32 */, AMDGPU::V_CMP_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14520 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14533 /* v_cmp_ne_u16_e32 */, AMDGPU::V_CMP_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14550 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14550 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14563 /* v_cmp_ne_u32_e32 */, AMDGPU::V_CMP_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14563 /* v_cmp_ne_u32_e32 */, AMDGPU::V_CMP_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14580 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14580 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14593 /* v_cmp_ne_u64_e32 */, AMDGPU::V_CMP_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14593 /* v_cmp_ne_u64_e32 */, AMDGPU::V_CMP_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14610 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14624 /* v_cmp_neq_f16_e32 */, AMDGPU::V_CMP_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14642 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14642 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14656 /* v_cmp_neq_f32_e32 */, AMDGPU::V_CMP_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14656 /* v_cmp_neq_f32_e32 */, AMDGPU::V_CMP_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14674 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14674 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14688 /* v_cmp_neq_f64_e32 */, AMDGPU::V_CMP_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14688 /* v_cmp_neq_f64_e32 */, AMDGPU::V_CMP_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14706 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14720 /* v_cmp_nge_f16_e32 */, AMDGPU::V_CMP_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14738 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14738 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14752 /* v_cmp_nge_f32_e32 */, AMDGPU::V_CMP_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14752 /* v_cmp_nge_f32_e32 */, AMDGPU::V_CMP_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14770 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14770 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14784 /* v_cmp_nge_f64_e32 */, AMDGPU::V_CMP_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14784 /* v_cmp_nge_f64_e32 */, AMDGPU::V_CMP_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14802 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14816 /* v_cmp_ngt_f16_e32 */, AMDGPU::V_CMP_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14834 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14834 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14848 /* v_cmp_ngt_f32_e32 */, AMDGPU::V_CMP_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14848 /* v_cmp_ngt_f32_e32 */, AMDGPU::V_CMP_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14866 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14866 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14880 /* v_cmp_ngt_f64_e32 */, AMDGPU::V_CMP_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14880 /* v_cmp_ngt_f64_e32 */, AMDGPU::V_CMP_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14898 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14912 /* v_cmp_nle_f16_e32 */, AMDGPU::V_CMP_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14930 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14930 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14944 /* v_cmp_nle_f32_e32 */, AMDGPU::V_CMP_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14944 /* v_cmp_nle_f32_e32 */, AMDGPU::V_CMP_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14962 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14962 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14976 /* v_cmp_nle_f64_e32 */, AMDGPU::V_CMP_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14976 /* v_cmp_nle_f64_e32 */, AMDGPU::V_CMP_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14994 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15008 /* v_cmp_nlg_f16_e32 */, AMDGPU::V_CMP_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15026 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15026 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15040 /* v_cmp_nlg_f32_e32 */, AMDGPU::V_CMP_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15040 /* v_cmp_nlg_f32_e32 */, AMDGPU::V_CMP_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15058 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15058 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15072 /* v_cmp_nlg_f64_e32 */, AMDGPU::V_CMP_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15072 /* v_cmp_nlg_f64_e32 */, AMDGPU::V_CMP_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15090 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15104 /* v_cmp_nlt_f16_e32 */, AMDGPU::V_CMP_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15122 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15122 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15136 /* v_cmp_nlt_f32_e32 */, AMDGPU::V_CMP_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15136 /* v_cmp_nlt_f32_e32 */, AMDGPU::V_CMP_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15154 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15154 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15168 /* v_cmp_nlt_f64_e32 */, AMDGPU::V_CMP_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15168 /* v_cmp_nlt_f64_e32 */, AMDGPU::V_CMP_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15186 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15198 /* v_cmp_o_f16_e32 */, AMDGPU::V_CMP_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15214 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15214 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15226 /* v_cmp_o_f32_e32 */, AMDGPU::V_CMP_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15226 /* v_cmp_o_f32_e32 */, AMDGPU::V_CMP_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15242 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15242 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15254 /* v_cmp_o_f64_e32 */, AMDGPU::V_CMP_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15254 /* v_cmp_o_f64_e32 */, AMDGPU::V_CMP_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15270 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15282 /* v_cmp_t_i16_e32 */, AMDGPU::V_CMP_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15298 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15298 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15310 /* v_cmp_t_i32_e32 */, AMDGPU::V_CMP_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15310 /* v_cmp_t_i32_e32 */, AMDGPU::V_CMP_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15326 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15326 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15338 /* v_cmp_t_i64_e32 */, AMDGPU::V_CMP_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15338 /* v_cmp_t_i64_e32 */, AMDGPU::V_CMP_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15354 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15366 /* v_cmp_t_u16_e32 */, AMDGPU::V_CMP_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15382 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15382 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15394 /* v_cmp_t_u32_e32 */, AMDGPU::V_CMP_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15394 /* v_cmp_t_u32_e32 */, AMDGPU::V_CMP_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15410 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15410 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15422 /* v_cmp_t_u64_e32 */, AMDGPU::V_CMP_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15422 /* v_cmp_t_u64_e32 */, AMDGPU::V_CMP_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15438 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15452 /* v_cmp_tru_f16_e32 */, AMDGPU::V_CMP_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15470 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15470 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15484 /* v_cmp_tru_f32_e32 */, AMDGPU::V_CMP_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15484 /* v_cmp_tru_f32_e32 */, AMDGPU::V_CMP_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15502 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15502 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15516 /* v_cmp_tru_f64_e32 */, AMDGPU::V_CMP_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15516 /* v_cmp_tru_f64_e32 */, AMDGPU::V_CMP_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15534 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15546 /* v_cmp_u_f16_e32 */, AMDGPU::V_CMP_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15562 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15562 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15574 /* v_cmp_u_f32_e32 */, AMDGPU::V_CMP_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15574 /* v_cmp_u_f32_e32 */, AMDGPU::V_CMP_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15590 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15590 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15602 /* v_cmp_u_f64_e32 */, AMDGPU::V_CMP_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15602 /* v_cmp_u_f64_e32 */, AMDGPU::V_CMP_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15618 /* v_cmps_eq_f32 */, AMDGPU::V_CMPS_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15632 /* v_cmps_eq_f32_e32 */, AMDGPU::V_CMPS_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15650 /* v_cmps_eq_f64 */, AMDGPU::V_CMPS_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15664 /* v_cmps_eq_f64_e32 */, AMDGPU::V_CMPS_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15682 /* v_cmps_f_f32 */, AMDGPU::V_CMPS_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15695 /* v_cmps_f_f32_e32 */, AMDGPU::V_CMPS_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15712 /* v_cmps_f_f64 */, AMDGPU::V_CMPS_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15725 /* v_cmps_f_f64_e32 */, AMDGPU::V_CMPS_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15742 /* v_cmps_ge_f32 */, AMDGPU::V_CMPS_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15756 /* v_cmps_ge_f32_e32 */, AMDGPU::V_CMPS_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15774 /* v_cmps_ge_f64 */, AMDGPU::V_CMPS_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15788 /* v_cmps_ge_f64_e32 */, AMDGPU::V_CMPS_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15806 /* v_cmps_gt_f32 */, AMDGPU::V_CMPS_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15820 /* v_cmps_gt_f32_e32 */, AMDGPU::V_CMPS_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15838 /* v_cmps_gt_f64 */, AMDGPU::V_CMPS_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15852 /* v_cmps_gt_f64_e32 */, AMDGPU::V_CMPS_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15870 /* v_cmps_le_f32 */, AMDGPU::V_CMPS_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15884 /* v_cmps_le_f32_e32 */, AMDGPU::V_CMPS_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15902 /* v_cmps_le_f64 */, AMDGPU::V_CMPS_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15916 /* v_cmps_le_f64_e32 */, AMDGPU::V_CMPS_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15934 /* v_cmps_lg_f32 */, AMDGPU::V_CMPS_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15948 /* v_cmps_lg_f32_e32 */, AMDGPU::V_CMPS_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15966 /* v_cmps_lg_f64 */, AMDGPU::V_CMPS_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15980 /* v_cmps_lg_f64_e32 */, AMDGPU::V_CMPS_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15998 /* v_cmps_lt_f32 */, AMDGPU::V_CMPS_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16012 /* v_cmps_lt_f32_e32 */, AMDGPU::V_CMPS_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16030 /* v_cmps_lt_f64 */, AMDGPU::V_CMPS_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16044 /* v_cmps_lt_f64_e32 */, AMDGPU::V_CMPS_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16062 /* v_cmps_neq_f32 */, AMDGPU::V_CMPS_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16077 /* v_cmps_neq_f32_e32 */, AMDGPU::V_CMPS_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16096 /* v_cmps_neq_f64 */, AMDGPU::V_CMPS_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16111 /* v_cmps_neq_f64_e32 */, AMDGPU::V_CMPS_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16130 /* v_cmps_nge_f32 */, AMDGPU::V_CMPS_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16145 /* v_cmps_nge_f32_e32 */, AMDGPU::V_CMPS_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16164 /* v_cmps_nge_f64 */, AMDGPU::V_CMPS_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16179 /* v_cmps_nge_f64_e32 */, AMDGPU::V_CMPS_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16198 /* v_cmps_ngt_f32 */, AMDGPU::V_CMPS_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16213 /* v_cmps_ngt_f32_e32 */, AMDGPU::V_CMPS_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16232 /* v_cmps_ngt_f64 */, AMDGPU::V_CMPS_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16247 /* v_cmps_ngt_f64_e32 */, AMDGPU::V_CMPS_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16266 /* v_cmps_nle_f32 */, AMDGPU::V_CMPS_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16281 /* v_cmps_nle_f32_e32 */, AMDGPU::V_CMPS_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16300 /* v_cmps_nle_f64 */, AMDGPU::V_CMPS_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16315 /* v_cmps_nle_f64_e32 */, AMDGPU::V_CMPS_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16334 /* v_cmps_nlg_f32 */, AMDGPU::V_CMPS_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16349 /* v_cmps_nlg_f32_e32 */, AMDGPU::V_CMPS_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16368 /* v_cmps_nlg_f64 */, AMDGPU::V_CMPS_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16383 /* v_cmps_nlg_f64_e32 */, AMDGPU::V_CMPS_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16402 /* v_cmps_nlt_f32 */, AMDGPU::V_CMPS_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16417 /* v_cmps_nlt_f32_e32 */, AMDGPU::V_CMPS_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16436 /* v_cmps_nlt_f64 */, AMDGPU::V_CMPS_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16451 /* v_cmps_nlt_f64_e32 */, AMDGPU::V_CMPS_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16470 /* v_cmps_o_f32 */, AMDGPU::V_CMPS_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16483 /* v_cmps_o_f32_e32 */, AMDGPU::V_CMPS_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16500 /* v_cmps_o_f64 */, AMDGPU::V_CMPS_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16513 /* v_cmps_o_f64_e32 */, AMDGPU::V_CMPS_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16530 /* v_cmps_tru_f32 */, AMDGPU::V_CMPS_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16545 /* v_cmps_tru_f32_e32 */, AMDGPU::V_CMPS_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16564 /* v_cmps_tru_f64 */, AMDGPU::V_CMPS_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16579 /* v_cmps_tru_f64_e32 */, AMDGPU::V_CMPS_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16598 /* v_cmps_u_f32 */, AMDGPU::V_CMPS_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16611 /* v_cmps_u_f32_e32 */, AMDGPU::V_CMPS_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16628 /* v_cmps_u_f64 */, AMDGPU::V_CMPS_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16641 /* v_cmps_u_f64_e32 */, AMDGPU::V_CMPS_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16658 /* v_cmpsx_eq_f32 */, AMDGPU::V_CMPSX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16673 /* v_cmpsx_eq_f32_e32 */, AMDGPU::V_CMPSX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16692 /* v_cmpsx_eq_f64 */, AMDGPU::V_CMPSX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16707 /* v_cmpsx_eq_f64_e32 */, AMDGPU::V_CMPSX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16726 /* v_cmpsx_f_f32 */, AMDGPU::V_CMPSX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16740 /* v_cmpsx_f_f32_e32 */, AMDGPU::V_CMPSX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16758 /* v_cmpsx_f_f64 */, AMDGPU::V_CMPSX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16772 /* v_cmpsx_f_f64_e32 */, AMDGPU::V_CMPSX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16790 /* v_cmpsx_ge_f32 */, AMDGPU::V_CMPSX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16805 /* v_cmpsx_ge_f32_e32 */, AMDGPU::V_CMPSX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16824 /* v_cmpsx_ge_f64 */, AMDGPU::V_CMPSX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16839 /* v_cmpsx_ge_f64_e32 */, AMDGPU::V_CMPSX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16858 /* v_cmpsx_gt_f32 */, AMDGPU::V_CMPSX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16873 /* v_cmpsx_gt_f32_e32 */, AMDGPU::V_CMPSX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16892 /* v_cmpsx_gt_f64 */, AMDGPU::V_CMPSX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16907 /* v_cmpsx_gt_f64_e32 */, AMDGPU::V_CMPSX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16926 /* v_cmpsx_le_f32 */, AMDGPU::V_CMPSX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16941 /* v_cmpsx_le_f32_e32 */, AMDGPU::V_CMPSX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16960 /* v_cmpsx_le_f64 */, AMDGPU::V_CMPSX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16975 /* v_cmpsx_le_f64_e32 */, AMDGPU::V_CMPSX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16994 /* v_cmpsx_lg_f32 */, AMDGPU::V_CMPSX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17009 /* v_cmpsx_lg_f32_e32 */, AMDGPU::V_CMPSX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17028 /* v_cmpsx_lg_f64 */, AMDGPU::V_CMPSX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17043 /* v_cmpsx_lg_f64_e32 */, AMDGPU::V_CMPSX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17062 /* v_cmpsx_lt_f32 */, AMDGPU::V_CMPSX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17077 /* v_cmpsx_lt_f32_e32 */, AMDGPU::V_CMPSX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17096 /* v_cmpsx_lt_f64 */, AMDGPU::V_CMPSX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17111 /* v_cmpsx_lt_f64_e32 */, AMDGPU::V_CMPSX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17130 /* v_cmpsx_neq_f32 */, AMDGPU::V_CMPSX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17146 /* v_cmpsx_neq_f32_e32 */, AMDGPU::V_CMPSX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17166 /* v_cmpsx_neq_f64 */, AMDGPU::V_CMPSX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17182 /* v_cmpsx_neq_f64_e32 */, AMDGPU::V_CMPSX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17202 /* v_cmpsx_nge_f32 */, AMDGPU::V_CMPSX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17218 /* v_cmpsx_nge_f32_e32 */, AMDGPU::V_CMPSX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17238 /* v_cmpsx_nge_f64 */, AMDGPU::V_CMPSX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17254 /* v_cmpsx_nge_f64_e32 */, AMDGPU::V_CMPSX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17274 /* v_cmpsx_ngt_f32 */, AMDGPU::V_CMPSX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17290 /* v_cmpsx_ngt_f32_e32 */, AMDGPU::V_CMPSX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17310 /* v_cmpsx_ngt_f64 */, AMDGPU::V_CMPSX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17326 /* v_cmpsx_ngt_f64_e32 */, AMDGPU::V_CMPSX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17346 /* v_cmpsx_nle_f32 */, AMDGPU::V_CMPSX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17362 /* v_cmpsx_nle_f32_e32 */, AMDGPU::V_CMPSX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17382 /* v_cmpsx_nle_f64 */, AMDGPU::V_CMPSX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17398 /* v_cmpsx_nle_f64_e32 */, AMDGPU::V_CMPSX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17418 /* v_cmpsx_nlg_f32 */, AMDGPU::V_CMPSX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17434 /* v_cmpsx_nlg_f32_e32 */, AMDGPU::V_CMPSX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17454 /* v_cmpsx_nlg_f64 */, AMDGPU::V_CMPSX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17470 /* v_cmpsx_nlg_f64_e32 */, AMDGPU::V_CMPSX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17490 /* v_cmpsx_nlt_f32 */, AMDGPU::V_CMPSX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17506 /* v_cmpsx_nlt_f32_e32 */, AMDGPU::V_CMPSX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17526 /* v_cmpsx_nlt_f64 */, AMDGPU::V_CMPSX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17542 /* v_cmpsx_nlt_f64_e32 */, AMDGPU::V_CMPSX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17562 /* v_cmpsx_o_f32 */, AMDGPU::V_CMPSX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17576 /* v_cmpsx_o_f32_e32 */, AMDGPU::V_CMPSX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17594 /* v_cmpsx_o_f64 */, AMDGPU::V_CMPSX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17608 /* v_cmpsx_o_f64_e32 */, AMDGPU::V_CMPSX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17626 /* v_cmpsx_tru_f32 */, AMDGPU::V_CMPSX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17642 /* v_cmpsx_tru_f32_e32 */, AMDGPU::V_CMPSX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17662 /* v_cmpsx_tru_f64 */, AMDGPU::V_CMPSX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17678 /* v_cmpsx_tru_f64_e32 */, AMDGPU::V_CMPSX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17698 /* v_cmpsx_u_f32 */, AMDGPU::V_CMPSX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17712 /* v_cmpsx_u_f32_e32 */, AMDGPU::V_CMPSX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17730 /* v_cmpsx_u_f64 */, AMDGPU::V_CMPSX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17744 /* v_cmpsx_u_f64_e32 */, AMDGPU::V_CMPSX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17762 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 17779 /* v_cmpx_class_f16_e32 */, AMDGPU::V_CMPX_CLASS_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 17800 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17800 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17817 /* v_cmpx_class_f32_e32 */, AMDGPU::V_CMPX_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17817 /* v_cmpx_class_f32_e32 */, AMDGPU::V_CMPX_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17838 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 17838 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 17855 /* v_cmpx_class_f64_e32 */, AMDGPU::V_CMPX_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 17855 /* v_cmpx_class_f64_e32 */, AMDGPU::V_CMPX_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 17876 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 17890 /* v_cmpx_eq_f16_e32 */, AMDGPU::V_CMPX_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 17908 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17908 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17922 /* v_cmpx_eq_f32_e32 */, AMDGPU::V_CMPX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17922 /* v_cmpx_eq_f32_e32 */, AMDGPU::V_CMPX_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17940 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17940 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17954 /* v_cmpx_eq_f64_e32 */, AMDGPU::V_CMPX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17954 /* v_cmpx_eq_f64_e32 */, AMDGPU::V_CMPX_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 17972 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 17986 /* v_cmpx_eq_i16_e32 */, AMDGPU::V_CMPX_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18004 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18004 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18018 /* v_cmpx_eq_i32_e32 */, AMDGPU::V_CMPX_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18018 /* v_cmpx_eq_i32_e32 */, AMDGPU::V_CMPX_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18036 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18036 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18050 /* v_cmpx_eq_i64_e32 */, AMDGPU::V_CMPX_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18050 /* v_cmpx_eq_i64_e32 */, AMDGPU::V_CMPX_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18068 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18082 /* v_cmpx_eq_u16_e32 */, AMDGPU::V_CMPX_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18100 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18100 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18114 /* v_cmpx_eq_u32_e32 */, AMDGPU::V_CMPX_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18114 /* v_cmpx_eq_u32_e32 */, AMDGPU::V_CMPX_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18132 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18132 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18146 /* v_cmpx_eq_u64_e32 */, AMDGPU::V_CMPX_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18146 /* v_cmpx_eq_u64_e32 */, AMDGPU::V_CMPX_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18164 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18177 /* v_cmpx_f_f16_e32 */, AMDGPU::V_CMPX_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18194 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18194 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18207 /* v_cmpx_f_f32_e32 */, AMDGPU::V_CMPX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18207 /* v_cmpx_f_f32_e32 */, AMDGPU::V_CMPX_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18224 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18224 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18237 /* v_cmpx_f_f64_e32 */, AMDGPU::V_CMPX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18237 /* v_cmpx_f_f64_e32 */, AMDGPU::V_CMPX_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18254 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18267 /* v_cmpx_f_i16_e32 */, AMDGPU::V_CMPX_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18284 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18284 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18297 /* v_cmpx_f_i32_e32 */, AMDGPU::V_CMPX_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18297 /* v_cmpx_f_i32_e32 */, AMDGPU::V_CMPX_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18314 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18314 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18327 /* v_cmpx_f_i64_e32 */, AMDGPU::V_CMPX_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18327 /* v_cmpx_f_i64_e32 */, AMDGPU::V_CMPX_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18344 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18357 /* v_cmpx_f_u16_e32 */, AMDGPU::V_CMPX_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18374 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18374 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18387 /* v_cmpx_f_u32_e32 */, AMDGPU::V_CMPX_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18387 /* v_cmpx_f_u32_e32 */, AMDGPU::V_CMPX_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18404 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18404 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18417 /* v_cmpx_f_u64_e32 */, AMDGPU::V_CMPX_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18417 /* v_cmpx_f_u64_e32 */, AMDGPU::V_CMPX_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18434 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18448 /* v_cmpx_ge_f16_e32 */, AMDGPU::V_CMPX_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18466 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18466 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18480 /* v_cmpx_ge_f32_e32 */, AMDGPU::V_CMPX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18480 /* v_cmpx_ge_f32_e32 */, AMDGPU::V_CMPX_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18498 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18498 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18512 /* v_cmpx_ge_f64_e32 */, AMDGPU::V_CMPX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18512 /* v_cmpx_ge_f64_e32 */, AMDGPU::V_CMPX_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18530 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18544 /* v_cmpx_ge_i16_e32 */, AMDGPU::V_CMPX_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18562 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18562 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18576 /* v_cmpx_ge_i32_e32 */, AMDGPU::V_CMPX_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18576 /* v_cmpx_ge_i32_e32 */, AMDGPU::V_CMPX_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18594 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18594 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18608 /* v_cmpx_ge_i64_e32 */, AMDGPU::V_CMPX_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18608 /* v_cmpx_ge_i64_e32 */, AMDGPU::V_CMPX_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18626 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18640 /* v_cmpx_ge_u16_e32 */, AMDGPU::V_CMPX_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18658 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18658 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18672 /* v_cmpx_ge_u32_e32 */, AMDGPU::V_CMPX_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18672 /* v_cmpx_ge_u32_e32 */, AMDGPU::V_CMPX_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18690 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18690 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18704 /* v_cmpx_ge_u64_e32 */, AMDGPU::V_CMPX_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18704 /* v_cmpx_ge_u64_e32 */, AMDGPU::V_CMPX_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18722 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18736 /* v_cmpx_gt_f16_e32 */, AMDGPU::V_CMPX_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18754 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18754 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18768 /* v_cmpx_gt_f32_e32 */, AMDGPU::V_CMPX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18768 /* v_cmpx_gt_f32_e32 */, AMDGPU::V_CMPX_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18786 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18786 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18800 /* v_cmpx_gt_f64_e32 */, AMDGPU::V_CMPX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18800 /* v_cmpx_gt_f64_e32 */, AMDGPU::V_CMPX_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 18818 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18832 /* v_cmpx_gt_i16_e32 */, AMDGPU::V_CMPX_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18850 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18850 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18864 /* v_cmpx_gt_i32_e32 */, AMDGPU::V_CMPX_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18864 /* v_cmpx_gt_i32_e32 */, AMDGPU::V_CMPX_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18882 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18882 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18896 /* v_cmpx_gt_i64_e32 */, AMDGPU::V_CMPX_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18896 /* v_cmpx_gt_i64_e32 */, AMDGPU::V_CMPX_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18914 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18928 /* v_cmpx_gt_u16_e32 */, AMDGPU::V_CMPX_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 18946 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18946 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18960 /* v_cmpx_gt_u32_e32 */, AMDGPU::V_CMPX_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18960 /* v_cmpx_gt_u32_e32 */, AMDGPU::V_CMPX_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18978 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18978 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18992 /* v_cmpx_gt_u64_e32 */, AMDGPU::V_CMPX_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 18992 /* v_cmpx_gt_u64_e32 */, AMDGPU::V_CMPX_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19010 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19024 /* v_cmpx_le_f16_e32 */, AMDGPU::V_CMPX_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19042 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19042 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19056 /* v_cmpx_le_f32_e32 */, AMDGPU::V_CMPX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19056 /* v_cmpx_le_f32_e32 */, AMDGPU::V_CMPX_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19074 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19074 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19088 /* v_cmpx_le_f64_e32 */, AMDGPU::V_CMPX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19088 /* v_cmpx_le_f64_e32 */, AMDGPU::V_CMPX_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19106 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19120 /* v_cmpx_le_i16_e32 */, AMDGPU::V_CMPX_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19138 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19138 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19152 /* v_cmpx_le_i32_e32 */, AMDGPU::V_CMPX_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19152 /* v_cmpx_le_i32_e32 */, AMDGPU::V_CMPX_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19170 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19170 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19184 /* v_cmpx_le_i64_e32 */, AMDGPU::V_CMPX_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19184 /* v_cmpx_le_i64_e32 */, AMDGPU::V_CMPX_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19202 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19216 /* v_cmpx_le_u16_e32 */, AMDGPU::V_CMPX_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19234 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19234 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19248 /* v_cmpx_le_u32_e32 */, AMDGPU::V_CMPX_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19248 /* v_cmpx_le_u32_e32 */, AMDGPU::V_CMPX_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19266 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19266 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19280 /* v_cmpx_le_u64_e32 */, AMDGPU::V_CMPX_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19280 /* v_cmpx_le_u64_e32 */, AMDGPU::V_CMPX_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19298 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19312 /* v_cmpx_lg_f16_e32 */, AMDGPU::V_CMPX_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19330 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19330 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19344 /* v_cmpx_lg_f32_e32 */, AMDGPU::V_CMPX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19344 /* v_cmpx_lg_f32_e32 */, AMDGPU::V_CMPX_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19362 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19362 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19376 /* v_cmpx_lg_f64_e32 */, AMDGPU::V_CMPX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19376 /* v_cmpx_lg_f64_e32 */, AMDGPU::V_CMPX_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19394 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19408 /* v_cmpx_lt_f16_e32 */, AMDGPU::V_CMPX_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19426 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19426 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19440 /* v_cmpx_lt_f32_e32 */, AMDGPU::V_CMPX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19440 /* v_cmpx_lt_f32_e32 */, AMDGPU::V_CMPX_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19458 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19458 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19472 /* v_cmpx_lt_f64_e32 */, AMDGPU::V_CMPX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19472 /* v_cmpx_lt_f64_e32 */, AMDGPU::V_CMPX_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19490 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19504 /* v_cmpx_lt_i16_e32 */, AMDGPU::V_CMPX_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19522 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19522 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19536 /* v_cmpx_lt_i32_e32 */, AMDGPU::V_CMPX_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19536 /* v_cmpx_lt_i32_e32 */, AMDGPU::V_CMPX_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19554 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19554 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19568 /* v_cmpx_lt_i64_e32 */, AMDGPU::V_CMPX_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19568 /* v_cmpx_lt_i64_e32 */, AMDGPU::V_CMPX_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19586 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19600 /* v_cmpx_lt_u16_e32 */, AMDGPU::V_CMPX_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19618 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19618 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19632 /* v_cmpx_lt_u32_e32 */, AMDGPU::V_CMPX_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19632 /* v_cmpx_lt_u32_e32 */, AMDGPU::V_CMPX_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19650 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19650 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19664 /* v_cmpx_lt_u64_e32 */, AMDGPU::V_CMPX_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19664 /* v_cmpx_lt_u64_e32 */, AMDGPU::V_CMPX_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19682 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19696 /* v_cmpx_ne_i16_e32 */, AMDGPU::V_CMPX_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19714 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19714 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19728 /* v_cmpx_ne_i32_e32 */, AMDGPU::V_CMPX_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19728 /* v_cmpx_ne_i32_e32 */, AMDGPU::V_CMPX_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19746 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19746 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19760 /* v_cmpx_ne_i64_e32 */, AMDGPU::V_CMPX_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19760 /* v_cmpx_ne_i64_e32 */, AMDGPU::V_CMPX_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19778 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19792 /* v_cmpx_ne_u16_e32 */, AMDGPU::V_CMPX_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 19810 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19810 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19824 /* v_cmpx_ne_u32_e32 */, AMDGPU::V_CMPX_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19824 /* v_cmpx_ne_u32_e32 */, AMDGPU::V_CMPX_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19842 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19842 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19856 /* v_cmpx_ne_u64_e32 */, AMDGPU::V_CMPX_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19856 /* v_cmpx_ne_u64_e32 */, AMDGPU::V_CMPX_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 19874 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19889 /* v_cmpx_neq_f16_e32 */, AMDGPU::V_CMPX_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19908 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19908 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19923 /* v_cmpx_neq_f32_e32 */, AMDGPU::V_CMPX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19923 /* v_cmpx_neq_f32_e32 */, AMDGPU::V_CMPX_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19942 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19942 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19957 /* v_cmpx_neq_f64_e32 */, AMDGPU::V_CMPX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19957 /* v_cmpx_neq_f64_e32 */, AMDGPU::V_CMPX_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 19976 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19991 /* v_cmpx_nge_f16_e32 */, AMDGPU::V_CMPX_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20010 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20010 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20025 /* v_cmpx_nge_f32_e32 */, AMDGPU::V_CMPX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20025 /* v_cmpx_nge_f32_e32 */, AMDGPU::V_CMPX_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20044 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20044 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20059 /* v_cmpx_nge_f64_e32 */, AMDGPU::V_CMPX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20059 /* v_cmpx_nge_f64_e32 */, AMDGPU::V_CMPX_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20078 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20093 /* v_cmpx_ngt_f16_e32 */, AMDGPU::V_CMPX_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20112 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20112 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20127 /* v_cmpx_ngt_f32_e32 */, AMDGPU::V_CMPX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20127 /* v_cmpx_ngt_f32_e32 */, AMDGPU::V_CMPX_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20146 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20146 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20161 /* v_cmpx_ngt_f64_e32 */, AMDGPU::V_CMPX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20161 /* v_cmpx_ngt_f64_e32 */, AMDGPU::V_CMPX_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20180 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20195 /* v_cmpx_nle_f16_e32 */, AMDGPU::V_CMPX_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20214 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20214 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20229 /* v_cmpx_nle_f32_e32 */, AMDGPU::V_CMPX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20229 /* v_cmpx_nle_f32_e32 */, AMDGPU::V_CMPX_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20248 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20248 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20263 /* v_cmpx_nle_f64_e32 */, AMDGPU::V_CMPX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20263 /* v_cmpx_nle_f64_e32 */, AMDGPU::V_CMPX_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20282 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20297 /* v_cmpx_nlg_f16_e32 */, AMDGPU::V_CMPX_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20316 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20316 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20331 /* v_cmpx_nlg_f32_e32 */, AMDGPU::V_CMPX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20331 /* v_cmpx_nlg_f32_e32 */, AMDGPU::V_CMPX_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20350 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20350 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20365 /* v_cmpx_nlg_f64_e32 */, AMDGPU::V_CMPX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20365 /* v_cmpx_nlg_f64_e32 */, AMDGPU::V_CMPX_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20384 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20399 /* v_cmpx_nlt_f16_e32 */, AMDGPU::V_CMPX_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20418 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20418 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20433 /* v_cmpx_nlt_f32_e32 */, AMDGPU::V_CMPX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20433 /* v_cmpx_nlt_f32_e32 */, AMDGPU::V_CMPX_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20452 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20452 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20467 /* v_cmpx_nlt_f64_e32 */, AMDGPU::V_CMPX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20467 /* v_cmpx_nlt_f64_e32 */, AMDGPU::V_CMPX_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20486 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20499 /* v_cmpx_o_f16_e32 */, AMDGPU::V_CMPX_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20516 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20516 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20529 /* v_cmpx_o_f32_e32 */, AMDGPU::V_CMPX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20529 /* v_cmpx_o_f32_e32 */, AMDGPU::V_CMPX_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20546 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20546 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20559 /* v_cmpx_o_f64_e32 */, AMDGPU::V_CMPX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20559 /* v_cmpx_o_f64_e32 */, AMDGPU::V_CMPX_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20576 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 20589 /* v_cmpx_t_i16_e32 */, AMDGPU::V_CMPX_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 20606 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20606 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20619 /* v_cmpx_t_i32_e32 */, AMDGPU::V_CMPX_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20619 /* v_cmpx_t_i32_e32 */, AMDGPU::V_CMPX_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20636 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20636 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20649 /* v_cmpx_t_i64_e32 */, AMDGPU::V_CMPX_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20649 /* v_cmpx_t_i64_e32 */, AMDGPU::V_CMPX_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20666 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 20679 /* v_cmpx_t_u16_e32 */, AMDGPU::V_CMPX_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 20696 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20696 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20709 /* v_cmpx_t_u32_e32 */, AMDGPU::V_CMPX_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20709 /* v_cmpx_t_u32_e32 */, AMDGPU::V_CMPX_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 20726 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20726 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20739 /* v_cmpx_t_u64_e32 */, AMDGPU::V_CMPX_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20739 /* v_cmpx_t_u64_e32 */, AMDGPU::V_CMPX_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 20756 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20771 /* v_cmpx_tru_f16_e32 */, AMDGPU::V_CMPX_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20790 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20790 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20805 /* v_cmpx_tru_f32_e32 */, AMDGPU::V_CMPX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20805 /* v_cmpx_tru_f32_e32 */, AMDGPU::V_CMPX_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20824 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20824 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20839 /* v_cmpx_tru_f64_e32 */, AMDGPU::V_CMPX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20839 /* v_cmpx_tru_f64_e32 */, AMDGPU::V_CMPX_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20858 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20871 /* v_cmpx_u_f16_e32 */, AMDGPU::V_CMPX_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 20888 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20888 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20901 /* v_cmpx_u_f32_e32 */, AMDGPU::V_CMPX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20901 /* v_cmpx_u_f32_e32 */, AMDGPU::V_CMPX_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 20918 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20918 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20931 /* v_cmpx_u_f64_e32 */, AMDGPU::V_CMPX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20931 /* v_cmpx_u_f64_e32 */, AMDGPU::V_CMPX_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e32_si, Convert__Reg1_0__VCSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e32_vi, Convert__Reg1_0__VCSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 20962 /* v_cos_f16 */, AMDGPU::V_COS_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21048 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_e32_vi, Convert__Reg1_0__VSrcB161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16 }, },
  { 21062 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_e32_vi, Convert__Reg1_0__VSrcB161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16 }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e32_si, Convert__Reg1_0__VSrcF161_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21090 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 21090 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21200 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF32 }, },
  { 21200 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF32 }, },
  { 21214 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 21214 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 21228 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 21228 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21260 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21288 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 21288 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 21302 /* v_cvt_norm_i16_f16 */, AMDGPU::V_CVT_NORM_I16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21321 /* v_cvt_norm_u16_f16 */, AMDGPU::V_CVT_NORM_U16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21357 /* v_cvt_pk_i16_i32 */, AMDGPU::V_CVT_PK_I16_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 21374 /* v_cvt_pk_u16_u32 */, AMDGPU::V_CVT_PK_U16_U32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 21407 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 21449 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 21491 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 21512 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21550 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21578 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 21578 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 21826 /* v_exp_f16 */, AMDGPU::V_EXP_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e32_ci, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 21896 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 21920 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 21920 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 22025 /* v_fmac_f32 */, AMDGPU::V_FMAC_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0_1_1, Feature_HasDLInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22036 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22060 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 22060 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 22072 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22112 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 22112 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 22132 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22166 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 22166 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 22183 /* v_interp_mov_f32 */, AMDGPU::V_INTERP_MOV_F32_si, Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_InterpSlot, MCK_Attr, MCK_AttrChan }, },
  { 22183 /* v_interp_mov_f32 */, AMDGPU::V_INTERP_MOV_F32_vi, Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_InterpSlot, MCK_Attr, MCK_AttrChan }, },
  { 22200 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_16bank_si, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 22200 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_16bank_vi, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 22200 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_si, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 22200 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_vi, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 22268 /* v_interp_p2_f32 */, AMDGPU::V_INTERP_P2_F32_si, Convert__Reg1_0__Tie0_1_1__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 22268 /* v_interp_p2_f32 */, AMDGPU::V_INTERP_P2_F32_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 22307 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 22319 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22353 /* v_log_clamp_f32 */, AMDGPU::V_LOG_CLAMP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22369 /* v_log_f16 */, AMDGPU::V_LOG_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e32_ci, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 22421 /* v_lshl_b32 */, AMDGPU::V_LSHL_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22457 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22499 /* v_lshr_b32 */, AMDGPU::V_LSHR_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22521 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22563 /* v_mac_f16 */, AMDGPU::V_MAC_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2__Tie0_1_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 22573 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0_1_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22573 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0_1_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22583 /* v_mac_legacy_f32 */, AMDGPU::V_MAC_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22838 /* v_madak_f16 */, AMDGPU::V_MADAK_F16_vi, Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP161_3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VGPR_32, MCK_KImmFP16 }, },
  { 22850 /* v_madak_f32 */, AMDGPU::V_MADAK_F32_si, Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VGPR_32, MCK_KImmFP32 }, },
  { 22850 /* v_madak_f32 */, AMDGPU::V_MADAK_F32_vi, Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VGPR_32, MCK_KImmFP32 }, },
  { 22862 /* v_madmk_f16 */, AMDGPU::V_MADMK_F16_vi, Convert__Reg1_0__VCSrcF321_1__KImmFP161_2__Reg1_3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_KImmFP16, MCK_VGPR_32 }, },
  { 22874 /* v_madmk_f32 */, AMDGPU::V_MADMK_F32_si, Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_KImmFP32, MCK_VGPR_32 }, },
  { 22874 /* v_madmk_f32 */, AMDGPU::V_MADMK_F32_vi, Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_KImmFP32, MCK_VGPR_32 }, },
  { 22952 /* v_max_f16 */, AMDGPU::V_MAX_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 22982 /* v_max_i16 */, AMDGPU::V_MAX_I16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23002 /* v_max_legacy_f32 */, AMDGPU::V_MAX_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23019 /* v_max_u16 */, AMDGPU::V_MAX_U16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23039 /* v_mbcnt_hi_u32_b32 */, AMDGPU::V_MBCNT_HI_U32_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23058 /* v_mbcnt_lo_u32_b32 */, AMDGPU::V_MBCNT_LO_U32_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23209 /* v_min_f16 */, AMDGPU::V_MIN_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23239 /* v_min_i16 */, AMDGPU::V_MIN_I16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23259 /* v_min_legacy_f32 */, AMDGPU::V_MIN_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23276 /* v_min_u16 */, AMDGPU::V_MIN_U16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23320 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23320 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23334 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e32_si, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 23334 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e32_vi, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 23348 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23348 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23406 /* v_mul_f16 */, AMDGPU::V_MUL_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 23540 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23593 /* v_nop */, AMDGPU::V_NOP_e32_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 23593 /* v_nop */, AMDGPU::V_NOP_e32_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 23933 /* v_rcp_clamp_f32 */, AMDGPU::V_RCP_CLAMP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 23949 /* v_rcp_clamp_f64 */, AMDGPU::V_RCP_CLAMP_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 23965 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 23985 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 23985 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24011 /* v_rcp_legacy_f32 */, AMDGPU::V_RCP_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24028 /* v_readfirstlane_b32 */, AMDGPU::V_READFIRSTLANE_B32, Convert__Reg1_0__Reg1_1, Feature_isGCN, { MCK_SReg_32, MCK_VGPR_32 }, },
  { 24048 /* v_readlane_b32 */, AMDGPU::V_READLANE_B32_si, Convert__Reg1_0__Reg1_1__SCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_VGPR_32, MCK_SCSrcB32 }, },
  { 24048 /* v_readlane_b32 */, AMDGPU::V_READLANE_B32_vi, Convert__Reg1_0__Reg1_1__SCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_VGPR_32, MCK_SCSrcB32 }, },
  { 24063 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24087 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24087 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24099 /* v_rsq_clamp_f32 */, AMDGPU::V_RSQ_CLAMP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24115 /* v_rsq_clamp_f64 */, AMDGPU::V_RSQ_CLAMP_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24131 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24151 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24151 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24161 /* v_rsq_legacy_f32 */, AMDGPU::V_RSQ_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24219 /* v_sat_pk_u8_i16 */, AMDGPU::V_SAT_PK_U8_I16_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 24235 /* v_screen_partition_4se_b32 */, AMDGPU::V_SCREEN_PARTITION_4SE_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 24262 /* v_sin_f16 */, AMDGPU::V_SIN_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24282 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24304 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24304 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24315 /* v_sub_co_u32 */, AMDGPU::V_SUB_CO_U32_e32_gfx9, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24328 /* v_sub_f16 */, AMDGPU::V_SUB_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 24358 /* v_sub_i32 */, AMDGPU::V_SUB_I32_e32_si, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24368 /* v_sub_u16 */, AMDGPU::V_SUB_U16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_e32_gfx9, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_HasAddNoCarryInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_e32_vi, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24388 /* v_subb_co_u32 */, AMDGPU::V_SUBB_CO_U32_e32_gfx9, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 24402 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e32_si, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 24402 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e32_vi, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 24413 /* v_subbrev_co_u32 */, AMDGPU::V_SUBBREV_CO_U32_e32_gfx9, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 24430 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e32_si, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 24430 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e32_vi, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 24444 /* v_subrev_co_u32 */, AMDGPU::V_SUBREV_CO_U32_e32_gfx9, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24460 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 24486 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_e32_si, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24499 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_e32_vi, Convert__Reg1_0__VSrcB161_1__Reg1_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_e32_gfx9, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_HasAddNoCarryInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_e32_vi, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24525 /* v_swap_b32 */, AMDGPU::V_SWAP_B32_vi, Convert__Reg1_0__Reg1_1__Tie1_2_2__Tie0_1_1, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 24553 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 24577 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24577 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 24589 /* v_writelane_b32 */, AMDGPU::V_WRITELANE_B32_si, Convert__Reg1_0__SSrcB321_1__SCSrcB321_2__Tie0_1_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SSrcB32, MCK_SCSrcB32 }, },
  { 24589 /* v_writelane_b32 */, AMDGPU::V_WRITELANE_B32_vi, Convert__Reg1_0__SCSrcB321_1__SCSrcB321_2__Tie0_1_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SCSrcB32, MCK_SCSrcB32 }, },
  { 24615 /* v_xnor_b32 */, AMDGPU::V_XNOR_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_HasDLInsts|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
};

static const MatchEntry MatchTable1[] = {
  { 12268 /* v_add3_u32 */, AMDGPU::V_ADD3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12279 /* v_add_co_u32 */, AMDGPU::V_ADD_CO_U32_e64_gfx9, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12292 /* v_add_f16 */, AMDGPU::V_ADD_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12312 /* v_add_f64 */, AMDGPU::V_ADD_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12312 /* v_add_f64 */, AMDGPU::V_ADD_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12322 /* v_add_i16 */, AMDGPU::V_ADD_I16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 12332 /* v_add_i32 */, AMDGPU::V_ADD_I32_gfx9_gfx9, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12332 /* v_add_i32 */, AMDGPU::V_ADD_I32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12342 /* v_add_lshl_u32 */, AMDGPU::V_ADD_LSHL_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12357 /* v_add_u16 */, AMDGPU::V_ADD_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_e64_gfx9, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_HasAddNoCarryInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12377 /* v_addc_co_u32 */, AMDGPU::V_ADDC_CO_U32_e64_gfx9, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 12391 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 12391 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 12402 /* v_alignbit_b32 */, AMDGPU::V_ALIGNBIT_B32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12402 /* v_alignbit_b32 */, AMDGPU::V_ALIGNBIT_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12417 /* v_alignbyte_b32 */, AMDGPU::V_ALIGNBYTE_B32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12417 /* v_alignbyte_b32 */, AMDGPU::V_ALIGNBYTE_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12443 /* v_and_or_b32 */, AMDGPU::V_AND_OR_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12456 /* v_ashr_i32 */, AMDGPU::V_ASHR_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12467 /* v_ashr_i64 */, AMDGPU::V_ASHR_I64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32 }, },
  { 12478 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12506 /* v_ashrrev_i64 */, AMDGPU::V_ASHRREV_I64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 12520 /* v_bcnt_u32_b32 */, AMDGPU::V_BCNT_U32_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12520 /* v_bcnt_u32_b32 */, AMDGPU::V_BCNT_U32_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12535 /* v_bfe_i32 */, AMDGPU::V_BFE_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12535 /* v_bfe_i32 */, AMDGPU::V_BFE_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12545 /* v_bfe_u32 */, AMDGPU::V_BFE_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12545 /* v_bfe_u32 */, AMDGPU::V_BFE_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12555 /* v_bfi_b32 */, AMDGPU::V_BFI_B32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12555 /* v_bfi_b32 */, AMDGPU::V_BFI_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12565 /* v_bfm_b32 */, AMDGPU::V_BFM_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12565 /* v_bfm_b32 */, AMDGPU::V_BFM_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 12587 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12609 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e64_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12609 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12620 /* v_clrexcp */, AMDGPU::V_CLREXCP_e64_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 12620 /* v_clrexcp */, AMDGPU::V_CLREXCP_e64_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 12630 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_VCSrcB32 }, },
  { 12666 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 12666 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 12702 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 12702 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 12738 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 12768 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 12768 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 12798 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 12798 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 12828 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 12858 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12858 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12888 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 12888 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 12918 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 12948 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12948 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 12978 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 12978 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13008 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 13036 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13036 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13064 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13064 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13092 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13120 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13120 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13148 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13148 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13176 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13204 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13204 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13232 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13232 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13260 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 13290 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13290 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13320 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13320 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13350 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13380 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13380 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13410 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13410 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13440 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13470 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13470 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13500 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13500 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13530 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 13560 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13560 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13590 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13590 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13620 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13650 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13650 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13680 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13680 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13710 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13740 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13740 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13770 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13770 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13800 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 13830 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13830 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 13860 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13860 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 13890 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13920 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13920 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13950 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13950 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13980 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14010 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14010 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14040 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14040 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14070 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 14100 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14100 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14130 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14130 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14160 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 14190 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14190 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14220 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14220 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14250 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14280 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14280 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14310 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14310 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14340 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14370 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14370 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14400 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14400 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14430 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14460 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14460 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14490 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14490 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14520 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14550 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14550 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14580 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14580 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14610 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 14642 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14642 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14674 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14674 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14706 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 14738 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14738 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14770 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14770 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14802 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 14834 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14834 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14866 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14866 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14898 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 14930 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14930 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 14962 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14962 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 14994 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 15026 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15026 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15058 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15058 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15090 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 15122 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15122 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15154 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15154 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15186 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 15214 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15214 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15242 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15242 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15270 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 15298 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15298 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15326 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15326 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15354 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 15382 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15382 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15410 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15410 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15438 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 15470 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15470 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15502 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15502 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15534 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 15562 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15562 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15590 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15590 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15618 /* v_cmps_eq_f32 */, AMDGPU::V_CMPS_EQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15650 /* v_cmps_eq_f64 */, AMDGPU::V_CMPS_EQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15682 /* v_cmps_f_f32 */, AMDGPU::V_CMPS_F_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15712 /* v_cmps_f_f64 */, AMDGPU::V_CMPS_F_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15742 /* v_cmps_ge_f32 */, AMDGPU::V_CMPS_GE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15774 /* v_cmps_ge_f64 */, AMDGPU::V_CMPS_GE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15806 /* v_cmps_gt_f32 */, AMDGPU::V_CMPS_GT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15838 /* v_cmps_gt_f64 */, AMDGPU::V_CMPS_GT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15870 /* v_cmps_le_f32 */, AMDGPU::V_CMPS_LE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15902 /* v_cmps_le_f64 */, AMDGPU::V_CMPS_LE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15934 /* v_cmps_lg_f32 */, AMDGPU::V_CMPS_LG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 15966 /* v_cmps_lg_f64 */, AMDGPU::V_CMPS_LG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 15998 /* v_cmps_lt_f32 */, AMDGPU::V_CMPS_LT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16030 /* v_cmps_lt_f64 */, AMDGPU::V_CMPS_LT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16062 /* v_cmps_neq_f32 */, AMDGPU::V_CMPS_NEQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16096 /* v_cmps_neq_f64 */, AMDGPU::V_CMPS_NEQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16130 /* v_cmps_nge_f32 */, AMDGPU::V_CMPS_NGE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16164 /* v_cmps_nge_f64 */, AMDGPU::V_CMPS_NGE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16198 /* v_cmps_ngt_f32 */, AMDGPU::V_CMPS_NGT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16232 /* v_cmps_ngt_f64 */, AMDGPU::V_CMPS_NGT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16266 /* v_cmps_nle_f32 */, AMDGPU::V_CMPS_NLE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16300 /* v_cmps_nle_f64 */, AMDGPU::V_CMPS_NLE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16334 /* v_cmps_nlg_f32 */, AMDGPU::V_CMPS_NLG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16368 /* v_cmps_nlg_f64 */, AMDGPU::V_CMPS_NLG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16402 /* v_cmps_nlt_f32 */, AMDGPU::V_CMPS_NLT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16436 /* v_cmps_nlt_f64 */, AMDGPU::V_CMPS_NLT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16470 /* v_cmps_o_f32 */, AMDGPU::V_CMPS_O_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16500 /* v_cmps_o_f64 */, AMDGPU::V_CMPS_O_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16530 /* v_cmps_tru_f32 */, AMDGPU::V_CMPS_TRU_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16564 /* v_cmps_tru_f64 */, AMDGPU::V_CMPS_TRU_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16598 /* v_cmps_u_f32 */, AMDGPU::V_CMPS_U_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16628 /* v_cmps_u_f64 */, AMDGPU::V_CMPS_U_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16658 /* v_cmpsx_eq_f32 */, AMDGPU::V_CMPSX_EQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16692 /* v_cmpsx_eq_f64 */, AMDGPU::V_CMPSX_EQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16726 /* v_cmpsx_f_f32 */, AMDGPU::V_CMPSX_F_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16758 /* v_cmpsx_f_f64 */, AMDGPU::V_CMPSX_F_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16790 /* v_cmpsx_ge_f32 */, AMDGPU::V_CMPSX_GE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16824 /* v_cmpsx_ge_f64 */, AMDGPU::V_CMPSX_GE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16858 /* v_cmpsx_gt_f32 */, AMDGPU::V_CMPSX_GT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16892 /* v_cmpsx_gt_f64 */, AMDGPU::V_CMPSX_GT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16926 /* v_cmpsx_le_f32 */, AMDGPU::V_CMPSX_LE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 16960 /* v_cmpsx_le_f64 */, AMDGPU::V_CMPSX_LE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 16994 /* v_cmpsx_lg_f32 */, AMDGPU::V_CMPSX_LG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17028 /* v_cmpsx_lg_f64 */, AMDGPU::V_CMPSX_LG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17062 /* v_cmpsx_lt_f32 */, AMDGPU::V_CMPSX_LT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17096 /* v_cmpsx_lt_f64 */, AMDGPU::V_CMPSX_LT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17130 /* v_cmpsx_neq_f32 */, AMDGPU::V_CMPSX_NEQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17166 /* v_cmpsx_neq_f64 */, AMDGPU::V_CMPSX_NEQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17202 /* v_cmpsx_nge_f32 */, AMDGPU::V_CMPSX_NGE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17238 /* v_cmpsx_nge_f64 */, AMDGPU::V_CMPSX_NGE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17274 /* v_cmpsx_ngt_f32 */, AMDGPU::V_CMPSX_NGT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17310 /* v_cmpsx_ngt_f64 */, AMDGPU::V_CMPSX_NGT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17346 /* v_cmpsx_nle_f32 */, AMDGPU::V_CMPSX_NLE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17382 /* v_cmpsx_nle_f64 */, AMDGPU::V_CMPSX_NLE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17418 /* v_cmpsx_nlg_f32 */, AMDGPU::V_CMPSX_NLG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17454 /* v_cmpsx_nlg_f64 */, AMDGPU::V_CMPSX_NLG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17490 /* v_cmpsx_nlt_f32 */, AMDGPU::V_CMPSX_NLT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17526 /* v_cmpsx_nlt_f64 */, AMDGPU::V_CMPSX_NLT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17562 /* v_cmpsx_o_f32 */, AMDGPU::V_CMPSX_O_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17594 /* v_cmpsx_o_f64 */, AMDGPU::V_CMPSX_O_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17626 /* v_cmpsx_tru_f32 */, AMDGPU::V_CMPSX_TRU_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17662 /* v_cmpsx_tru_f64 */, AMDGPU::V_CMPSX_TRU_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17698 /* v_cmpsx_u_f32 */, AMDGPU::V_CMPSX_U_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17730 /* v_cmpsx_u_f64 */, AMDGPU::V_CMPSX_U_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17762 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_VCSrcB32 }, },
  { 17800 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 17800 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 17838 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 17838 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 17876 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 17908 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17908 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 17940 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17940 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 17972 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18004 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18004 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18036 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18036 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18068 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18100 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18100 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18132 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18132 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18164 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 18194 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 18194 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 18224 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 18224 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 18254 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18284 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18284 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18314 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18314 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18344 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18374 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18374 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18404 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18404 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18434 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 18466 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 18466 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 18498 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 18498 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 18530 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18562 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18562 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18594 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18594 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18626 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18658 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18658 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18690 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18690 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18722 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 18754 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 18754 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 18786 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 18786 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 18818 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18850 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18850 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18882 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18882 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18914 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 18946 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18946 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18978 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 18978 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19010 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 19042 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19042 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19074 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19074 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19106 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 19138 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19138 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19170 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19170 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19202 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 19234 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19234 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19266 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19266 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19298 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 19330 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19330 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19362 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19362 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19394 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 19426 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19426 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19458 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19458 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19490 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 19522 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19522 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19554 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19554 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19586 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 19618 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19618 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19650 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19650 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19682 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 19714 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19714 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19746 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19746 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19778 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 19810 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19810 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19842 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19842 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 19874 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 19908 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19908 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 19942 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19942 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 19976 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20010 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20010 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20044 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20044 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20078 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20112 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20112 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20146 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20146 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20180 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20214 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20214 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20248 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20248 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20282 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20316 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20316 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20350 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20350 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20384 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20418 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20418 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20452 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20452 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20486 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20516 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20516 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20546 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20546 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20576 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 20606 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 20606 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 20636 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 20636 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 20666 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 20696 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 20696 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 20726 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 20726 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 20756 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20790 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20790 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20824 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20824 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20858 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 20888 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20888 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 20918 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20918 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 20962 /* v_cos_f16 */, AMDGPU::V_COS_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 20982 /* v_cubeid_f32 */, AMDGPU::V_CUBEID_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 20982 /* v_cubeid_f32 */, AMDGPU::V_CUBEID_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 20995 /* v_cubema_f32 */, AMDGPU::V_CUBEMA_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 20995 /* v_cubema_f32 */, AMDGPU::V_CUBEMA_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21008 /* v_cubesc_f32 */, AMDGPU::V_CUBESC_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21008 /* v_cubesc_f32 */, AMDGPU::V_CUBESC_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21021 /* v_cubetc_f32 */, AMDGPU::V_CUBETC_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21021 /* v_cubetc_f32 */, AMDGPU::V_CUBETC_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21048 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21062 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21090 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21090 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21200 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21200 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21214 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21214 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21228 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21228 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21260 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21288 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 21288 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 21302 /* v_cvt_norm_i16_f16 */, AMDGPU::V_CVT_NORM_I16_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 21321 /* v_cvt_norm_u16_f16 */, AMDGPU::V_CVT_NORM_U16_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21357 /* v_cvt_pk_i16_i32 */, AMDGPU::V_CVT_PK_I16_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 21357 /* v_cvt_pk_i16_i32 */, AMDGPU::V_CVT_PK_I16_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 21374 /* v_cvt_pk_u16_u32 */, AMDGPU::V_CVT_PK_U16_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 21374 /* v_cvt_pk_u16_u32 */, AMDGPU::V_CVT_PK_U16_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 21391 /* v_cvt_pk_u8_f32 */, AMDGPU::V_CVT_PK_U8_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI }, },
  { 21391 /* v_cvt_pk_u8_f32 */, AMDGPU::V_CVT_PK_U8_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI }, },
  { 21407 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 21407 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI }, },
  { 21407 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI }, },
  { 21428 /* v_cvt_pknorm_i16_f16 */, AMDGPU::V_CVT_PKNORM_I16_F16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 21449 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 21449 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21449 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21470 /* v_cvt_pknorm_u16_f16 */, AMDGPU::V_CVT_PKNORM_U16_F16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 21491 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 21491 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21491 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21512 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 21512 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21512 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21550 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 21578 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 21578 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 21592 /* v_div_fixup_f16 */, AMDGPU::V_DIV_FIXUP_F16_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21592 /* v_div_fixup_f16 */, AMDGPU::V_DIV_FIXUP_F16_gfx9_gfx9, ConvertCustom_cvtVOP3OpSel, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 21608 /* v_div_fixup_f32 */, AMDGPU::V_DIV_FIXUP_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21608 /* v_div_fixup_f32 */, AMDGPU::V_DIV_FIXUP_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21624 /* v_div_fixup_f64 */, AMDGPU::V_DIV_FIXUP_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21624 /* v_div_fixup_f64 */, AMDGPU::V_DIV_FIXUP_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21640 /* v_div_fixup_legacy_f16 */, AMDGPU::V_DIV_FIXUP_LEGACY_F16_gfx9, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21663 /* v_div_fmas_f32 */, AMDGPU::V_DIV_FMAS_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21663 /* v_div_fmas_f32 */, AMDGPU::V_DIV_FMAS_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21678 /* v_div_fmas_f64 */, AMDGPU::V_DIV_FMAS_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21678 /* v_div_fmas_f64 */, AMDGPU::V_DIV_FMAS_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21693 /* v_div_scale_f32 */, AMDGPU::V_DIV_SCALE_F32_si, Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcF32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 21693 /* v_div_scale_f32 */, AMDGPU::V_DIV_SCALE_F32_vi, Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcF32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 21709 /* v_div_scale_f64 */, AMDGPU::V_DIV_SCALE_F64_si, Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcF64, MCK_VCSrcF64, MCK_VCSrcF64 }, },
  { 21709 /* v_div_scale_f64 */, AMDGPU::V_DIV_SCALE_F64_vi, Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcF64, MCK_VCSrcF64, MCK_VCSrcF64 }, },
  { 21725 /* v_dot2_f32_f16 */, AMDGPU::V_DOT2_F32_F16_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_VCSrcF32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21740 /* v_dot2_i32_i16 */, AMDGPU::V_DOT2_I32_I16_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21755 /* v_dot2_u32_u16 */, AMDGPU::V_DOT2_U32_U16_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21770 /* v_dot4_i32_i8 */, AMDGPU::V_DOT4_I32_I8_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21784 /* v_dot4_u32_u8 */, AMDGPU::V_DOT4_U32_U8_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21798 /* v_dot8_i32_i4 */, AMDGPU::V_DOT8_I32_I4_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21812 /* v_dot8_u32_u4 */, AMDGPU::V_DOT8_U32_U4_vi, ConvertCustom_cvtVOP3P, Feature_HasDotInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 21826 /* v_exp_f16 */, AMDGPU::V_EXP_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e64_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 21896 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21920 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e64_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21920 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21932 /* v_fma_f16 */, AMDGPU::V_FMA_F16_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21932 /* v_fma_f16 */, AMDGPU::V_FMA_F16_gfx9_gfx9, ConvertCustom_cvtVOP3OpSel, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 21942 /* v_fma_f32 */, AMDGPU::V_FMA_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21942 /* v_fma_f32 */, AMDGPU::V_FMA_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21952 /* v_fma_f64 */, AMDGPU::V_FMA_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21952 /* v_fma_f64 */, AMDGPU::V_FMA_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21962 /* v_fma_legacy_f16 */, AMDGPU::V_FMA_LEGACY_F16_gfx9, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 21979 /* v_fma_mix_f32 */, AMDGPU::V_FMA_MIX_F32_vi, ConvertCustom_cvtVOP3P, Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmClampSI }, },
  { 21993 /* v_fma_mixhi_f16 */, AMDGPU::V_FMA_MIXHI_F16_vi, ConvertCustom_cvtVOP3P, Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmClampSI }, },
  { 22009 /* v_fma_mixlo_f16 */, AMDGPU::V_FMA_MIXLO_F16_vi, ConvertCustom_cvtVOP3P, Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmClampSI }, },
  { 22025 /* v_fmac_f32 */, AMDGPU::V_FMAC_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_HasDLInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22036 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22060 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22060 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22072 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI }, },
  { 22112 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 22112 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI }, },
  { 22132 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22166 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22166 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22183 /* v_interp_mov_f32 */, AMDGPU::V_INTERP_MOV_F32_e64_vi, ConvertCustom_cvtVOP3Interp, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_InterpSlot, MCK_Attr, MCK_AttrChan, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22200 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_e64_vi, ConvertCustom_cvtVOP3Interp, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22216 /* v_interp_p1ll_f16 */, AMDGPU::V_INTERP_P1LL_F16_vi, ConvertCustom_cvtVOP3Interp, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_ImmHigh, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22234 /* v_interp_p1lv_f16 */, AMDGPU::V_INTERP_P1LV_F16_vi, ConvertCustom_cvtVOP3Interp, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_RegOrImmWithFP16InputMods, MCK_ImmHigh, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22252 /* v_interp_p2_f16 */, AMDGPU::V_INTERP_P2_F16_gfx9_gfx9, ConvertCustom_cvtVOP3Interp, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_RegOrImmWithFP32InputMods, MCK_ImmHigh, MCK_ImmClampSI }, },
  { 22252 /* v_interp_p2_f16 */, AMDGPU::V_INTERP_P2_F16_vi, ConvertCustom_cvtVOP3Interp, Feature_Has16BitInsts|Feature_isVIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_RegOrImmWithFP32InputMods, MCK_ImmHigh, MCK_ImmClampSI }, },
  { 22268 /* v_interp_p2_f32 */, AMDGPU::V_INTERP_P2_F32_e64_vi, ConvertCustom_cvtVOP3Interp, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22284 /* v_interp_p2_legacy_f16 */, AMDGPU::V_INTERP_P2_LEGACY_F16_gfx9, ConvertCustom_cvtVOP3Interp, Feature_Has16BitInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_Attr, MCK_AttrChan, MCK_RegOrImmWithFP32InputMods, MCK_ImmHigh, MCK_ImmClampSI }, },
  { 22307 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22319 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 22319 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22319 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22331 /* v_ldexp_f64 */, AMDGPU::V_LDEXP_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22331 /* v_ldexp_f64 */, AMDGPU::V_LDEXP_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22343 /* v_lerp_u8 */, AMDGPU::V_LERP_U8_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22343 /* v_lerp_u8 */, AMDGPU::V_LERP_U8_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22353 /* v_log_clamp_f32 */, AMDGPU::V_LOG_CLAMP_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22369 /* v_log_f16 */, AMDGPU::V_LOG_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e64_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22406 /* v_lshl_add_u32 */, AMDGPU::V_LSHL_ADD_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22421 /* v_lshl_b32 */, AMDGPU::V_LSHL_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22432 /* v_lshl_b64 */, AMDGPU::V_LSHL_B64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32 }, },
  { 22443 /* v_lshl_or_b32 */, AMDGPU::V_LSHL_OR_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22457 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22485 /* v_lshlrev_b64 */, AMDGPU::V_LSHLREV_B64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 22499 /* v_lshr_b32 */, AMDGPU::V_LSHR_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22510 /* v_lshr_b64 */, AMDGPU::V_LSHR_B64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32 }, },
  { 22521 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22549 /* v_lshrrev_b64 */, AMDGPU::V_LSHRREV_B64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 22563 /* v_mac_f16 */, AMDGPU::V_MAC_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22573 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22573 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22583 /* v_mac_legacy_f32 */, AMDGPU::V_MAC_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22600 /* v_mad_f16 */, AMDGPU::V_MAD_F16_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22600 /* v_mad_f16 */, AMDGPU::V_MAD_F16_gfx9_gfx9, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22610 /* v_mad_f32 */, AMDGPU::V_MAD_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22610 /* v_mad_f32 */, AMDGPU::V_MAD_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22620 /* v_mad_i16 */, AMDGPU::V_MAD_I16_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmClampSI }, },
  { 22620 /* v_mad_i16 */, AMDGPU::V_MAD_I16_gfx9_gfx9, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22630 /* v_mad_i32_i16 */, AMDGPU::V_MAD_I32_I16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22644 /* v_mad_i32_i24 */, AMDGPU::V_MAD_I32_I24_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 22644 /* v_mad_i32_i24 */, AMDGPU::V_MAD_I32_I24_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 22658 /* v_mad_i64_i32 */, AMDGPU::V_MAD_I64_I32_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 22658 /* v_mad_i64_i32 */, AMDGPU::V_MAD_I64_I32_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 22672 /* v_mad_legacy_f16 */, AMDGPU::V_MAD_LEGACY_F16_gfx9, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22689 /* v_mad_legacy_f32 */, AMDGPU::V_MAD_LEGACY_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22689 /* v_mad_legacy_f32 */, AMDGPU::V_MAD_LEGACY_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22706 /* v_mad_legacy_i16 */, AMDGPU::V_MAD_LEGACY_I16_gfx9, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmClampSI }, },
  { 22723 /* v_mad_legacy_u16 */, AMDGPU::V_MAD_LEGACY_U16_gfx9, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmClampSI }, },
  { 22740 /* v_mad_mix_f32 */, AMDGPU::V_MAD_MIX_F32_vi, ConvertCustom_cvtVOP3P, Feature_HasMadMixInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmClampSI }, },
  { 22754 /* v_mad_mixhi_f16 */, AMDGPU::V_MAD_MIXHI_F16_vi, ConvertCustom_cvtVOP3P, Feature_HasMadMixInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmClampSI }, },
  { 22770 /* v_mad_mixlo_f16 */, AMDGPU::V_MAD_MIXLO_F16_vi, ConvertCustom_cvtVOP3P, Feature_HasMadMixInsts|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmClampSI }, },
  { 22786 /* v_mad_u16 */, AMDGPU::V_MAD_U16_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmClampSI }, },
  { 22786 /* v_mad_u16 */, AMDGPU::V_MAD_U16_gfx9_gfx9, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22796 /* v_mad_u32_u16 */, AMDGPU::V_MAD_U32_U16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB32, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22810 /* v_mad_u32_u24 */, AMDGPU::V_MAD_U32_U24_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 22810 /* v_mad_u32_u24 */, AMDGPU::V_MAD_U32_U24_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 22824 /* v_mad_u64_u32 */, AMDGPU::V_MAD_U64_U32_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 22824 /* v_mad_u64_u32 */, AMDGPU::V_MAD_U64_U32_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 22886 /* v_max3_f16 */, AMDGPU::V_MAX3_F16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22897 /* v_max3_f32 */, AMDGPU::V_MAX3_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22897 /* v_max3_f32 */, AMDGPU::V_MAX3_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22908 /* v_max3_i16 */, AMDGPU::V_MAX3_I16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22919 /* v_max3_i32 */, AMDGPU::V_MAX3_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22919 /* v_max3_i32 */, AMDGPU::V_MAX3_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22930 /* v_max3_u16 */, AMDGPU::V_MAX3_U16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 22941 /* v_max3_u32 */, AMDGPU::V_MAX3_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22941 /* v_max3_u32 */, AMDGPU::V_MAX3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22952 /* v_max_f16 */, AMDGPU::V_MAX_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22972 /* v_max_f64 */, AMDGPU::V_MAX_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22972 /* v_max_f64 */, AMDGPU::V_MAX_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 22982 /* v_max_i16 */, AMDGPU::V_MAX_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23002 /* v_max_legacy_f32 */, AMDGPU::V_MAX_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23019 /* v_max_u16 */, AMDGPU::V_MAX_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23039 /* v_mbcnt_hi_u32_b32 */, AMDGPU::V_MBCNT_HI_U32_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23039 /* v_mbcnt_hi_u32_b32 */, AMDGPU::V_MBCNT_HI_U32_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23058 /* v_mbcnt_lo_u32_b32 */, AMDGPU::V_MBCNT_LO_U32_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23058 /* v_mbcnt_lo_u32_b32 */, AMDGPU::V_MBCNT_LO_U32_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23077 /* v_med3_f16 */, AMDGPU::V_MED3_F16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23088 /* v_med3_f32 */, AMDGPU::V_MED3_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23088 /* v_med3_f32 */, AMDGPU::V_MED3_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23099 /* v_med3_i16 */, AMDGPU::V_MED3_I16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23110 /* v_med3_i32 */, AMDGPU::V_MED3_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23110 /* v_med3_i32 */, AMDGPU::V_MED3_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23121 /* v_med3_u16 */, AMDGPU::V_MED3_U16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23132 /* v_med3_u32 */, AMDGPU::V_MED3_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23132 /* v_med3_u32 */, AMDGPU::V_MED3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23143 /* v_min3_f16 */, AMDGPU::V_MIN3_F16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23154 /* v_min3_f32 */, AMDGPU::V_MIN3_F32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23154 /* v_min3_f32 */, AMDGPU::V_MIN3_F32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23165 /* v_min3_i16 */, AMDGPU::V_MIN3_I16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23176 /* v_min3_i32 */, AMDGPU::V_MIN3_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23176 /* v_min3_i32 */, AMDGPU::V_MIN3_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23187 /* v_min3_u16 */, AMDGPU::V_MIN3_U16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23198 /* v_min3_u32 */, AMDGPU::V_MIN3_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23198 /* v_min3_u32 */, AMDGPU::V_MIN3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23209 /* v_min_f16 */, AMDGPU::V_MIN_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23229 /* v_min_f64 */, AMDGPU::V_MIN_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23229 /* v_min_f64 */, AMDGPU::V_MIN_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23239 /* v_min_i16 */, AMDGPU::V_MIN_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23259 /* v_min_legacy_f32 */, AMDGPU::V_MIN_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23276 /* v_min_u16 */, AMDGPU::V_MIN_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23320 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e64_si, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23320 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e64_vi, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 23334 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e64_si, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 23334 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e64_vi, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 23348 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23348 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23363 /* v_mqsad_pk_u16_u8 */, AMDGPU::V_MQSAD_PK_U16_U8_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 23363 /* v_mqsad_pk_u16_u8 */, AMDGPU::V_MQSAD_PK_U16_U8_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 23381 /* v_mqsad_u32_u8 */, AMDGPU::V_MQSAD_U32_U8_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_128, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VReg_128, MCK_ImmClampSI }, },
  { 23381 /* v_mqsad_u32_u8 */, AMDGPU::V_MQSAD_U32_U8_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_128, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VReg_128, MCK_ImmClampSI }, },
  { 23396 /* v_msad_u8 */, AMDGPU::V_MSAD_U8_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 23396 /* v_msad_u8 */, AMDGPU::V_MSAD_U8_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 23406 /* v_mul_f16 */, AMDGPU::V_MUL_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23426 /* v_mul_f64 */, AMDGPU::V_MUL_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23426 /* v_mul_f64 */, AMDGPU::V_MUL_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23436 /* v_mul_hi_i32 */, AMDGPU::V_MUL_HI_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23436 /* v_mul_hi_i32 */, AMDGPU::V_MUL_HI_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23466 /* v_mul_hi_u32 */, AMDGPU::V_MUL_HI_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23466 /* v_mul_hi_u32 */, AMDGPU::V_MUL_HI_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23527 /* v_mul_lo_i32 */, AMDGPU::V_MUL_LO_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23527 /* v_mul_lo_i32 */, AMDGPU::V_MUL_LO_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23540 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 23553 /* v_mul_lo_u32 */, AMDGPU::V_MUL_LO_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23553 /* v_mul_lo_u32 */, AMDGPU::V_MUL_LO_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23580 /* v_mullit_f32 */, AMDGPU::V_MULLIT_F32_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23593 /* v_nop */, AMDGPU::V_NOP_e64_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 23593 /* v_nop */, AMDGPU::V_NOP_e64_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 23609 /* v_or3_b32 */, AMDGPU::V_OR3_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23628 /* v_pack_b32_f16 */, AMDGPU::V_PACK_B32_F16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 23643 /* v_perm_b32 */, AMDGPU::V_PERM_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 23654 /* v_pk_add_f16 */, AMDGPU::V_PK_ADD_F16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23667 /* v_pk_add_i16 */, AMDGPU::V_PK_ADD_I16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23680 /* v_pk_add_u16 */, AMDGPU::V_PK_ADD_U16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23693 /* v_pk_ashrrev_i16 */, AMDGPU::V_PK_ASHRREV_I16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23710 /* v_pk_fma_f16 */, AMDGPU::V_PK_FMA_F16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23723 /* v_pk_lshlrev_b16 */, AMDGPU::V_PK_LSHLREV_B16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23740 /* v_pk_lshrrev_b16 */, AMDGPU::V_PK_LSHRREV_B16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23757 /* v_pk_mad_i16 */, AMDGPU::V_PK_MAD_I16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23770 /* v_pk_mad_u16 */, AMDGPU::V_PK_MAD_U16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23783 /* v_pk_max_f16 */, AMDGPU::V_PK_MAX_F16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23796 /* v_pk_max_i16 */, AMDGPU::V_PK_MAX_I16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23809 /* v_pk_max_u16 */, AMDGPU::V_PK_MAX_U16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23822 /* v_pk_min_f16 */, AMDGPU::V_PK_MIN_F16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23835 /* v_pk_min_i16 */, AMDGPU::V_PK_MIN_I16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23848 /* v_pk_min_u16 */, AMDGPU::V_PK_MIN_U16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23861 /* v_pk_mul_f16 */, AMDGPU::V_PK_MUL_F16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2F16, MCK_VCSrcV2F16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23874 /* v_pk_mul_lo_u16 */, AMDGPU::V_PK_MUL_LO_U16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23890 /* v_pk_sub_i16 */, AMDGPU::V_PK_SUB_I16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23903 /* v_pk_sub_u16 */, AMDGPU::V_PK_SUB_U16_vi, ConvertCustom_cvtVOP3P, Feature_isGCN|Feature_HasVOP3PInsts, { MCK_VGPR_32, MCK_VCSrcV2B16, MCK_VCSrcV2B16, MCK_ImmOpSel, MCK_ImmOpSelHi, MCK_ImmNegLo, MCK_ImmNegHi, MCK_ImmClampSI }, },
  { 23916 /* v_qsad_pk_u16_u8 */, AMDGPU::V_QSAD_PK_U16_U8_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 23916 /* v_qsad_pk_u16_u8 */, AMDGPU::V_QSAD_PK_U16_U8_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64, MCK_ImmClampSI }, },
  { 23933 /* v_rcp_clamp_f32 */, AMDGPU::V_RCP_CLAMP_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23949 /* v_rcp_clamp_f64 */, AMDGPU::V_RCP_CLAMP_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23965 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23985 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23985 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24011 /* v_rcp_legacy_f32 */, AMDGPU::V_RCP_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24063 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24087 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e64_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24087 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24099 /* v_rsq_clamp_f32 */, AMDGPU::V_RSQ_CLAMP_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24115 /* v_rsq_clamp_f64 */, AMDGPU::V_RSQ_CLAMP_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24131 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24151 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24151 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24161 /* v_rsq_legacy_f32 */, AMDGPU::V_RSQ_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24178 /* v_sad_hi_u8 */, AMDGPU::V_SAD_HI_U8_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24178 /* v_sad_hi_u8 */, AMDGPU::V_SAD_HI_U8_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24190 /* v_sad_u16 */, AMDGPU::V_SAD_U16_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24190 /* v_sad_u16 */, AMDGPU::V_SAD_U16_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24200 /* v_sad_u32 */, AMDGPU::V_SAD_U32_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24200 /* v_sad_u32 */, AMDGPU::V_SAD_U32_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24210 /* v_sad_u8 */, AMDGPU::V_SAD_U8_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24210 /* v_sad_u8 */, AMDGPU::V_SAD_U8_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_ImmClampSI }, },
  { 24219 /* v_sat_pk_u8_i16 */, AMDGPU::V_SAT_PK_U8_I16_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 24235 /* v_screen_partition_4se_b32 */, AMDGPU::V_SCREEN_PARTITION_4SE_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 24262 /* v_sin_f16 */, AMDGPU::V_SIN_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24282 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24304 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24304 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24315 /* v_sub_co_u32 */, AMDGPU::V_SUB_CO_U32_e64_gfx9, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24328 /* v_sub_f16 */, AMDGPU::V_SUB_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24348 /* v_sub_i16 */, AMDGPU::V_SUB_I16_vi, ConvertCustom_cvtVOP3OpSel, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16, MCK_ImmOpSel, MCK_ImmClampSI }, },
  { 24358 /* v_sub_i32 */, AMDGPU::V_SUB_I32_gfx9_gfx9, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGFX9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24358 /* v_sub_i32 */, AMDGPU::V_SUB_I32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24368 /* v_sub_u16 */, AMDGPU::V_SUB_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_e64_gfx9, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_HasAddNoCarryInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24388 /* v_subb_co_u32 */, AMDGPU::V_SUBB_CO_U32_e64_gfx9, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 24402 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 24402 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 24413 /* v_subbrev_co_u32 */, AMDGPU::V_SUBBREV_CO_U32_e64_gfx9, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 24430 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 24430 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__Reg1_4, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SReg_64_XEXEC }, },
  { 24444 /* v_subrev_co_u32 */, AMDGPU::V_SUBREV_CO_U32_e64_gfx9, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isGFX9, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24460 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24486 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24499 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_e64_gfx9, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_HasAddNoCarryInsts|Feature_isGFX9, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVIOnly, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24536 /* v_trig_preop_f64 */, AMDGPU::V_TRIG_PREOP_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24536 /* v_trig_preop_f64 */, AMDGPU::V_TRIG_PREOP_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24553 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_e64_vi, ConvertCustom_cvtVOP3, Feature_Has16BitInsts|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24577 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e64_ci, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24577 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e64_vi, ConvertCustom_cvtVOP3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 24605 /* v_xad_u32 */, AMDGPU::V_XAD_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGFX9|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24615 /* v_xnor_b32 */, AMDGPU::V_XNOR_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_HasDLInsts|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
};

static const MatchEntry MatchTable2[] = {
  { 12292 /* v_add_f16 */, AMDGPU::V_ADD_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12357 /* v_add_u16 */, AMDGPU::V_ADD_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12391 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12478 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 12587 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 12630 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12666 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12738 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12768 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12828 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12858 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12918 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12948 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13008 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13036 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13092 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13120 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13176 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13204 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13260 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13290 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13350 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13380 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13440 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13470 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13530 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13560 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13620 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13650 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13710 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13740 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13800 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13830 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13890 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13920 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13980 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14010 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14070 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14100 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14160 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14190 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14250 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14280 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14340 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14370 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14430 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14460 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14520 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14550 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14610 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14642 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14706 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14738 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14802 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14834 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14898 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14930 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14994 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15026 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15090 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15122 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15186 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15214 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15270 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15298 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15354 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15382 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15438 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15470 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15534 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15562 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17762 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17800 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17876 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17908 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17972 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18004 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18068 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18100 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18164 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18194 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18254 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18284 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18344 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18374 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18434 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18466 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18530 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18562 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18626 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18658 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18722 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18754 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18818 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18850 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18914 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18946 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19010 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19042 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19106 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19138 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19202 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19234 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19298 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19330 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19394 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19426 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19490 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19522 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19586 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19618 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19682 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19714 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19778 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19810 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19874 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19908 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19976 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20010 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20078 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20112 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20180 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20214 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20282 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20316 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20384 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20418 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20486 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20516 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20576 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20606 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20666 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20696 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20756 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20790 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20858 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20888 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA|Feature_HasSDWA, { MCK_VCC, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20962 /* v_cos_f16 */, AMDGPU::V_COS_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21048 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21062 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21260 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21302 /* v_cvt_norm_i16_f16 */, AMDGPU::V_CVT_NORM_I16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isGFX9|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21321 /* v_cvt_norm_u16_f16 */, AMDGPU::V_CVT_NORM_U16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isGFX9|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21550 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21826 /* v_exp_f16 */, AMDGPU::V_EXP_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isCIVI|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21896 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22025 /* v_fmac_f32 */, AMDGPU::V_FMAC_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_HasDLInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22036 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22072 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22132 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22307 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22369 /* v_log_f16 */, AMDGPU::V_LOG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isCIVI|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22457 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22521 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22563 /* v_mac_f16 */, AMDGPU::V_MAC_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22573 /* v_mac_f32 */, AMDGPU::V_MAC_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22952 /* v_max_f16 */, AMDGPU::V_MAX_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22982 /* v_max_i16 */, AMDGPU::V_MAX_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23019 /* v_max_u16 */, AMDGPU::V_MAX_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23209 /* v_min_f16 */, AMDGPU::V_MIN_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23239 /* v_min_i16 */, AMDGPU::V_MIN_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23276 /* v_min_u16 */, AMDGPU::V_MIN_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23406 /* v_mul_f16 */, AMDGPU::V_MUL_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23540 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23593 /* v_nop */, AMDGPU::V_NOP_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, {  }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23965 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24063 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24131 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24219 /* v_sat_pk_u8_i16 */, AMDGPU::V_SAT_PK_U8_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isGFX9|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24262 /* v_sin_f16 */, AMDGPU::V_SIN_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24282 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24328 /* v_sub_f16 */, AMDGPU::V_SUB_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24368 /* v_sub_u16 */, AMDGPU::V_SUB_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24402 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24430 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24460 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24499 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2b, Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24553 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_Has16BitInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24615 /* v_xnor_b32 */, AMDGPU::V_XNOR_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_HasDLInsts|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_HasSDWA, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
};

static const MatchEntry MatchTable3[] = {
  { 12279 /* v_add_co_u32 */, AMDGPU::V_ADD_CO_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12292 /* v_add_f16 */, AMDGPU::V_ADD_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12357 /* v_add_u16 */, AMDGPU::V_ADD_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12377 /* v_addc_co_u32 */, AMDGPU::V_ADDC_CO_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12478 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 12587 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 12630 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12666 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12738 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12768 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12828 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12858 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12918 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 12948 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13008 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13036 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13092 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13120 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13176 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13204 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13260 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13290 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13350 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13380 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13440 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13470 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13530 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13560 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13620 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13650 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13710 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13740 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13800 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13830 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13890 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13920 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13980 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14010 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14070 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14100 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14160 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14190 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14250 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14280 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14340 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14370 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14430 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14460 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14520 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14550 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14610 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14642 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14706 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14738 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14802 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14834 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14898 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14930 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14994 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15026 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15090 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15122 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15186 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15214 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15270 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15298 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15354 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15382 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15438 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15470 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15534 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15562 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17762 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17800 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17876 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17908 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17972 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18004 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18068 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18100 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18164 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18194 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18254 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18284 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18344 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18374 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18434 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18466 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18530 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18562 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18626 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18658 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18722 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18754 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18818 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18850 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18914 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18946 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19010 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19042 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19106 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19138 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19202 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19234 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19298 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19330 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19394 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19426 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19490 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19522 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19586 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19618 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19682 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19714 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19778 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19810 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19874 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19908 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19976 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20010 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20078 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20112 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20180 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20214 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20282 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20316 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20384 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20418 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20486 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20516 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20576 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20606 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20666 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20696 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20756 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20790 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20858 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20888 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOPC, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_SReg_64, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 20962 /* v_cos_f16 */, AMDGPU::V_COS_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21048 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21062 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21260 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21302 /* v_cvt_norm_i16_f16 */, AMDGPU::V_CVT_NORM_I16_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21321 /* v_cvt_norm_u16_f16 */, AMDGPU::V_CVT_NORM_U16_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21550 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21826 /* v_exp_f16 */, AMDGPU::V_EXP_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21896 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22036 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22072 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22132 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22307 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22369 /* v_log_f16 */, AMDGPU::V_LOG_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 22457 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22521 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22952 /* v_max_f16 */, AMDGPU::V_MAX_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22982 /* v_max_i16 */, AMDGPU::V_MAX_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23019 /* v_max_u16 */, AMDGPU::V_MAX_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23209 /* v_min_f16 */, AMDGPU::V_MIN_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23239 /* v_min_i16 */, AMDGPU::V_MIN_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23276 /* v_min_u16 */, AMDGPU::V_MIN_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23406 /* v_mul_f16 */, AMDGPU::V_MUL_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23540 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23593 /* v_nop */, AMDGPU::V_NOP_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, {  }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 23965 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24063 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24131 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24219 /* v_sat_pk_u8_i16 */, AMDGPU::V_SAT_PK_U8_I16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24235 /* v_screen_partition_4se_b32 */, AMDGPU::V_SCREEN_PARTITION_4SE_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24262 /* v_sin_f16 */, AMDGPU::V_SIN_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24282 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24315 /* v_sub_co_u32 */, AMDGPU::V_SUB_CO_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24328 /* v_sub_f16 */, AMDGPU::V_SUB_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24368 /* v_sub_u16 */, AMDGPU::V_SUB_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24388 /* v_subb_co_u32 */, AMDGPU::V_SUBB_CO_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24413 /* v_subbrev_co_u32 */, AMDGPU::V_SUBBREV_CO_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24444 /* v_subrev_co_u32 */, AMDGPU::V_SUBREV_CO_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2b, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24460 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24499 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt16InputMods, MCK_SDWAWithInt16InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24553 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP1, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 24615 /* v_xnor_b32 */, AMDGPU::V_XNOR_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasDLInsts|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_sdwa_gfx9, ConvertCustom_cvtSdwaVOP2, Feature_HasSDWA9|Feature_HasSDWA9, { MCK_VGPR_32, MCK_SDWAWithInt32InputMods, MCK_SDWAWithInt32InputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
};

static const MatchEntry MatchTable4[] = {
  { 12279 /* v_add_co_u32 */, AMDGPU::V_ADD_CO_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12292 /* v_add_f16 */, AMDGPU::V_ADD_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12302 /* v_add_f32 */, AMDGPU::V_ADD_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12357 /* v_add_u16 */, AMDGPU::V_ADD_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12367 /* v_add_u32 */, AMDGPU::V_ADD_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12377 /* v_addc_co_u32 */, AMDGPU::V_ADDC_CO_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isGCN|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12391 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12433 /* v_and_b32 */, AMDGPU::V_AND_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12478 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12492 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12575 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12587 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 12598 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 20948 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 20962 /* v_cos_f16 */, AMDGPU::V_COS_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 20972 /* v_cos_f32 */, AMDGPU::V_COS_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21034 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21048 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21062 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21076 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21104 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21118 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21132 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21149 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21166 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21183 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21242 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21260 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21274 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21302 /* v_cvt_norm_i16_f16 */, AMDGPU::V_CVT_NORM_I16_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_isGFX9|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21321 /* v_cvt_norm_u16_f16 */, AMDGPU::V_CVT_NORM_U16_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_isGFX9|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21340 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21532 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21550 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21564 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21826 /* v_exp_f16 */, AMDGPU::V_EXP_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21836 /* v_exp_f32 */, AMDGPU::V_EXP_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21846 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isCIVI|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21863 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21874 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21885 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21896 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 21908 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22025 /* v_fmac_f32 */, AMDGPU::V_FMAC_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDLInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22036 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22048 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22072 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22092 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22132 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22149 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22307 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22369 /* v_log_f16 */, AMDGPU::V_LOG_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22379 /* v_log_f32 */, AMDGPU::V_LOG_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22389 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isCIVI|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22457 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22471 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22521 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22535 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22563 /* v_mac_f16 */, AMDGPU::V_MAC_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22573 /* v_mac_f32 */, AMDGPU::V_MAC_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22952 /* v_max_f16 */, AMDGPU::V_MAX_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22962 /* v_max_f32 */, AMDGPU::V_MAX_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22982 /* v_max_i16 */, AMDGPU::V_MAX_I16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 22992 /* v_max_i32 */, AMDGPU::V_MAX_I32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23019 /* v_max_u16 */, AMDGPU::V_MAX_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23029 /* v_max_u32 */, AMDGPU::V_MAX_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23209 /* v_min_f16 */, AMDGPU::V_MIN_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23219 /* v_min_f32 */, AMDGPU::V_MIN_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23239 /* v_min_i16 */, AMDGPU::V_MIN_I16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23249 /* v_min_i32 */, AMDGPU::V_MIN_I32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23276 /* v_min_u16 */, AMDGPU::V_MIN_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23286 /* v_min_u32 */, AMDGPU::V_MIN_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23296 /* v_mov_b32 */, AMDGPU::V_MOV_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23306 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23406 /* v_mul_f16 */, AMDGPU::V_MUL_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23416 /* v_mul_f32 */, AMDGPU::V_MUL_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23449 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23479 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23496 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23510 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23540 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23566 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23599 /* v_not_b32 */, AMDGPU::V_NOT_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23619 /* v_or_b32 */, AMDGPU::V_OR_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23965 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23975 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 23995 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24063 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24075 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24131 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24141 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24219 /* v_sat_pk_u8_i16 */, AMDGPU::V_SAT_PK_U8_I16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isGFX9|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24235 /* v_screen_partition_4se_b32 */, AMDGPU::V_SCREEN_PARTITION_4SE_B32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isGFX9|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24262 /* v_sin_f16 */, AMDGPU::V_SIN_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24272 /* v_sin_f32 */, AMDGPU::V_SIN_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24282 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24293 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24315 /* v_sub_co_u32 */, AMDGPU::V_SUB_CO_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24328 /* v_sub_f16 */, AMDGPU::V_SUB_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24338 /* v_sub_f32 */, AMDGPU::V_SUB_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24368 /* v_sub_u16 */, AMDGPU::V_SUB_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24378 /* v_sub_u32 */, AMDGPU::V_SUB_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24388 /* v_subb_co_u32 */, AMDGPU::V_SUBB_CO_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isGCN|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24402 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24413 /* v_subbrev_co_u32 */, AMDGPU::V_SUBBREV_CO_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isGCN|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24430 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24444 /* v_subrev_co_u32 */, AMDGPU::V_SUBREV_CO_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24460 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24473 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24499 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_dpp_gfx9, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24512 /* v_subrev_u32 */, AMDGPU::V_SUBREV_U32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24553 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_dpp_vi, ConvertCustom_cvtDPP, Feature_Has16BitInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24565 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_dpp_vi, ConvertCustom_cvtDPP, Feature_HasDPP|Feature_HasDPP, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24615 /* v_xnor_b32 */, AMDGPU::V_XNOR_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_HasDLInsts|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 24626 /* v_xor_b32 */, AMDGPU::V_XOR_B32_dpp_vi, Convert__Reg1_0__Tie0_1_1__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isGCN|Feature_HasDPP, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
};

#include "llvm/Support/Debug.h"
#include "llvm/Support/Format.h"

unsigned AMDGPUAsmParser::
MatchInstructionImpl(const OperandVector &Operands,
                     MCInst &Inst,
                     uint64_t &ErrorInfo,
                     bool matchingInlineAsm, unsigned VariantID) {
  // Eliminate obvious mismatches.
  if (Operands.size() > 14) {
    ErrorInfo = 14;
    return Match_InvalidOperand;
  }

  // Get the current feature set.
  uint64_t AvailableFeatures = getAvailableFeatures();

  // Get the instruction mnemonic, which is the first token.
  StringRef Mnemonic = ((AMDGPUOperand&)*Operands[0]).getToken();

  // Process all MnemonicAliases to remap the mnemonic.
  applyMnemonicAliases(Mnemonic, AvailableFeatures, VariantID);

  // Some state to try to produce better error messages.
  bool HadMatchOtherThanFeatures = false;
  bool HadMatchOtherThanPredicate = false;
  unsigned RetCode = Match_InvalidOperand;
  uint64_t MissingFeatures = ~0ULL;
  // Set ErrorInfo to the operand that mismatches if it is
  // wrong for all instances of the instruction.
  ErrorInfo = ~0ULL;
  SmallBitVector OptionalOperandsMask(13);
  // Find the appropriate table for this asm variant.
  const MatchEntry *Start, *End;
  switch (VariantID) {
  default: llvm_unreachable("invalid variant!");
  case 0: Start = std::begin(MatchTable0); End = std::end(MatchTable0); break;
  case 1: Start = std::begin(MatchTable1); End = std::end(MatchTable1); break;
  case 2: Start = std::begin(MatchTable2); End = std::end(MatchTable2); break;
  case 3: Start = std::begin(MatchTable3); End = std::end(MatchTable3); break;
  case 4: Start = std::begin(MatchTable4); End = std::end(MatchTable4); break;
  }
  // Search the table.
  auto MnemonicRange = std::equal_range(Start, End, Mnemonic, LessOpcode());

  DEBUG_WITH_TYPE("asm-matcher", dbgs() << "AsmMatcher: found " <<
  std::distance(MnemonicRange.first, MnemonicRange.second) << 
  " encodings with mnemonic '" << Mnemonic << "'\n");

  // Return a more specific error code if no mnemonics match.
  if (MnemonicRange.first == MnemonicRange.second)
    return Match_MnemonicFail;

  for (const MatchEntry *it = MnemonicRange.first, *ie = MnemonicRange.second;
       it != ie; ++it) {
    bool HasRequiredFeatures =
      (AvailableFeatures & it->RequiredFeatures) == it->RequiredFeatures;
    DEBUG_WITH_TYPE("asm-matcher", dbgs() << "Trying to match opcode "
                                          << MII.getName(it->Opcode) << "\n");
    // equal_range guarantees that instruction mnemonic matches.
    assert(Mnemonic == it->getMnemonic());
    bool OperandsValid = true;
    OptionalOperandsMask.reset(0, 13);
    for (unsigned FormalIdx = 0, ActualIdx = 1; FormalIdx != 13; ++FormalIdx) {
      auto Formal = static_cast<MatchClassKind>(it->Classes[FormalIdx]);
      DEBUG_WITH_TYPE("asm-matcher",
                      dbgs() << "  Matching formal operand class " << getMatchClassName(Formal)
                             << " against actual operand at index " << ActualIdx);
      if (ActualIdx < Operands.size())
        DEBUG_WITH_TYPE("asm-matcher", dbgs() << " (";
                        Operands[ActualIdx]->print(dbgs()); dbgs() << "): ");
      else
        DEBUG_WITH_TYPE("asm-matcher", dbgs() << ": ");
      if (ActualIdx >= Operands.size()) {
        DEBUG_WITH_TYPE("asm-matcher", dbgs() << "actual operand index out of range ");
        OperandsValid = (Formal == InvalidMatchClass) || isSubclass(Formal, OptionalMatchClass);
        if (!OperandsValid) ErrorInfo = ActualIdx;
        OptionalOperandsMask.set(FormalIdx, 13);
        break;
      }
      MCParsedAsmOperand &Actual = *Operands[ActualIdx];
      unsigned Diag = validateOperandClass(Actual, Formal);
      if (Diag == Match_Success) {
        DEBUG_WITH_TYPE("asm-matcher",
                        dbgs() << "match success using generic matcher\n");
        ++ActualIdx;
        continue;
      }
      // If the generic handler indicates an invalid operand
      // failure, check for a special case.
      if (Diag != Match_Success) {
        unsigned TargetDiag = validateTargetOperandClass(Actual, Formal);
        if (TargetDiag == Match_Success) {
          DEBUG_WITH_TYPE("asm-matcher",
                          dbgs() << "match success using target matcher\n");
          ++ActualIdx;
          continue;
        }
        // If the target matcher returned a specific error code use
        // that, else use the one from the generic matcher.
        if (TargetDiag != Match_InvalidOperand && HasRequiredFeatures)
          Diag = TargetDiag;
      }
      // If current formal operand wasn't matched and it is optional
      // then try to match next formal operand
      if (Diag == Match_InvalidOperand && isSubclass(Formal, OptionalMatchClass)) {
        OptionalOperandsMask.set(FormalIdx);
        DEBUG_WITH_TYPE("asm-matcher", dbgs() << "ignoring optional operand\n");
        continue;
      }
      // If this operand is broken for all of the instances of this
      // mnemonic, keep track of it so we can report loc info.
      // If we already had a match that only failed due to a
      // target predicate, that diagnostic is preferred.
      if (!HadMatchOtherThanPredicate &&
          (it == MnemonicRange.first || ErrorInfo <= ActualIdx)) {
        if (HasRequiredFeatures && (ErrorInfo != ActualIdx || Diag != Match_InvalidOperand))
          RetCode = Diag;
        ErrorInfo = ActualIdx;
      }
      // Otherwise, just reject this instance of the mnemonic.
      OperandsValid = false;
      break;
    }

    if (!OperandsValid) {
      DEBUG_WITH_TYPE("asm-matcher", dbgs() << "Opcode result: multiple "
                                               "operand mismatches, ignoring "
                                               "this opcode\n");
      continue;
    }
    if (!HasRequiredFeatures) {
      HadMatchOtherThanFeatures = true;
      uint64_t NewMissingFeatures = it->RequiredFeatures & ~AvailableFeatures;
      DEBUG_WITH_TYPE("asm-matcher", dbgs() << "Missing target features: "
                                            << format_hex(NewMissingFeatures, 18)
                                            << "\n");
      if (countPopulation(NewMissingFeatures) <=
          countPopulation(MissingFeatures))
        MissingFeatures = NewMissingFeatures;
      continue;
    }

    Inst.clear();

    Inst.setOpcode(it->Opcode);
    // We have a potential match but have not rendered the operands.
    // Check the target predicate to handle any context sensitive
    // constraints.
    // For example, Ties that are referenced multiple times must be
    // checked here to ensure the input is the same for each match
    // constraints. If we leave it any later the ties will have been
    // canonicalized
    unsigned MatchResult;
    if ((MatchResult = checkEarlyTargetMatchPredicate(Inst, Operands)) != Match_Success) {
      Inst.clear();
      DEBUG_WITH_TYPE(
          "asm-matcher",
          dbgs() << "Early target match predicate failed with diag code "
                 << MatchResult << "\n");
      RetCode = MatchResult;
      HadMatchOtherThanPredicate = true;
      continue;
    }

    if (matchingInlineAsm) {
      convertToMapAndConstraints(it->ConvertFn, Operands);
      if (!checkAsmTiedOperandConstraints(*this, it->ConvertFn, Operands, ErrorInfo))
        return Match_InvalidTiedOperand;

      return Match_Success;
    }

    // We have selected a definite instruction, convert the parsed
    // operands into the appropriate MCInst.
    convertToMCInst(it->ConvertFn, Inst, it->Opcode, Operands,
                    OptionalOperandsMask);

    // We have a potential match. Check the target predicate to
    // handle any context sensitive constraints.
    if ((MatchResult = checkTargetMatchPredicate(Inst)) != Match_Success) {
      DEBUG_WITH_TYPE("asm-matcher",
                      dbgs() << "Target match predicate failed with diag code "
                             << MatchResult << "\n");
      Inst.clear();
      RetCode = MatchResult;
      HadMatchOtherThanPredicate = true;
      continue;
    }

    if (!checkAsmTiedOperandConstraints(*this, it->ConvertFn, Operands, ErrorInfo))
      return Match_InvalidTiedOperand;

    DEBUG_WITH_TYPE(
        "asm-matcher",
        dbgs() << "Opcode result: complete match, selecting this opcode\n");
    return Match_Success;
  }

  // Okay, we had no match.  Try to return a useful error code.
  if (HadMatchOtherThanPredicate || !HadMatchOtherThanFeatures)
    return RetCode;

  // Missing feature matches return which features were missing
  ErrorInfo = MissingFeatures;
  return Match_MissingFeature;
}

namespace {
  struct OperandMatchEntry {
    uint64_t RequiredFeatures;
    uint16_t Mnemonic;
    uint8_t Class;
    uint16_t OperandMask;

    StringRef getMnemonic() const {
      return StringRef(MnemonicTable + Mnemonic + 1,
                       MnemonicTable[Mnemonic]);
    }
  };

  // Predicate for searching for an opcode.
  struct LessOpcodeOperand {
    bool operator()(const OperandMatchEntry &LHS, StringRef RHS) {
      return LHS.getMnemonic()  < RHS;
    }
    bool operator()(StringRef LHS, const OperandMatchEntry &RHS) {
      return LHS < RHS.getMnemonic();
    }
    bool operator()(const OperandMatchEntry &LHS, const OperandMatchEntry &RHS) {
      return LHS.getMnemonic() < RHS.getMnemonic();
    }
  };
} // end anonymous namespace.

static const OperandMatchEntry OperandMatchTable[20815] = {
  /* Operand List Mask, Mnemonic, Operand Class, Features */
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 0 /* buffer_atomic_add */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 39 /* buffer_atomic_and */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 57 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 78 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 100 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 125 /* buffer_atomic_dec */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 143 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 164 /* buffer_atomic_inc */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 182 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 203 /* buffer_atomic_or */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 220 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 240 /* buffer_atomic_smax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 259 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 281 /* buffer_atomic_smin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 300 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 322 /* buffer_atomic_sub */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 340 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 361 /* buffer_atomic_swap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 380 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 402 /* buffer_atomic_umax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 421 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 443 /* buffer_atomic_umin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 462 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 484 /* buffer_atomic_xor */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 502 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 523 /* buffer_load_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 523 /* buffer_load_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 541 /* buffer_load_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 561 /* buffer_load_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 581 /* buffer_load_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 601 /* buffer_load_format_d16_hi_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 629 /* buffer_load_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 654 /* buffer_load_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 680 /* buffer_load_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 707 /* buffer_load_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 756 /* buffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 778 /* buffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 801 /* buffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 825 /* buffer_load_sbyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 843 /* buffer_load_sbyte_d16 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 865 /* buffer_load_sbyte_d16_hi */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 890 /* buffer_load_short_d16 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 912 /* buffer_load_short_d16_hi */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_load_sshort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_load_ubyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 974 /* buffer_load_ubyte_d16 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 996 /* buffer_load_ubyte_d16_hi */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1021 /* buffer_load_ushort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1040 /* buffer_store_byte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1058 /* buffer_store_byte_d16_hi */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1083 /* buffer_store_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1102 /* buffer_store_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1123 /* buffer_store_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1144 /* buffer_store_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1165 /* buffer_store_format_d16_hi_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1194 /* buffer_store_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1220 /* buffer_store_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1247 /* buffer_store_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 1275 /* buffer_store_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1304 /* buffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1326 /* buffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1349 /* buffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1373 /* buffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isVI|Feature_isVI, 1398 /* buffer_store_lds_dword */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 1398 /* buffer_store_lds_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 1398 /* buffer_store_lds_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1421 /* buffer_store_short */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1421 /* buffer_store_short */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 1440 /* buffer_store_short_d16_hi */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1518 /* ds_add_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1518 /* ds_add_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1529 /* ds_add_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1529 /* ds_add_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1544 /* ds_add_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1544 /* ds_add_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1544 /* ds_add_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1544 /* ds_add_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1559 /* ds_add_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1559 /* ds_add_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1559 /* ds_add_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1559 /* ds_add_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 1574 /* ds_add_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 1574 /* ds_add_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1590 /* ds_add_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1590 /* ds_add_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1590 /* ds_add_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1590 /* ds_add_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1606 /* ds_add_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1606 /* ds_add_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1606 /* ds_add_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1606 /* ds_add_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1622 /* ds_add_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1622 /* ds_add_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1622 /* ds_add_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1622 /* ds_add_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1633 /* ds_add_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1633 /* ds_add_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1633 /* ds_add_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1633 /* ds_add_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1644 /* ds_and_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1644 /* ds_and_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1644 /* ds_and_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1644 /* ds_and_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1655 /* ds_and_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1655 /* ds_and_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1655 /* ds_and_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1655 /* ds_and_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1666 /* ds_and_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1666 /* ds_and_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1666 /* ds_and_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1666 /* ds_and_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1681 /* ds_and_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1681 /* ds_and_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1681 /* ds_and_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1681 /* ds_and_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1696 /* ds_and_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1696 /* ds_and_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1696 /* ds_and_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1696 /* ds_and_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1712 /* ds_and_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1712 /* ds_and_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1712 /* ds_and_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1712 /* ds_and_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1728 /* ds_append */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1728 /* ds_append */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1728 /* ds_append */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1728 /* ds_append */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 1738 /* ds_bpermute_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1754 /* ds_cmpst_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1754 /* ds_cmpst_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1754 /* ds_cmpst_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1754 /* ds_cmpst_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1767 /* ds_cmpst_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1767 /* ds_cmpst_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1767 /* ds_cmpst_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1767 /* ds_cmpst_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1780 /* ds_cmpst_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1780 /* ds_cmpst_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1780 /* ds_cmpst_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1780 /* ds_cmpst_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1793 /* ds_cmpst_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1793 /* ds_cmpst_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1793 /* ds_cmpst_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1793 /* ds_cmpst_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1806 /* ds_cmpst_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1806 /* ds_cmpst_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1806 /* ds_cmpst_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1806 /* ds_cmpst_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1823 /* ds_cmpst_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1823 /* ds_cmpst_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1823 /* ds_cmpst_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1823 /* ds_cmpst_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1840 /* ds_cmpst_rtn_f32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1840 /* ds_cmpst_rtn_f32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1840 /* ds_cmpst_rtn_f32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1840 /* ds_cmpst_rtn_f32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1857 /* ds_cmpst_rtn_f64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1857 /* ds_cmpst_rtn_f64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1857 /* ds_cmpst_rtn_f64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1857 /* ds_cmpst_rtn_f64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isSICI, 1874 /* ds_condxchg32_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 1874 /* ds_condxchg32_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 1874 /* ds_condxchg32_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 1874 /* ds_condxchg32_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1896 /* ds_consume */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1896 /* ds_consume */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1896 /* ds_consume */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1896 /* ds_consume */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1907 /* ds_dec_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1907 /* ds_dec_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1907 /* ds_dec_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1907 /* ds_dec_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1922 /* ds_dec_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1922 /* ds_dec_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1922 /* ds_dec_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1922 /* ds_dec_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1937 /* ds_dec_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1937 /* ds_dec_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1937 /* ds_dec_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1937 /* ds_dec_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1953 /* ds_dec_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1953 /* ds_dec_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1953 /* ds_dec_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1953 /* ds_dec_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1969 /* ds_dec_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1969 /* ds_dec_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1969 /* ds_dec_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1969 /* ds_dec_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1980 /* ds_dec_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1980 /* ds_dec_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1980 /* ds_dec_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1980 /* ds_dec_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1991 /* ds_gws_barrier */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1991 /* ds_gws_barrier */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2006 /* ds_gws_init */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2006 /* ds_gws_init */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2018 /* ds_gws_sema_br */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2018 /* ds_gws_sema_br */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2033 /* ds_gws_sema_p */, MCK_ImmOffset, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 2033 /* ds_gws_sema_p */, MCK_ImmOffset, 1 /* 0 */ },
  { Feature_isCIVI|Feature_isSICI, 2047 /* ds_gws_sema_release_all */, MCK_ImmOffset, 1 /* 0 */ },
  { Feature_isCIVI|Feature_isVI, 2047 /* ds_gws_sema_release_all */, MCK_ImmOffset, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 2071 /* ds_gws_sema_v */, MCK_ImmOffset, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 2071 /* ds_gws_sema_v */, MCK_ImmOffset, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 2085 /* ds_inc_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2085 /* ds_inc_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2085 /* ds_inc_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2085 /* ds_inc_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2100 /* ds_inc_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2100 /* ds_inc_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2100 /* ds_inc_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2100 /* ds_inc_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2115 /* ds_inc_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2115 /* ds_inc_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2115 /* ds_inc_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2115 /* ds_inc_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2131 /* ds_inc_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2131 /* ds_inc_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2131 /* ds_inc_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2131 /* ds_inc_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2147 /* ds_inc_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2147 /* ds_inc_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2147 /* ds_inc_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2147 /* ds_inc_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2158 /* ds_inc_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2158 /* ds_inc_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2158 /* ds_inc_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2158 /* ds_inc_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2169 /* ds_max_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2169 /* ds_max_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2169 /* ds_max_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2169 /* ds_max_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2180 /* ds_max_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2180 /* ds_max_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2180 /* ds_max_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2180 /* ds_max_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2191 /* ds_max_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2191 /* ds_max_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2191 /* ds_max_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2191 /* ds_max_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2202 /* ds_max_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2202 /* ds_max_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2202 /* ds_max_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2202 /* ds_max_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2213 /* ds_max_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2213 /* ds_max_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2213 /* ds_max_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2213 /* ds_max_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2228 /* ds_max_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2228 /* ds_max_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2228 /* ds_max_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2228 /* ds_max_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2243 /* ds_max_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2243 /* ds_max_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2243 /* ds_max_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2243 /* ds_max_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2258 /* ds_max_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2258 /* ds_max_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2258 /* ds_max_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2258 /* ds_max_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2273 /* ds_max_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2273 /* ds_max_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2273 /* ds_max_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2273 /* ds_max_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2288 /* ds_max_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2288 /* ds_max_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2288 /* ds_max_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2288 /* ds_max_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2303 /* ds_max_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2303 /* ds_max_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2303 /* ds_max_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2303 /* ds_max_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2319 /* ds_max_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2319 /* ds_max_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2319 /* ds_max_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2319 /* ds_max_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2335 /* ds_max_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2335 /* ds_max_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2335 /* ds_max_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2335 /* ds_max_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2351 /* ds_max_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2351 /* ds_max_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2351 /* ds_max_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2351 /* ds_max_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2367 /* ds_max_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2367 /* ds_max_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2367 /* ds_max_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2367 /* ds_max_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2383 /* ds_max_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2383 /* ds_max_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2383 /* ds_max_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2383 /* ds_max_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2399 /* ds_max_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2399 /* ds_max_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2399 /* ds_max_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2399 /* ds_max_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2410 /* ds_max_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2410 /* ds_max_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2410 /* ds_max_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2410 /* ds_max_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2421 /* ds_min_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2421 /* ds_min_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2421 /* ds_min_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2421 /* ds_min_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2432 /* ds_min_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2432 /* ds_min_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2432 /* ds_min_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2432 /* ds_min_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2443 /* ds_min_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2443 /* ds_min_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2443 /* ds_min_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2443 /* ds_min_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2454 /* ds_min_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2454 /* ds_min_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2454 /* ds_min_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2454 /* ds_min_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2465 /* ds_min_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2465 /* ds_min_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2465 /* ds_min_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2465 /* ds_min_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2480 /* ds_min_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2480 /* ds_min_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2480 /* ds_min_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2480 /* ds_min_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2495 /* ds_min_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2495 /* ds_min_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2495 /* ds_min_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2495 /* ds_min_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2510 /* ds_min_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2510 /* ds_min_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2510 /* ds_min_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2510 /* ds_min_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2525 /* ds_min_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2525 /* ds_min_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2525 /* ds_min_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2525 /* ds_min_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2540 /* ds_min_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2540 /* ds_min_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2540 /* ds_min_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2540 /* ds_min_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2555 /* ds_min_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2555 /* ds_min_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2555 /* ds_min_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2555 /* ds_min_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2571 /* ds_min_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2571 /* ds_min_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2571 /* ds_min_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2571 /* ds_min_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2587 /* ds_min_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2587 /* ds_min_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2587 /* ds_min_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2587 /* ds_min_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2603 /* ds_min_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2603 /* ds_min_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2603 /* ds_min_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2603 /* ds_min_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2619 /* ds_min_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2619 /* ds_min_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2619 /* ds_min_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2619 /* ds_min_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2635 /* ds_min_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2635 /* ds_min_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2635 /* ds_min_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2635 /* ds_min_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2651 /* ds_min_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2651 /* ds_min_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2651 /* ds_min_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2651 /* ds_min_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2662 /* ds_min_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2662 /* ds_min_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2662 /* ds_min_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2662 /* ds_min_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2673 /* ds_mskor_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2673 /* ds_mskor_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2673 /* ds_mskor_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2673 /* ds_mskor_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2686 /* ds_mskor_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2686 /* ds_mskor_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2686 /* ds_mskor_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2686 /* ds_mskor_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2699 /* ds_mskor_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2699 /* ds_mskor_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2699 /* ds_mskor_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2699 /* ds_mskor_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2716 /* ds_mskor_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2716 /* ds_mskor_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2716 /* ds_mskor_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2716 /* ds_mskor_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2740 /* ds_or_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2740 /* ds_or_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2740 /* ds_or_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2740 /* ds_or_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2750 /* ds_or_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2750 /* ds_or_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2750 /* ds_or_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2750 /* ds_or_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2760 /* ds_or_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2760 /* ds_or_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2760 /* ds_or_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2760 /* ds_or_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2774 /* ds_or_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2774 /* ds_or_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2774 /* ds_or_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2774 /* ds_or_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2788 /* ds_or_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2788 /* ds_or_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2788 /* ds_or_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2788 /* ds_or_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2803 /* ds_or_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2803 /* ds_or_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2803 /* ds_or_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2803 /* ds_or_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2818 /* ds_ordered_count */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2818 /* ds_ordered_count */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 2835 /* ds_permute_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2850 /* ds_read2_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2850 /* ds_read2_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2850 /* ds_read2_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2850 /* ds_read2_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2850 /* ds_read2_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2850 /* ds_read2_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2863 /* ds_read2_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2863 /* ds_read2_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2863 /* ds_read2_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2863 /* ds_read2_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2863 /* ds_read2_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2863 /* ds_read2_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2876 /* ds_read2st64_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2876 /* ds_read2st64_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2876 /* ds_read2st64_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2876 /* ds_read2st64_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2876 /* ds_read2st64_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2876 /* ds_read2st64_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2893 /* ds_read2st64_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2893 /* ds_read2st64_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2893 /* ds_read2st64_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2893 /* ds_read2st64_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2893 /* ds_read2st64_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2893 /* ds_read2st64_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_HasDSAddTid|Feature_isVI, 2910 /* ds_read_addtid_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasDSAddTid|Feature_isVI, 2910 /* ds_read_addtid_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 2929 /* ds_read_b128 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isSICI, 2929 /* ds_read_b128 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 2929 /* ds_read_b128 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 2929 /* ds_read_b128 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2942 /* ds_read_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2942 /* ds_read_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2942 /* ds_read_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2942 /* ds_read_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2954 /* ds_read_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2954 /* ds_read_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2954 /* ds_read_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2954 /* ds_read_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 2966 /* ds_read_b96 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isSICI, 2966 /* ds_read_b96 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 2966 /* ds_read_b96 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 2966 /* ds_read_b96 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2978 /* ds_read_i16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2978 /* ds_read_i16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2978 /* ds_read_i16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2978 /* ds_read_i16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2990 /* ds_read_i8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2990 /* ds_read_i8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2990 /* ds_read_i8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2990 /* ds_read_i8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3001 /* ds_read_i8_d16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3001 /* ds_read_i8_d16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3016 /* ds_read_i8_d16_hi */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3016 /* ds_read_i8_d16_hi */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3034 /* ds_read_u16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3034 /* ds_read_u16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3034 /* ds_read_u16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3034 /* ds_read_u16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3046 /* ds_read_u16_d16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3046 /* ds_read_u16_d16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3062 /* ds_read_u16_d16_hi */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3062 /* ds_read_u16_d16_hi */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3081 /* ds_read_u8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3081 /* ds_read_u8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3081 /* ds_read_u8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3081 /* ds_read_u8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3092 /* ds_read_u8_d16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3092 /* ds_read_u8_d16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3107 /* ds_read_u8_d16_hi */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3107 /* ds_read_u8_d16_hi */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3125 /* ds_rsub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3125 /* ds_rsub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3125 /* ds_rsub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3125 /* ds_rsub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3141 /* ds_rsub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3141 /* ds_rsub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3141 /* ds_rsub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3141 /* ds_rsub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3157 /* ds_rsub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3157 /* ds_rsub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3157 /* ds_rsub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3157 /* ds_rsub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3174 /* ds_rsub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3174 /* ds_rsub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3174 /* ds_rsub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3174 /* ds_rsub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3191 /* ds_rsub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3191 /* ds_rsub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3191 /* ds_rsub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3191 /* ds_rsub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3203 /* ds_rsub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3203 /* ds_rsub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3203 /* ds_rsub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3203 /* ds_rsub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3215 /* ds_sub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3215 /* ds_sub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3215 /* ds_sub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3215 /* ds_sub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3230 /* ds_sub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3230 /* ds_sub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3230 /* ds_sub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3230 /* ds_sub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3245 /* ds_sub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3245 /* ds_sub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3245 /* ds_sub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3245 /* ds_sub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3261 /* ds_sub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3261 /* ds_sub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3261 /* ds_sub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3261 /* ds_sub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3277 /* ds_sub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3277 /* ds_sub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3277 /* ds_sub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3277 /* ds_sub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3288 /* ds_sub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3288 /* ds_sub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3288 /* ds_sub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3288 /* ds_sub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3299 /* ds_swizzle_b32 */, MCK_Swizzle, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3299 /* ds_swizzle_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3299 /* ds_swizzle_b32 */, MCK_Swizzle, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3299 /* ds_swizzle_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 3314 /* ds_wrap_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isSICI, 3314 /* ds_wrap_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3314 /* ds_wrap_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3314 /* ds_wrap_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3330 /* ds_write2_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3330 /* ds_write2_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3330 /* ds_write2_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3330 /* ds_write2_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3330 /* ds_write2_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3330 /* ds_write2_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3344 /* ds_write2_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3344 /* ds_write2_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3344 /* ds_write2_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3344 /* ds_write2_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3344 /* ds_write2_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3344 /* ds_write2_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3358 /* ds_write2st64_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3358 /* ds_write2st64_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3358 /* ds_write2st64_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3358 /* ds_write2st64_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3358 /* ds_write2st64_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3358 /* ds_write2st64_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3376 /* ds_write2st64_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3376 /* ds_write2st64_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3376 /* ds_write2st64_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3376 /* ds_write2st64_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3376 /* ds_write2st64_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3376 /* ds_write2st64_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_HasDSAddTid|Feature_isVI, 3394 /* ds_write_addtid_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasDSAddTid|Feature_isVI, 3394 /* ds_write_addtid_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 3414 /* ds_write_b128 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isSICI, 3414 /* ds_write_b128 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3414 /* ds_write_b128 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3414 /* ds_write_b128 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3428 /* ds_write_b16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3428 /* ds_write_b16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3428 /* ds_write_b16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3428 /* ds_write_b16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3441 /* ds_write_b16_d16_hi */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3441 /* ds_write_b16_d16_hi */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3461 /* ds_write_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3461 /* ds_write_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3461 /* ds_write_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3461 /* ds_write_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3474 /* ds_write_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3474 /* ds_write_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3474 /* ds_write_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3474 /* ds_write_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3487 /* ds_write_b8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3487 /* ds_write_b8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3487 /* ds_write_b8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3487 /* ds_write_b8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3499 /* ds_write_b8_d16_hi */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 3499 /* ds_write_b8_d16_hi */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 3518 /* ds_write_b96 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isSICI, 3518 /* ds_write_b96 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3518 /* ds_write_b96 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3518 /* ds_write_b96 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3531 /* ds_write_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3531 /* ds_write_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3531 /* ds_write_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3531 /* ds_write_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3549 /* ds_write_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3549 /* ds_write_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3549 /* ds_write_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3549 /* ds_write_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3567 /* ds_wrxchg2_rtn_b32 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3567 /* ds_wrxchg2_rtn_b32 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3567 /* ds_wrxchg2_rtn_b32 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3567 /* ds_wrxchg2_rtn_b32 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3567 /* ds_wrxchg2_rtn_b32 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3567 /* ds_wrxchg2_rtn_b32 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3586 /* ds_wrxchg2_rtn_b64 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3586 /* ds_wrxchg2_rtn_b64 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3586 /* ds_wrxchg2_rtn_b64 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3586 /* ds_wrxchg2_rtn_b64 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3586 /* ds_wrxchg2_rtn_b64 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3586 /* ds_wrxchg2_rtn_b64 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3605 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3605 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3605 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3605 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3605 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3605 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3628 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3628 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3628 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3628 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmOffset0, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3628 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmOffset1, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3628 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmGDS, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3651 /* ds_wrxchg_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3651 /* ds_wrxchg_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3651 /* ds_wrxchg_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3651 /* ds_wrxchg_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3669 /* ds_wrxchg_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3669 /* ds_wrxchg_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3669 /* ds_wrxchg_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3669 /* ds_wrxchg_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3687 /* ds_xor_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3687 /* ds_xor_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3687 /* ds_xor_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3687 /* ds_xor_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3698 /* ds_xor_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3698 /* ds_xor_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3698 /* ds_xor_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3698 /* ds_xor_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3709 /* ds_xor_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3709 /* ds_xor_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3709 /* ds_xor_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3709 /* ds_xor_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3724 /* ds_xor_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3724 /* ds_xor_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3724 /* ds_xor_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3724 /* ds_xor_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3739 /* ds_xor_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3739 /* ds_xor_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3739 /* ds_xor_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3739 /* ds_xor_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3755 /* ds_xor_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3755 /* ds_xor_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3755 /* ds_xor_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3755 /* ds_xor_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_ImmExpCompr, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_ImmExpVM, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_ImmExpCompr, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_ImmExpVM, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_ImmExpCompr, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_ImmExpVM, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3771 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_ImmExpCompr, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_ImmExpVM, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3771 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3775 /* flat_atomic_add */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3775 /* flat_atomic_add */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3775 /* flat_atomic_add */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3775 /* flat_atomic_add */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3775 /* flat_atomic_add */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3775 /* flat_atomic_add */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3775 /* flat_atomic_add */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3775 /* flat_atomic_add */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3791 /* flat_atomic_add_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3791 /* flat_atomic_add_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3791 /* flat_atomic_add_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3791 /* flat_atomic_add_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3791 /* flat_atomic_add_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3791 /* flat_atomic_add_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3791 /* flat_atomic_add_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3791 /* flat_atomic_add_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3810 /* flat_atomic_and */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3810 /* flat_atomic_and */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3810 /* flat_atomic_and */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3810 /* flat_atomic_and */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3810 /* flat_atomic_and */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3810 /* flat_atomic_and */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3810 /* flat_atomic_and */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3810 /* flat_atomic_and */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3826 /* flat_atomic_and_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3826 /* flat_atomic_and_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3826 /* flat_atomic_and_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3826 /* flat_atomic_and_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3826 /* flat_atomic_and_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3826 /* flat_atomic_and_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3826 /* flat_atomic_and_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3826 /* flat_atomic_and_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3845 /* flat_atomic_cmpswap */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3845 /* flat_atomic_cmpswap */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3845 /* flat_atomic_cmpswap */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3845 /* flat_atomic_cmpswap */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3845 /* flat_atomic_cmpswap */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3845 /* flat_atomic_cmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3845 /* flat_atomic_cmpswap */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3845 /* flat_atomic_cmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3865 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3888 /* flat_atomic_dec */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3888 /* flat_atomic_dec */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3888 /* flat_atomic_dec */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3888 /* flat_atomic_dec */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3888 /* flat_atomic_dec */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3888 /* flat_atomic_dec */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3888 /* flat_atomic_dec */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3888 /* flat_atomic_dec */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3904 /* flat_atomic_dec_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3904 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3904 /* flat_atomic_dec_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3904 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3904 /* flat_atomic_dec_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 3904 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3904 /* flat_atomic_dec_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 3904 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isCIOnly, 3923 /* flat_atomic_fcmpswap */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_isCIOnly, 3923 /* flat_atomic_fcmpswap */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIOnly, 3923 /* flat_atomic_fcmpswap */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_isCIOnly, 3923 /* flat_atomic_fcmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isCIOnly, 3944 /* flat_atomic_fcmpswap_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_isCIOnly, 3944 /* flat_atomic_fcmpswap_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIOnly, 3944 /* flat_atomic_fcmpswap_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_isCIOnly, 3944 /* flat_atomic_fcmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isCIOnly, 3968 /* flat_atomic_fmax */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_isCIOnly, 3968 /* flat_atomic_fmax */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIOnly, 3968 /* flat_atomic_fmax */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_isCIOnly, 3968 /* flat_atomic_fmax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isCIOnly, 3985 /* flat_atomic_fmax_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_isCIOnly, 3985 /* flat_atomic_fmax_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIOnly, 3985 /* flat_atomic_fmax_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_isCIOnly, 3985 /* flat_atomic_fmax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isCIOnly, 4005 /* flat_atomic_fmin */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_isCIOnly, 4005 /* flat_atomic_fmin */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIOnly, 4005 /* flat_atomic_fmin */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_isCIOnly, 4005 /* flat_atomic_fmin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isCIOnly, 4022 /* flat_atomic_fmin_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_isCIOnly, 4022 /* flat_atomic_fmin_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIOnly, 4022 /* flat_atomic_fmin_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_isCIOnly, 4022 /* flat_atomic_fmin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4042 /* flat_atomic_inc */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4042 /* flat_atomic_inc */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4042 /* flat_atomic_inc */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4042 /* flat_atomic_inc */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4042 /* flat_atomic_inc */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4042 /* flat_atomic_inc */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4042 /* flat_atomic_inc */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4042 /* flat_atomic_inc */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4058 /* flat_atomic_inc_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4058 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4058 /* flat_atomic_inc_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4058 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4058 /* flat_atomic_inc_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4058 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4058 /* flat_atomic_inc_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4058 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4077 /* flat_atomic_or */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4077 /* flat_atomic_or */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4077 /* flat_atomic_or */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4077 /* flat_atomic_or */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4077 /* flat_atomic_or */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4077 /* flat_atomic_or */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4077 /* flat_atomic_or */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4077 /* flat_atomic_or */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4092 /* flat_atomic_or_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4092 /* flat_atomic_or_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4092 /* flat_atomic_or_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4092 /* flat_atomic_or_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4092 /* flat_atomic_or_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4092 /* flat_atomic_or_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4092 /* flat_atomic_or_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4092 /* flat_atomic_or_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4110 /* flat_atomic_smax */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4110 /* flat_atomic_smax */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4110 /* flat_atomic_smax */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4110 /* flat_atomic_smax */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4110 /* flat_atomic_smax */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4110 /* flat_atomic_smax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4110 /* flat_atomic_smax */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4110 /* flat_atomic_smax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4127 /* flat_atomic_smax_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4127 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4127 /* flat_atomic_smax_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4127 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4127 /* flat_atomic_smax_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4127 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4127 /* flat_atomic_smax_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4127 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4147 /* flat_atomic_smin */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4147 /* flat_atomic_smin */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4147 /* flat_atomic_smin */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4147 /* flat_atomic_smin */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4147 /* flat_atomic_smin */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4147 /* flat_atomic_smin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4147 /* flat_atomic_smin */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4147 /* flat_atomic_smin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4164 /* flat_atomic_smin_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4164 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4164 /* flat_atomic_smin_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4164 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4164 /* flat_atomic_smin_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4164 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4164 /* flat_atomic_smin_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4164 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4184 /* flat_atomic_sub */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4184 /* flat_atomic_sub */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4184 /* flat_atomic_sub */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4184 /* flat_atomic_sub */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4184 /* flat_atomic_sub */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4184 /* flat_atomic_sub */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4184 /* flat_atomic_sub */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4184 /* flat_atomic_sub */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4200 /* flat_atomic_sub_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4200 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4200 /* flat_atomic_sub_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4200 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4200 /* flat_atomic_sub_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4200 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4200 /* flat_atomic_sub_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4200 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4219 /* flat_atomic_swap */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4219 /* flat_atomic_swap */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4219 /* flat_atomic_swap */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4219 /* flat_atomic_swap */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4219 /* flat_atomic_swap */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4219 /* flat_atomic_swap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4219 /* flat_atomic_swap */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4219 /* flat_atomic_swap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4236 /* flat_atomic_swap_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4236 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4236 /* flat_atomic_swap_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4236 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4236 /* flat_atomic_swap_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4236 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4236 /* flat_atomic_swap_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4236 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4256 /* flat_atomic_umax */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4256 /* flat_atomic_umax */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4256 /* flat_atomic_umax */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4256 /* flat_atomic_umax */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4256 /* flat_atomic_umax */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4256 /* flat_atomic_umax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4256 /* flat_atomic_umax */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4256 /* flat_atomic_umax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4273 /* flat_atomic_umax_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4273 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4273 /* flat_atomic_umax_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4273 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4273 /* flat_atomic_umax_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4273 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4273 /* flat_atomic_umax_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4273 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4293 /* flat_atomic_umin */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4293 /* flat_atomic_umin */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4293 /* flat_atomic_umin */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4293 /* flat_atomic_umin */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4293 /* flat_atomic_umin */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4293 /* flat_atomic_umin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4293 /* flat_atomic_umin */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4293 /* flat_atomic_umin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4310 /* flat_atomic_umin_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4310 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4310 /* flat_atomic_umin_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4310 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4310 /* flat_atomic_umin_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4310 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4310 /* flat_atomic_umin_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4310 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4330 /* flat_atomic_xor */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4330 /* flat_atomic_xor */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4330 /* flat_atomic_xor */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4330 /* flat_atomic_xor */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4330 /* flat_atomic_xor */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4330 /* flat_atomic_xor */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4330 /* flat_atomic_xor */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4330 /* flat_atomic_xor */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4346 /* flat_atomic_xor_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4346 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4346 /* flat_atomic_xor_x2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4346 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4346 /* flat_atomic_xor_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4346 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4346 /* flat_atomic_xor_x2 */, MCK_ImmOffsetU12, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4346 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4365 /* flat_load_dword */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4365 /* flat_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4365 /* flat_load_dword */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4365 /* flat_load_dword */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4365 /* flat_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4365 /* flat_load_dword */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4381 /* flat_load_dwordx2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4381 /* flat_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4381 /* flat_load_dwordx2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4381 /* flat_load_dwordx2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4381 /* flat_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4381 /* flat_load_dwordx2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4399 /* flat_load_dwordx3 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4399 /* flat_load_dwordx3 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4399 /* flat_load_dwordx3 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4399 /* flat_load_dwordx3 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4399 /* flat_load_dwordx3 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4399 /* flat_load_dwordx3 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4417 /* flat_load_dwordx4 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4417 /* flat_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4417 /* flat_load_dwordx4 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4417 /* flat_load_dwordx4 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4417 /* flat_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4417 /* flat_load_dwordx4 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4435 /* flat_load_sbyte */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4435 /* flat_load_sbyte */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4435 /* flat_load_sbyte */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4435 /* flat_load_sbyte */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4435 /* flat_load_sbyte */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4435 /* flat_load_sbyte */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4451 /* flat_load_sbyte_d16 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4451 /* flat_load_sbyte_d16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4451 /* flat_load_sbyte_d16 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4471 /* flat_load_sbyte_d16_hi */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4471 /* flat_load_sbyte_d16_hi */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4471 /* flat_load_sbyte_d16_hi */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4494 /* flat_load_short_d16 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4494 /* flat_load_short_d16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4494 /* flat_load_short_d16 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4514 /* flat_load_short_d16_hi */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4514 /* flat_load_short_d16_hi */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4514 /* flat_load_short_d16_hi */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4537 /* flat_load_sshort */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4537 /* flat_load_sshort */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4537 /* flat_load_sshort */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4537 /* flat_load_sshort */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4537 /* flat_load_sshort */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4537 /* flat_load_sshort */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4554 /* flat_load_ubyte */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4554 /* flat_load_ubyte */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4554 /* flat_load_ubyte */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4554 /* flat_load_ubyte */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4554 /* flat_load_ubyte */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4554 /* flat_load_ubyte */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4570 /* flat_load_ubyte_d16 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4570 /* flat_load_ubyte_d16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4570 /* flat_load_ubyte_d16 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4590 /* flat_load_ubyte_d16_hi */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4590 /* flat_load_ubyte_d16_hi */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4590 /* flat_load_ubyte_d16_hi */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4613 /* flat_load_ushort */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4613 /* flat_load_ushort */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4613 /* flat_load_ushort */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4613 /* flat_load_ushort */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4613 /* flat_load_ushort */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4613 /* flat_load_ushort */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4630 /* flat_store_byte */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4630 /* flat_store_byte */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4630 /* flat_store_byte */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4630 /* flat_store_byte */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4630 /* flat_store_byte */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4630 /* flat_store_byte */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4646 /* flat_store_byte_d16_hi */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4646 /* flat_store_byte_d16_hi */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4646 /* flat_store_byte_d16_hi */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4669 /* flat_store_dword */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4669 /* flat_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4669 /* flat_store_dword */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4669 /* flat_store_dword */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4669 /* flat_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4669 /* flat_store_dword */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4686 /* flat_store_dwordx2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4686 /* flat_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4686 /* flat_store_dwordx2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4686 /* flat_store_dwordx2 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4686 /* flat_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4686 /* flat_store_dwordx2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4705 /* flat_store_dwordx3 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4705 /* flat_store_dwordx3 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4705 /* flat_store_dwordx3 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4705 /* flat_store_dwordx3 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4705 /* flat_store_dwordx3 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4705 /* flat_store_dwordx3 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4724 /* flat_store_dwordx4 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4724 /* flat_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4724 /* flat_store_dwordx4 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4724 /* flat_store_dwordx4 */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4724 /* flat_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4724 /* flat_store_dwordx4 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4743 /* flat_store_short */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4743 /* flat_store_short */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isCIOnly, 4743 /* flat_store_short */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4743 /* flat_store_short */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4743 /* flat_store_short */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatAddressSpace|Feature_isVI, 4743 /* flat_store_short */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4760 /* flat_store_short_d16_hi */, MCK_ImmOffsetU12, 4 /* 2 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4760 /* flat_store_short_d16_hi */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasD16LoadStore|Feature_isVI, 4760 /* flat_store_short_d16_hi */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4784 /* global_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4802 /* global_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4823 /* global_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4841 /* global_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4862 /* global_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4884 /* global_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4909 /* global_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4927 /* global_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4948 /* global_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4966 /* global_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 4987 /* global_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5004 /* global_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5024 /* global_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5043 /* global_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5065 /* global_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5084 /* global_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5106 /* global_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5124 /* global_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5145 /* global_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5164 /* global_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5186 /* global_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5205 /* global_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5227 /* global_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5246 /* global_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5268 /* global_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmOffsetS13, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5286 /* global_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5307 /* global_load_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5307 /* global_load_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5307 /* global_load_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5307 /* global_load_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5307 /* global_load_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5307 /* global_load_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5325 /* global_load_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5325 /* global_load_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5325 /* global_load_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5325 /* global_load_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5325 /* global_load_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5325 /* global_load_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5345 /* global_load_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5345 /* global_load_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5345 /* global_load_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5345 /* global_load_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5345 /* global_load_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5345 /* global_load_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5365 /* global_load_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5365 /* global_load_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5365 /* global_load_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5365 /* global_load_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5365 /* global_load_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5365 /* global_load_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5385 /* global_load_sbyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5385 /* global_load_sbyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5385 /* global_load_sbyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5385 /* global_load_sbyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5385 /* global_load_sbyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5385 /* global_load_sbyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5403 /* global_load_sbyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5403 /* global_load_sbyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5403 /* global_load_sbyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5403 /* global_load_sbyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5403 /* global_load_sbyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5403 /* global_load_sbyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5425 /* global_load_sbyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5425 /* global_load_sbyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5425 /* global_load_sbyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5425 /* global_load_sbyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5425 /* global_load_sbyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5425 /* global_load_sbyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5450 /* global_load_short_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5450 /* global_load_short_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5450 /* global_load_short_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5450 /* global_load_short_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5450 /* global_load_short_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5450 /* global_load_short_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5472 /* global_load_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5472 /* global_load_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5472 /* global_load_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5472 /* global_load_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5472 /* global_load_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5472 /* global_load_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5497 /* global_load_sshort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5497 /* global_load_sshort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5497 /* global_load_sshort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5497 /* global_load_sshort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5497 /* global_load_sshort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5497 /* global_load_sshort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5516 /* global_load_ubyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5516 /* global_load_ubyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5516 /* global_load_ubyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5516 /* global_load_ubyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5516 /* global_load_ubyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5516 /* global_load_ubyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5534 /* global_load_ubyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5534 /* global_load_ubyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5534 /* global_load_ubyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5534 /* global_load_ubyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5534 /* global_load_ubyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5534 /* global_load_ubyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5556 /* global_load_ubyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5556 /* global_load_ubyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5556 /* global_load_ubyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5556 /* global_load_ubyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5556 /* global_load_ubyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5556 /* global_load_ubyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5581 /* global_load_ushort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5581 /* global_load_ushort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5581 /* global_load_ushort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5581 /* global_load_ushort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5581 /* global_load_ushort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5581 /* global_load_ushort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5600 /* global_store_byte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5600 /* global_store_byte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5600 /* global_store_byte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5600 /* global_store_byte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5600 /* global_store_byte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5600 /* global_store_byte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5618 /* global_store_byte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5618 /* global_store_byte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5618 /* global_store_byte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5618 /* global_store_byte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5618 /* global_store_byte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5618 /* global_store_byte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5643 /* global_store_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5643 /* global_store_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5643 /* global_store_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5643 /* global_store_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5643 /* global_store_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5643 /* global_store_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5662 /* global_store_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5662 /* global_store_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5662 /* global_store_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5662 /* global_store_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5662 /* global_store_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5662 /* global_store_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5683 /* global_store_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5683 /* global_store_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5683 /* global_store_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5683 /* global_store_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5683 /* global_store_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5683 /* global_store_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5704 /* global_store_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5704 /* global_store_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5704 /* global_store_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5704 /* global_store_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5704 /* global_store_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5704 /* global_store_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5725 /* global_store_short */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5725 /* global_store_short */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5725 /* global_store_short */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5725 /* global_store_short */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5725 /* global_store_short */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5725 /* global_store_short */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5744 /* global_store_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5744 /* global_store_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5744 /* global_store_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5744 /* global_store_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5744 /* global_store_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatGlobalInsts|Feature_isVI, 5744 /* global_store_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5770 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5787 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5804 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5825 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5842 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5859 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5875 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5893 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5911 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5928 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5946 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5964 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 5982 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5999 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6013 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6029 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6048 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6069 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6087 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6103 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6121 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6142 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6165 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6185 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6204 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6225 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6243 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6263 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6282 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6303 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6321 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6338 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6357 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6373 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6391 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6408 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6427 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6443 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6457 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6475 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6486 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6501 /* image_load_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6520 /* image_load_mip_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6543 /* image_load_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 6558 /* image_load_pck_sgn */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6577 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6590 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6605 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6623 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6643 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6660 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6675 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6692 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6712 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6734 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6753 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6771 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6792 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6815 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6835 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6853 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6873 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6890 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6910 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6932 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6951 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6968 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 6987 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7005 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7025 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7042 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7058 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7077 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7098 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7116 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7132 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7150 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7165 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7183 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7203 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7220 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7235 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7252 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7268 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmR128A16, 256 /* 8 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmD16, 4096 /* 12 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 7286 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7301 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmD16, 2048 /* 11 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7313 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7329 /* image_store_mip_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmR128A16, 128 /* 7 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 7349 /* image_store_pck */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 7596 /* s_atc_probe */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 7608 /* s_atc_probe_buffer */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7627 /* s_atomic_add */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7627 /* s_atomic_add */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7640 /* s_atomic_add_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7640 /* s_atomic_add_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7656 /* s_atomic_and */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7656 /* s_atomic_and */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7669 /* s_atomic_and_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7669 /* s_atomic_and_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7685 /* s_atomic_cmpswap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7685 /* s_atomic_cmpswap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7702 /* s_atomic_cmpswap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7702 /* s_atomic_cmpswap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7722 /* s_atomic_dec */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7722 /* s_atomic_dec */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7735 /* s_atomic_dec_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7735 /* s_atomic_dec_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7751 /* s_atomic_inc */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7751 /* s_atomic_inc */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7764 /* s_atomic_inc_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7764 /* s_atomic_inc_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7780 /* s_atomic_or */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7780 /* s_atomic_or */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7792 /* s_atomic_or_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7792 /* s_atomic_or_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7807 /* s_atomic_smax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7807 /* s_atomic_smax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7821 /* s_atomic_smax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7821 /* s_atomic_smax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7838 /* s_atomic_smin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7838 /* s_atomic_smin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7852 /* s_atomic_smin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7852 /* s_atomic_smin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7869 /* s_atomic_sub */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7869 /* s_atomic_sub */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7882 /* s_atomic_sub_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7882 /* s_atomic_sub_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7898 /* s_atomic_swap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7898 /* s_atomic_swap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7912 /* s_atomic_swap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7912 /* s_atomic_swap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7929 /* s_atomic_umax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7929 /* s_atomic_umax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7943 /* s_atomic_umax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7943 /* s_atomic_umax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7960 /* s_atomic_umin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7960 /* s_atomic_umin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7974 /* s_atomic_umin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7974 /* s_atomic_umin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7991 /* s_atomic_xor */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 7991 /* s_atomic_xor */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8004 /* s_atomic_xor_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8004 /* s_atomic_xor_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN, 8289 /* s_branch */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8320 /* s_buffer_atomic_add */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8320 /* s_buffer_atomic_add */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8340 /* s_buffer_atomic_add_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8340 /* s_buffer_atomic_add_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8363 /* s_buffer_atomic_and */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8363 /* s_buffer_atomic_and */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8383 /* s_buffer_atomic_and_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8383 /* s_buffer_atomic_and_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8406 /* s_buffer_atomic_cmpswap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8406 /* s_buffer_atomic_cmpswap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8430 /* s_buffer_atomic_cmpswap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8430 /* s_buffer_atomic_cmpswap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8457 /* s_buffer_atomic_dec */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8457 /* s_buffer_atomic_dec */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8477 /* s_buffer_atomic_dec_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8477 /* s_buffer_atomic_dec_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8500 /* s_buffer_atomic_inc */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8500 /* s_buffer_atomic_inc */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8520 /* s_buffer_atomic_inc_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8520 /* s_buffer_atomic_inc_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8543 /* s_buffer_atomic_or */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8543 /* s_buffer_atomic_or */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8562 /* s_buffer_atomic_or_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8562 /* s_buffer_atomic_or_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8584 /* s_buffer_atomic_smax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8584 /* s_buffer_atomic_smax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8605 /* s_buffer_atomic_smax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8605 /* s_buffer_atomic_smax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8629 /* s_buffer_atomic_smin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8629 /* s_buffer_atomic_smin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8650 /* s_buffer_atomic_smin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8650 /* s_buffer_atomic_smin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8674 /* s_buffer_atomic_sub */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8674 /* s_buffer_atomic_sub */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8694 /* s_buffer_atomic_sub_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8694 /* s_buffer_atomic_sub_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8717 /* s_buffer_atomic_swap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8717 /* s_buffer_atomic_swap */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8738 /* s_buffer_atomic_swap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8738 /* s_buffer_atomic_swap_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8762 /* s_buffer_atomic_umax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8762 /* s_buffer_atomic_umax */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8783 /* s_buffer_atomic_umax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8783 /* s_buffer_atomic_umax_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8807 /* s_buffer_atomic_umin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8807 /* s_buffer_atomic_umin */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8828 /* s_buffer_atomic_umin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8828 /* s_buffer_atomic_umin_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8852 /* s_buffer_atomic_xor */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8852 /* s_buffer_atomic_xor */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8872 /* s_buffer_atomic_xor_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasScalarAtomics|Feature_isVI, 8872 /* s_buffer_atomic_xor_x2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 8895 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8895 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8895 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8895 /* s_buffer_load_dword */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8895 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8895 /* s_buffer_load_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 8895 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 8895 /* s_buffer_load_dword */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 8915 /* s_buffer_load_dwordx16 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 8938 /* s_buffer_load_dwordx2 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 8960 /* s_buffer_load_dwordx4 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 8982 /* s_buffer_load_dwordx8 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 9004 /* s_buffer_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9004 /* s_buffer_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9004 /* s_buffer_store_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 9025 /* s_buffer_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9025 /* s_buffer_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9025 /* s_buffer_store_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 9048 /* s_buffer_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9048 /* s_buffer_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9048 /* s_buffer_store_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN, 9082 /* s_cbranch_cdbgsys */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9100 /* s_cbranch_cdbgsys_and_user */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9127 /* s_cbranch_cdbgsys_or_user */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9153 /* s_cbranch_cdbguser */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9172 /* s_cbranch_execnz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9189 /* s_cbranch_execz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9254 /* s_cbranch_scc0 */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9269 /* s_cbranch_scc1 */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9284 /* s_cbranch_vccnz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 9300 /* s_cbranch_vccz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGFX9|Feature_isVI, 9727 /* s_dcache_discard */, MCK_ImmSMRDOffset20, 2 /* 1 */ },
  { Feature_isGFX9|Feature_isVI, 9744 /* s_dcache_discard_x2 */, MCK_ImmSMRDOffset20, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 10014 /* s_getreg_b32 */, MCK_ImmHwreg, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 10014 /* s_getreg_b32 */, MCK_ImmHwreg, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 10055 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10055 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10055 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10055 /* s_load_dword */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 10055 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10055 /* s_load_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 10055 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 10055 /* s_load_dword */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 10068 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10068 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10068 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10068 /* s_load_dwordx16 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 10068 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10068 /* s_load_dwordx16 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 10068 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 10068 /* s_load_dwordx16 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 10084 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10084 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10084 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10084 /* s_load_dwordx2 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 10084 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10084 /* s_load_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 10084 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 10084 /* s_load_dwordx2 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 10099 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10099 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10099 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10099 /* s_load_dwordx4 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 10099 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10099 /* s_load_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 10099 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 10099 /* s_load_dwordx4 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 10114 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10114 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10114 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 10114 /* s_load_dwordx8 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 10114 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10114 /* s_load_dwordx8 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 10114 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 10114 /* s_load_dwordx8 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10782 /* s_scratch_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10782 /* s_scratch_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10782 /* s_scratch_load_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10803 /* s_scratch_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10803 /* s_scratch_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10803 /* s_scratch_load_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10826 /* s_scratch_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10826 /* s_scratch_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10826 /* s_scratch_load_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10849 /* s_scratch_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10849 /* s_scratch_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10849 /* s_scratch_store_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10871 /* s_scratch_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10871 /* s_scratch_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10871 /* s_scratch_store_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10895 /* s_scratch_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10895 /* s_scratch_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 10895 /* s_scratch_store_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN, 10919 /* s_sendmsg */, MCK_SendMsg, 1 /* 0 */ },
  { Feature_isGCN, 10929 /* s_sendmsghalt */, MCK_SendMsg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 11057 /* s_setreg_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 11057 /* s_setreg_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 11070 /* s_setreg_imm32_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 11070 /* s_setreg_imm32_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 11137 /* s_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11137 /* s_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11137 /* s_store_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 11151 /* s_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11151 /* s_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11151 /* s_store_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 11167 /* s_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11167 /* s_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11167 /* s_store_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN, 11247 /* s_waitcnt */, MCK_SWaitCnt, 1 /* 0 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11367 /* scratch_load_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11367 /* scratch_load_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11367 /* scratch_load_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11367 /* scratch_load_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11367 /* scratch_load_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11367 /* scratch_load_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11386 /* scratch_load_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11386 /* scratch_load_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11386 /* scratch_load_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11386 /* scratch_load_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11386 /* scratch_load_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11386 /* scratch_load_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11407 /* scratch_load_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11407 /* scratch_load_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11407 /* scratch_load_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11407 /* scratch_load_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11407 /* scratch_load_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11407 /* scratch_load_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11428 /* scratch_load_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11428 /* scratch_load_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11428 /* scratch_load_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11428 /* scratch_load_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11428 /* scratch_load_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11428 /* scratch_load_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11449 /* scratch_load_sbyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11449 /* scratch_load_sbyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11449 /* scratch_load_sbyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11449 /* scratch_load_sbyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11449 /* scratch_load_sbyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11449 /* scratch_load_sbyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11468 /* scratch_load_sbyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11468 /* scratch_load_sbyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11468 /* scratch_load_sbyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11468 /* scratch_load_sbyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11468 /* scratch_load_sbyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11468 /* scratch_load_sbyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11491 /* scratch_load_sbyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11491 /* scratch_load_sbyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11491 /* scratch_load_sbyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11491 /* scratch_load_sbyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11491 /* scratch_load_sbyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11491 /* scratch_load_sbyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11517 /* scratch_load_short_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11517 /* scratch_load_short_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11517 /* scratch_load_short_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11517 /* scratch_load_short_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11517 /* scratch_load_short_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11517 /* scratch_load_short_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11540 /* scratch_load_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11540 /* scratch_load_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11540 /* scratch_load_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11540 /* scratch_load_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11540 /* scratch_load_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11540 /* scratch_load_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11566 /* scratch_load_sshort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11566 /* scratch_load_sshort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11566 /* scratch_load_sshort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11566 /* scratch_load_sshort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11566 /* scratch_load_sshort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11566 /* scratch_load_sshort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11586 /* scratch_load_ubyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11586 /* scratch_load_ubyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11586 /* scratch_load_ubyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11586 /* scratch_load_ubyte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11586 /* scratch_load_ubyte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11586 /* scratch_load_ubyte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11605 /* scratch_load_ubyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11605 /* scratch_load_ubyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11605 /* scratch_load_ubyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11605 /* scratch_load_ubyte_d16 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11605 /* scratch_load_ubyte_d16 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11605 /* scratch_load_ubyte_d16 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11628 /* scratch_load_ubyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11628 /* scratch_load_ubyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11628 /* scratch_load_ubyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11628 /* scratch_load_ubyte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11628 /* scratch_load_ubyte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11628 /* scratch_load_ubyte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11654 /* scratch_load_ushort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11654 /* scratch_load_ushort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11654 /* scratch_load_ushort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11654 /* scratch_load_ushort */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11654 /* scratch_load_ushort */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11654 /* scratch_load_ushort */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11674 /* scratch_store_byte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11674 /* scratch_store_byte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11674 /* scratch_store_byte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11674 /* scratch_store_byte */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11674 /* scratch_store_byte */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11674 /* scratch_store_byte */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11693 /* scratch_store_byte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11693 /* scratch_store_byte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11693 /* scratch_store_byte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11693 /* scratch_store_byte_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11693 /* scratch_store_byte_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11693 /* scratch_store_byte_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11719 /* scratch_store_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11719 /* scratch_store_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11719 /* scratch_store_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11719 /* scratch_store_dword */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11719 /* scratch_store_dword */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11719 /* scratch_store_dword */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11739 /* scratch_store_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11739 /* scratch_store_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11739 /* scratch_store_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11739 /* scratch_store_dwordx2 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11739 /* scratch_store_dwordx2 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11739 /* scratch_store_dwordx2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11761 /* scratch_store_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11761 /* scratch_store_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11761 /* scratch_store_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11761 /* scratch_store_dwordx3 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11761 /* scratch_store_dwordx3 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11761 /* scratch_store_dwordx3 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11783 /* scratch_store_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11783 /* scratch_store_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11783 /* scratch_store_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11783 /* scratch_store_dwordx4 */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11783 /* scratch_store_dwordx4 */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11783 /* scratch_store_dwordx4 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11805 /* scratch_store_short */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11805 /* scratch_store_short */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11805 /* scratch_store_short */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11805 /* scratch_store_short */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11805 /* scratch_store_short */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11805 /* scratch_store_short */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11825 /* scratch_store_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11825 /* scratch_store_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11825 /* scratch_store_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11825 /* scratch_store_short_d16_hi */, MCK_ImmOffsetS13, 8 /* 3 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11825 /* scratch_store_short_d16_hi */, MCK_ImmGLC, 16 /* 4 */ },
  { Feature_HasFlatScratchInsts|Feature_isVI, 11825 /* scratch_store_short_d16_hi */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11852 /* tbuffer_load_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11878 /* tbuffer_load_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11905 /* tbuffer_load_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 11933 /* tbuffer_load_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 11962 /* tbuffer_load_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 11984 /* tbuffer_load_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 12007 /* tbuffer_load_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 12031 /* tbuffer_load_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12056 /* tbuffer_store_format_d16_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12083 /* tbuffer_store_format_d16_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12111 /* tbuffer_store_format_d16_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasUnpackedD16VMem|Feature_HasUnpackedD16VMem, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_HasPackedD16VMem|Feature_isVI, 12140 /* tbuffer_store_format_d16_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 12170 /* tbuffer_store_format_x */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 12193 /* tbuffer_store_format_xy */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 12217 /* tbuffer_store_format_xyz */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmOffset, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmGLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmSLC, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmTFE, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 12242 /* tbuffer_store_format_xyzw */, MCK_ImmFORMAT, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12279 /* v_add_co_u32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12292 /* v_add_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12292 /* v_add_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12292 /* v_add_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12292 /* v_add_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12292 /* v_add_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12292 /* v_add_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12292 /* v_add_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12292 /* v_add_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12292 /* v_add_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12292 /* v_add_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12292 /* v_add_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12292 /* v_add_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12292 /* v_add_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12292 /* v_add_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12292 /* v_add_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12302 /* v_add_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 12302 /* v_add_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 12302 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12302 /* v_add_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 12302 /* v_add_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 12302 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 12302 /* v_add_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 12302 /* v_add_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 12302 /* v_add_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 12302 /* v_add_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 12302 /* v_add_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 12302 /* v_add_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 12302 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 12302 /* v_add_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 12302 /* v_add_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 12302 /* v_add_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 12302 /* v_add_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12302 /* v_add_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 12312 /* v_add_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 12312 /* v_add_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 12312 /* v_add_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12312 /* v_add_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 12312 /* v_add_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 12312 /* v_add_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGFX9|Feature_isVI, 12322 /* v_add_i16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 12322 /* v_add_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12357 /* v_add_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12357 /* v_add_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12357 /* v_add_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12357 /* v_add_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12357 /* v_add_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12357 /* v_add_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12357 /* v_add_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12357 /* v_add_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12357 /* v_add_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12357 /* v_add_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12357 /* v_add_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12357 /* v_add_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12357 /* v_add_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12357 /* v_add_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12357 /* v_add_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12357 /* v_add_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12367 /* v_add_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12367 /* v_add_u32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 12377 /* v_addc_co_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 12391 /* v_addc_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP, 12433 /* v_and_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 12433 /* v_and_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 12433 /* v_and_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 12433 /* v_and_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 12433 /* v_and_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 12433 /* v_and_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 12433 /* v_and_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 12433 /* v_and_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 12433 /* v_and_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 12433 /* v_and_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12433 /* v_and_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12433 /* v_and_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12433 /* v_and_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12433 /* v_and_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12433 /* v_and_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12433 /* v_and_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12478 /* v_ashrrev_i16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12478 /* v_ashrrev_i16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12478 /* v_ashrrev_i16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12478 /* v_ashrrev_i16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12478 /* v_ashrrev_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12478 /* v_ashrrev_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12478 /* v_ashrrev_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12478 /* v_ashrrev_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12478 /* v_ashrrev_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 12492 /* v_ashrrev_i32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 12492 /* v_ashrrev_i32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 12492 /* v_ashrrev_i32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 12492 /* v_ashrrev_i32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 12492 /* v_ashrrev_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 12492 /* v_ashrrev_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12492 /* v_ashrrev_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12492 /* v_ashrrev_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12492 /* v_ashrrev_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasDPP|Feature_HasDPP, 12575 /* v_bfrev_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 12575 /* v_bfrev_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 12575 /* v_bfrev_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 12575 /* v_bfrev_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12575 /* v_bfrev_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12575 /* v_bfrev_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12575 /* v_bfrev_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12575 /* v_bfrev_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12575 /* v_bfrev_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12575 /* v_bfrev_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12575 /* v_bfrev_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12575 /* v_bfrev_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12575 /* v_bfrev_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12575 /* v_bfrev_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12587 /* v_ceil_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12587 /* v_ceil_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12587 /* v_ceil_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12587 /* v_ceil_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12587 /* v_ceil_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12587 /* v_ceil_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12587 /* v_ceil_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12587 /* v_ceil_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12587 /* v_ceil_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12587 /* v_ceil_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12587 /* v_ceil_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12587 /* v_ceil_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 12587 /* v_ceil_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12587 /* v_ceil_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12587 /* v_ceil_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12587 /* v_ceil_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12587 /* v_ceil_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12587 /* v_ceil_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12587 /* v_ceil_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12598 /* v_ceil_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 12598 /* v_ceil_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 12598 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 12598 /* v_ceil_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 12598 /* v_ceil_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12598 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12598 /* v_ceil_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12598 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12598 /* v_ceil_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12598 /* v_ceil_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12598 /* v_ceil_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 12598 /* v_ceil_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 12598 /* v_ceil_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 12598 /* v_ceil_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 12598 /* v_ceil_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 12598 /* v_ceil_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12598 /* v_ceil_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12598 /* v_ceil_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12598 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12598 /* v_ceil_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12598 /* v_ceil_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12598 /* v_ceil_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 12609 /* v_ceil_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 12609 /* v_ceil_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 12609 /* v_ceil_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 12609 /* v_ceil_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 12609 /* v_ceil_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 12609 /* v_ceil_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 12630 /* v_cmp_class_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12630 /* v_cmp_class_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12630 /* v_cmp_class_f16 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12630 /* v_cmp_class_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12630 /* v_cmp_class_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12630 /* v_cmp_class_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12630 /* v_cmp_class_f16 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12630 /* v_cmp_class_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12630 /* v_cmp_class_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12630 /* v_cmp_class_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12666 /* v_cmp_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 12666 /* v_cmp_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12666 /* v_cmp_class_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12666 /* v_cmp_class_f32 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12666 /* v_cmp_class_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12666 /* v_cmp_class_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12666 /* v_cmp_class_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12666 /* v_cmp_class_f32 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12666 /* v_cmp_class_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12666 /* v_cmp_class_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12666 /* v_cmp_class_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12702 /* v_cmp_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 12702 /* v_cmp_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12738 /* v_cmp_eq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 12738 /* v_cmp_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12738 /* v_cmp_eq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12738 /* v_cmp_eq_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12738 /* v_cmp_eq_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12738 /* v_cmp_eq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12738 /* v_cmp_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12738 /* v_cmp_eq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12738 /* v_cmp_eq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12768 /* v_cmp_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 12768 /* v_cmp_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12768 /* v_cmp_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 12768 /* v_cmp_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12768 /* v_cmp_eq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12768 /* v_cmp_eq_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12768 /* v_cmp_eq_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12768 /* v_cmp_eq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12768 /* v_cmp_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12768 /* v_cmp_eq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12768 /* v_cmp_eq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 12798 /* v_cmp_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 12798 /* v_cmp_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 12798 /* v_cmp_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 12798 /* v_cmp_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12828 /* v_cmp_eq_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12828 /* v_cmp_eq_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12828 /* v_cmp_eq_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12828 /* v_cmp_eq_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12828 /* v_cmp_eq_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12828 /* v_cmp_eq_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12828 /* v_cmp_eq_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12858 /* v_cmp_eq_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12858 /* v_cmp_eq_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12858 /* v_cmp_eq_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12858 /* v_cmp_eq_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12858 /* v_cmp_eq_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12858 /* v_cmp_eq_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12858 /* v_cmp_eq_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12918 /* v_cmp_eq_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12918 /* v_cmp_eq_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12918 /* v_cmp_eq_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12918 /* v_cmp_eq_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12918 /* v_cmp_eq_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12918 /* v_cmp_eq_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 12918 /* v_cmp_eq_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12948 /* v_cmp_eq_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12948 /* v_cmp_eq_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 12948 /* v_cmp_eq_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12948 /* v_cmp_eq_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12948 /* v_cmp_eq_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12948 /* v_cmp_eq_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 12948 /* v_cmp_eq_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13008 /* v_cmp_f_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13008 /* v_cmp_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13008 /* v_cmp_f_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13008 /* v_cmp_f_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13008 /* v_cmp_f_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13008 /* v_cmp_f_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13008 /* v_cmp_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13008 /* v_cmp_f_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13008 /* v_cmp_f_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13036 /* v_cmp_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13036 /* v_cmp_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13036 /* v_cmp_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13036 /* v_cmp_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13036 /* v_cmp_f_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13036 /* v_cmp_f_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13036 /* v_cmp_f_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13036 /* v_cmp_f_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13036 /* v_cmp_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13036 /* v_cmp_f_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13036 /* v_cmp_f_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13064 /* v_cmp_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13064 /* v_cmp_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13064 /* v_cmp_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13064 /* v_cmp_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13092 /* v_cmp_f_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13092 /* v_cmp_f_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13092 /* v_cmp_f_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13092 /* v_cmp_f_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13092 /* v_cmp_f_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13092 /* v_cmp_f_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13092 /* v_cmp_f_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13120 /* v_cmp_f_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13120 /* v_cmp_f_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13120 /* v_cmp_f_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13120 /* v_cmp_f_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13120 /* v_cmp_f_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13120 /* v_cmp_f_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13120 /* v_cmp_f_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13176 /* v_cmp_f_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13176 /* v_cmp_f_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13176 /* v_cmp_f_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13176 /* v_cmp_f_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13176 /* v_cmp_f_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13176 /* v_cmp_f_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13176 /* v_cmp_f_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13204 /* v_cmp_f_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13204 /* v_cmp_f_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13204 /* v_cmp_f_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13204 /* v_cmp_f_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13204 /* v_cmp_f_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13204 /* v_cmp_f_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13204 /* v_cmp_f_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13260 /* v_cmp_ge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13260 /* v_cmp_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13260 /* v_cmp_ge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13260 /* v_cmp_ge_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13260 /* v_cmp_ge_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13260 /* v_cmp_ge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13260 /* v_cmp_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13260 /* v_cmp_ge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13260 /* v_cmp_ge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13290 /* v_cmp_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13290 /* v_cmp_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13290 /* v_cmp_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13290 /* v_cmp_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13290 /* v_cmp_ge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13290 /* v_cmp_ge_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13290 /* v_cmp_ge_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13290 /* v_cmp_ge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13290 /* v_cmp_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13290 /* v_cmp_ge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13290 /* v_cmp_ge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13320 /* v_cmp_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13320 /* v_cmp_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13320 /* v_cmp_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13320 /* v_cmp_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13350 /* v_cmp_ge_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13350 /* v_cmp_ge_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13350 /* v_cmp_ge_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13350 /* v_cmp_ge_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13350 /* v_cmp_ge_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13350 /* v_cmp_ge_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13350 /* v_cmp_ge_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13380 /* v_cmp_ge_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13380 /* v_cmp_ge_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13380 /* v_cmp_ge_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13380 /* v_cmp_ge_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13380 /* v_cmp_ge_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13380 /* v_cmp_ge_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13380 /* v_cmp_ge_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13440 /* v_cmp_ge_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13440 /* v_cmp_ge_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13440 /* v_cmp_ge_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13440 /* v_cmp_ge_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13440 /* v_cmp_ge_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13440 /* v_cmp_ge_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13440 /* v_cmp_ge_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13470 /* v_cmp_ge_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13470 /* v_cmp_ge_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13470 /* v_cmp_ge_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13470 /* v_cmp_ge_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13470 /* v_cmp_ge_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13470 /* v_cmp_ge_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13470 /* v_cmp_ge_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13530 /* v_cmp_gt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13530 /* v_cmp_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13530 /* v_cmp_gt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13530 /* v_cmp_gt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13530 /* v_cmp_gt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13530 /* v_cmp_gt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13530 /* v_cmp_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13530 /* v_cmp_gt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13530 /* v_cmp_gt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13560 /* v_cmp_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13560 /* v_cmp_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13560 /* v_cmp_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13560 /* v_cmp_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13560 /* v_cmp_gt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13560 /* v_cmp_gt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13560 /* v_cmp_gt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13560 /* v_cmp_gt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13560 /* v_cmp_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13560 /* v_cmp_gt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13560 /* v_cmp_gt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13590 /* v_cmp_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13590 /* v_cmp_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13590 /* v_cmp_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13590 /* v_cmp_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13620 /* v_cmp_gt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13620 /* v_cmp_gt_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13620 /* v_cmp_gt_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13620 /* v_cmp_gt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13620 /* v_cmp_gt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13620 /* v_cmp_gt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13620 /* v_cmp_gt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13650 /* v_cmp_gt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13650 /* v_cmp_gt_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13650 /* v_cmp_gt_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13650 /* v_cmp_gt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13650 /* v_cmp_gt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13650 /* v_cmp_gt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13650 /* v_cmp_gt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13710 /* v_cmp_gt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13710 /* v_cmp_gt_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13710 /* v_cmp_gt_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13710 /* v_cmp_gt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13710 /* v_cmp_gt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13710 /* v_cmp_gt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13710 /* v_cmp_gt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13740 /* v_cmp_gt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13740 /* v_cmp_gt_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13740 /* v_cmp_gt_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13740 /* v_cmp_gt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13740 /* v_cmp_gt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13740 /* v_cmp_gt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13740 /* v_cmp_gt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13800 /* v_cmp_le_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 13800 /* v_cmp_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13800 /* v_cmp_le_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13800 /* v_cmp_le_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13800 /* v_cmp_le_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13800 /* v_cmp_le_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13800 /* v_cmp_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13800 /* v_cmp_le_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13800 /* v_cmp_le_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13830 /* v_cmp_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13830 /* v_cmp_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13830 /* v_cmp_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13830 /* v_cmp_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13830 /* v_cmp_le_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13830 /* v_cmp_le_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13830 /* v_cmp_le_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13830 /* v_cmp_le_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13830 /* v_cmp_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13830 /* v_cmp_le_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13830 /* v_cmp_le_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13860 /* v_cmp_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13860 /* v_cmp_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13860 /* v_cmp_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13860 /* v_cmp_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13890 /* v_cmp_le_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13890 /* v_cmp_le_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13890 /* v_cmp_le_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13890 /* v_cmp_le_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13890 /* v_cmp_le_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13890 /* v_cmp_le_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13890 /* v_cmp_le_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13920 /* v_cmp_le_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13920 /* v_cmp_le_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13920 /* v_cmp_le_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13920 /* v_cmp_le_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13920 /* v_cmp_le_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13920 /* v_cmp_le_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 13920 /* v_cmp_le_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13980 /* v_cmp_le_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13980 /* v_cmp_le_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 13980 /* v_cmp_le_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13980 /* v_cmp_le_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13980 /* v_cmp_le_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13980 /* v_cmp_le_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 13980 /* v_cmp_le_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14010 /* v_cmp_le_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14010 /* v_cmp_le_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14010 /* v_cmp_le_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14010 /* v_cmp_le_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14010 /* v_cmp_le_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14010 /* v_cmp_le_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14010 /* v_cmp_le_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14070 /* v_cmp_lg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14070 /* v_cmp_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14070 /* v_cmp_lg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14070 /* v_cmp_lg_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14070 /* v_cmp_lg_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14070 /* v_cmp_lg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14070 /* v_cmp_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14070 /* v_cmp_lg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14070 /* v_cmp_lg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14100 /* v_cmp_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14100 /* v_cmp_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14100 /* v_cmp_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14100 /* v_cmp_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14100 /* v_cmp_lg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14100 /* v_cmp_lg_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14100 /* v_cmp_lg_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14100 /* v_cmp_lg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14100 /* v_cmp_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14100 /* v_cmp_lg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14100 /* v_cmp_lg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14130 /* v_cmp_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14130 /* v_cmp_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14130 /* v_cmp_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14130 /* v_cmp_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14160 /* v_cmp_lt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14160 /* v_cmp_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14160 /* v_cmp_lt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14160 /* v_cmp_lt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14160 /* v_cmp_lt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14160 /* v_cmp_lt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14160 /* v_cmp_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14160 /* v_cmp_lt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14160 /* v_cmp_lt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14190 /* v_cmp_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14190 /* v_cmp_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14190 /* v_cmp_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14190 /* v_cmp_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14190 /* v_cmp_lt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14190 /* v_cmp_lt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14190 /* v_cmp_lt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14190 /* v_cmp_lt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14190 /* v_cmp_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14190 /* v_cmp_lt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14190 /* v_cmp_lt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14220 /* v_cmp_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14220 /* v_cmp_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14220 /* v_cmp_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14220 /* v_cmp_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14250 /* v_cmp_lt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14250 /* v_cmp_lt_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14250 /* v_cmp_lt_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14250 /* v_cmp_lt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14250 /* v_cmp_lt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14250 /* v_cmp_lt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14250 /* v_cmp_lt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14280 /* v_cmp_lt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14280 /* v_cmp_lt_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14280 /* v_cmp_lt_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14280 /* v_cmp_lt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14280 /* v_cmp_lt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14280 /* v_cmp_lt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14280 /* v_cmp_lt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14340 /* v_cmp_lt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14340 /* v_cmp_lt_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14340 /* v_cmp_lt_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14340 /* v_cmp_lt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14340 /* v_cmp_lt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14340 /* v_cmp_lt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14340 /* v_cmp_lt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14370 /* v_cmp_lt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14370 /* v_cmp_lt_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14370 /* v_cmp_lt_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14370 /* v_cmp_lt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14370 /* v_cmp_lt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14370 /* v_cmp_lt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14370 /* v_cmp_lt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14430 /* v_cmp_ne_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14430 /* v_cmp_ne_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14430 /* v_cmp_ne_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14430 /* v_cmp_ne_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14430 /* v_cmp_ne_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14430 /* v_cmp_ne_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14430 /* v_cmp_ne_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14460 /* v_cmp_ne_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14460 /* v_cmp_ne_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14460 /* v_cmp_ne_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14460 /* v_cmp_ne_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14460 /* v_cmp_ne_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14460 /* v_cmp_ne_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14460 /* v_cmp_ne_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14520 /* v_cmp_ne_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14520 /* v_cmp_ne_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14520 /* v_cmp_ne_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14520 /* v_cmp_ne_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14520 /* v_cmp_ne_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14520 /* v_cmp_ne_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14520 /* v_cmp_ne_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14550 /* v_cmp_ne_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14550 /* v_cmp_ne_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14550 /* v_cmp_ne_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14550 /* v_cmp_ne_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14550 /* v_cmp_ne_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14550 /* v_cmp_ne_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14550 /* v_cmp_ne_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14610 /* v_cmp_neq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14610 /* v_cmp_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14610 /* v_cmp_neq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14610 /* v_cmp_neq_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14610 /* v_cmp_neq_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14610 /* v_cmp_neq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14610 /* v_cmp_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14610 /* v_cmp_neq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14610 /* v_cmp_neq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14642 /* v_cmp_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14642 /* v_cmp_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14642 /* v_cmp_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14642 /* v_cmp_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14642 /* v_cmp_neq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14642 /* v_cmp_neq_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14642 /* v_cmp_neq_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14642 /* v_cmp_neq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14642 /* v_cmp_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14642 /* v_cmp_neq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14642 /* v_cmp_neq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14674 /* v_cmp_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14674 /* v_cmp_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14674 /* v_cmp_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14674 /* v_cmp_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14706 /* v_cmp_nge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14706 /* v_cmp_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14706 /* v_cmp_nge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14706 /* v_cmp_nge_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14706 /* v_cmp_nge_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14706 /* v_cmp_nge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14706 /* v_cmp_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14706 /* v_cmp_nge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14706 /* v_cmp_nge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14738 /* v_cmp_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14738 /* v_cmp_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14738 /* v_cmp_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14738 /* v_cmp_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14738 /* v_cmp_nge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14738 /* v_cmp_nge_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14738 /* v_cmp_nge_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14738 /* v_cmp_nge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14738 /* v_cmp_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14738 /* v_cmp_nge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14738 /* v_cmp_nge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14770 /* v_cmp_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14770 /* v_cmp_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14770 /* v_cmp_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14770 /* v_cmp_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14802 /* v_cmp_ngt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14802 /* v_cmp_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14802 /* v_cmp_ngt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14802 /* v_cmp_ngt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14802 /* v_cmp_ngt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14802 /* v_cmp_ngt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14802 /* v_cmp_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14802 /* v_cmp_ngt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14802 /* v_cmp_ngt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14834 /* v_cmp_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14834 /* v_cmp_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14834 /* v_cmp_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14834 /* v_cmp_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14834 /* v_cmp_ngt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14834 /* v_cmp_ngt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14834 /* v_cmp_ngt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14834 /* v_cmp_ngt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14834 /* v_cmp_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14834 /* v_cmp_ngt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14834 /* v_cmp_ngt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14866 /* v_cmp_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14866 /* v_cmp_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14866 /* v_cmp_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14866 /* v_cmp_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14898 /* v_cmp_nle_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14898 /* v_cmp_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14898 /* v_cmp_nle_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14898 /* v_cmp_nle_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14898 /* v_cmp_nle_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14898 /* v_cmp_nle_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14898 /* v_cmp_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14898 /* v_cmp_nle_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14898 /* v_cmp_nle_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14930 /* v_cmp_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14930 /* v_cmp_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14930 /* v_cmp_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14930 /* v_cmp_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14930 /* v_cmp_nle_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14930 /* v_cmp_nle_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14930 /* v_cmp_nle_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14930 /* v_cmp_nle_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14930 /* v_cmp_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14930 /* v_cmp_nle_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 14930 /* v_cmp_nle_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14962 /* v_cmp_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14962 /* v_cmp_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14962 /* v_cmp_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14962 /* v_cmp_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14994 /* v_cmp_nlg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 14994 /* v_cmp_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14994 /* v_cmp_nlg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14994 /* v_cmp_nlg_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 14994 /* v_cmp_nlg_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14994 /* v_cmp_nlg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14994 /* v_cmp_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14994 /* v_cmp_nlg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 14994 /* v_cmp_nlg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15026 /* v_cmp_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15026 /* v_cmp_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15026 /* v_cmp_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15026 /* v_cmp_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15026 /* v_cmp_nlg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15026 /* v_cmp_nlg_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15026 /* v_cmp_nlg_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15026 /* v_cmp_nlg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15026 /* v_cmp_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15026 /* v_cmp_nlg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15026 /* v_cmp_nlg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15058 /* v_cmp_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15058 /* v_cmp_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15058 /* v_cmp_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15058 /* v_cmp_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15090 /* v_cmp_nlt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15090 /* v_cmp_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15090 /* v_cmp_nlt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15090 /* v_cmp_nlt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15090 /* v_cmp_nlt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15090 /* v_cmp_nlt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15090 /* v_cmp_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15090 /* v_cmp_nlt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15090 /* v_cmp_nlt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15122 /* v_cmp_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15122 /* v_cmp_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15122 /* v_cmp_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15122 /* v_cmp_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15122 /* v_cmp_nlt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15122 /* v_cmp_nlt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15122 /* v_cmp_nlt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15122 /* v_cmp_nlt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15122 /* v_cmp_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15122 /* v_cmp_nlt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15122 /* v_cmp_nlt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15154 /* v_cmp_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15154 /* v_cmp_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15154 /* v_cmp_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15154 /* v_cmp_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15186 /* v_cmp_o_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15186 /* v_cmp_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15186 /* v_cmp_o_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15186 /* v_cmp_o_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15186 /* v_cmp_o_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15186 /* v_cmp_o_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15186 /* v_cmp_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15186 /* v_cmp_o_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15186 /* v_cmp_o_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15214 /* v_cmp_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15214 /* v_cmp_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15214 /* v_cmp_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15214 /* v_cmp_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15214 /* v_cmp_o_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15214 /* v_cmp_o_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15214 /* v_cmp_o_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15214 /* v_cmp_o_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15214 /* v_cmp_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15214 /* v_cmp_o_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15214 /* v_cmp_o_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15242 /* v_cmp_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15242 /* v_cmp_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15242 /* v_cmp_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15242 /* v_cmp_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15270 /* v_cmp_t_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15270 /* v_cmp_t_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15270 /* v_cmp_t_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15270 /* v_cmp_t_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15270 /* v_cmp_t_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15270 /* v_cmp_t_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15270 /* v_cmp_t_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15298 /* v_cmp_t_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15298 /* v_cmp_t_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15298 /* v_cmp_t_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15298 /* v_cmp_t_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15298 /* v_cmp_t_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15298 /* v_cmp_t_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15298 /* v_cmp_t_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15354 /* v_cmp_t_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15354 /* v_cmp_t_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15354 /* v_cmp_t_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15354 /* v_cmp_t_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15354 /* v_cmp_t_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15354 /* v_cmp_t_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15354 /* v_cmp_t_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15382 /* v_cmp_t_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15382 /* v_cmp_t_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15382 /* v_cmp_t_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15382 /* v_cmp_t_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15382 /* v_cmp_t_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15382 /* v_cmp_t_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15382 /* v_cmp_t_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15438 /* v_cmp_tru_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15438 /* v_cmp_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15438 /* v_cmp_tru_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15438 /* v_cmp_tru_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15438 /* v_cmp_tru_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15438 /* v_cmp_tru_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15438 /* v_cmp_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15438 /* v_cmp_tru_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15438 /* v_cmp_tru_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15470 /* v_cmp_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15470 /* v_cmp_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15470 /* v_cmp_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15470 /* v_cmp_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15470 /* v_cmp_tru_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15470 /* v_cmp_tru_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15470 /* v_cmp_tru_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15470 /* v_cmp_tru_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15470 /* v_cmp_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15470 /* v_cmp_tru_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15470 /* v_cmp_tru_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15502 /* v_cmp_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15502 /* v_cmp_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15502 /* v_cmp_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15502 /* v_cmp_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15534 /* v_cmp_u_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 15534 /* v_cmp_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15534 /* v_cmp_u_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15534 /* v_cmp_u_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15534 /* v_cmp_u_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15534 /* v_cmp_u_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15534 /* v_cmp_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15534 /* v_cmp_u_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 15534 /* v_cmp_u_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15562 /* v_cmp_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15562 /* v_cmp_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15562 /* v_cmp_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15562 /* v_cmp_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15562 /* v_cmp_u_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15562 /* v_cmp_u_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 15562 /* v_cmp_u_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15562 /* v_cmp_u_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15562 /* v_cmp_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15562 /* v_cmp_u_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 15562 /* v_cmp_u_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15590 /* v_cmp_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15590 /* v_cmp_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15590 /* v_cmp_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15590 /* v_cmp_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15618 /* v_cmps_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15618 /* v_cmps_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15650 /* v_cmps_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15650 /* v_cmps_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15682 /* v_cmps_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15682 /* v_cmps_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15712 /* v_cmps_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15712 /* v_cmps_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15742 /* v_cmps_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15742 /* v_cmps_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15774 /* v_cmps_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15774 /* v_cmps_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15806 /* v_cmps_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15806 /* v_cmps_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15838 /* v_cmps_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15838 /* v_cmps_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15870 /* v_cmps_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15870 /* v_cmps_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15902 /* v_cmps_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15902 /* v_cmps_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15934 /* v_cmps_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15934 /* v_cmps_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15966 /* v_cmps_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15966 /* v_cmps_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 15998 /* v_cmps_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 15998 /* v_cmps_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16030 /* v_cmps_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16030 /* v_cmps_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16062 /* v_cmps_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16062 /* v_cmps_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16096 /* v_cmps_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16096 /* v_cmps_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16130 /* v_cmps_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16130 /* v_cmps_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16164 /* v_cmps_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16164 /* v_cmps_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16198 /* v_cmps_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16198 /* v_cmps_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16232 /* v_cmps_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16232 /* v_cmps_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16266 /* v_cmps_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16266 /* v_cmps_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16300 /* v_cmps_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16300 /* v_cmps_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16334 /* v_cmps_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16334 /* v_cmps_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16368 /* v_cmps_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16368 /* v_cmps_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16402 /* v_cmps_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16402 /* v_cmps_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16436 /* v_cmps_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16436 /* v_cmps_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16470 /* v_cmps_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16470 /* v_cmps_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16500 /* v_cmps_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16500 /* v_cmps_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16530 /* v_cmps_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16530 /* v_cmps_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16564 /* v_cmps_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16564 /* v_cmps_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16598 /* v_cmps_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16598 /* v_cmps_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16628 /* v_cmps_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16628 /* v_cmps_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16658 /* v_cmpsx_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16658 /* v_cmpsx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16692 /* v_cmpsx_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16692 /* v_cmpsx_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16726 /* v_cmpsx_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16726 /* v_cmpsx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16758 /* v_cmpsx_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16758 /* v_cmpsx_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16790 /* v_cmpsx_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16790 /* v_cmpsx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16824 /* v_cmpsx_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16824 /* v_cmpsx_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16858 /* v_cmpsx_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16858 /* v_cmpsx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16892 /* v_cmpsx_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16892 /* v_cmpsx_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16926 /* v_cmpsx_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16926 /* v_cmpsx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16960 /* v_cmpsx_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16960 /* v_cmpsx_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 16994 /* v_cmpsx_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 16994 /* v_cmpsx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17028 /* v_cmpsx_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17028 /* v_cmpsx_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17062 /* v_cmpsx_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17062 /* v_cmpsx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17096 /* v_cmpsx_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17096 /* v_cmpsx_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17130 /* v_cmpsx_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17130 /* v_cmpsx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17166 /* v_cmpsx_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17166 /* v_cmpsx_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17202 /* v_cmpsx_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17202 /* v_cmpsx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17238 /* v_cmpsx_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17238 /* v_cmpsx_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17274 /* v_cmpsx_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17274 /* v_cmpsx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17310 /* v_cmpsx_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17310 /* v_cmpsx_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17346 /* v_cmpsx_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17346 /* v_cmpsx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17382 /* v_cmpsx_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17382 /* v_cmpsx_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17418 /* v_cmpsx_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17418 /* v_cmpsx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17454 /* v_cmpsx_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17454 /* v_cmpsx_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17490 /* v_cmpsx_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17490 /* v_cmpsx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17526 /* v_cmpsx_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17526 /* v_cmpsx_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17562 /* v_cmpsx_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17562 /* v_cmpsx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17594 /* v_cmpsx_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17594 /* v_cmpsx_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17626 /* v_cmpsx_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17626 /* v_cmpsx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17662 /* v_cmpsx_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17662 /* v_cmpsx_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17698 /* v_cmpsx_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17698 /* v_cmpsx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17730 /* v_cmpsx_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17730 /* v_cmpsx_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17762 /* v_cmpx_class_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17762 /* v_cmpx_class_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17762 /* v_cmpx_class_f16 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17762 /* v_cmpx_class_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17762 /* v_cmpx_class_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17762 /* v_cmpx_class_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17762 /* v_cmpx_class_f16 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17762 /* v_cmpx_class_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17762 /* v_cmpx_class_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17762 /* v_cmpx_class_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17800 /* v_cmpx_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17800 /* v_cmpx_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17800 /* v_cmpx_class_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17800 /* v_cmpx_class_f32 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17800 /* v_cmpx_class_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17800 /* v_cmpx_class_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17800 /* v_cmpx_class_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17800 /* v_cmpx_class_f32 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17800 /* v_cmpx_class_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17800 /* v_cmpx_class_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17800 /* v_cmpx_class_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17838 /* v_cmpx_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17838 /* v_cmpx_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 17876 /* v_cmpx_eq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 17876 /* v_cmpx_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17876 /* v_cmpx_eq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17876 /* v_cmpx_eq_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17876 /* v_cmpx_eq_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17876 /* v_cmpx_eq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17876 /* v_cmpx_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17876 /* v_cmpx_eq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17876 /* v_cmpx_eq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17908 /* v_cmpx_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 17908 /* v_cmpx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17908 /* v_cmpx_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17908 /* v_cmpx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17908 /* v_cmpx_eq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17908 /* v_cmpx_eq_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17908 /* v_cmpx_eq_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17908 /* v_cmpx_eq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17908 /* v_cmpx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17908 /* v_cmpx_eq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 17908 /* v_cmpx_eq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17940 /* v_cmpx_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 17940 /* v_cmpx_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17940 /* v_cmpx_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17940 /* v_cmpx_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17972 /* v_cmpx_eq_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17972 /* v_cmpx_eq_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 17972 /* v_cmpx_eq_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17972 /* v_cmpx_eq_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17972 /* v_cmpx_eq_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17972 /* v_cmpx_eq_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 17972 /* v_cmpx_eq_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18004 /* v_cmpx_eq_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18004 /* v_cmpx_eq_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18004 /* v_cmpx_eq_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18004 /* v_cmpx_eq_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18004 /* v_cmpx_eq_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18004 /* v_cmpx_eq_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18004 /* v_cmpx_eq_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18068 /* v_cmpx_eq_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18068 /* v_cmpx_eq_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18068 /* v_cmpx_eq_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18068 /* v_cmpx_eq_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18068 /* v_cmpx_eq_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18068 /* v_cmpx_eq_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18068 /* v_cmpx_eq_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18100 /* v_cmpx_eq_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18100 /* v_cmpx_eq_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18100 /* v_cmpx_eq_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18100 /* v_cmpx_eq_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18100 /* v_cmpx_eq_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18100 /* v_cmpx_eq_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18100 /* v_cmpx_eq_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 18164 /* v_cmpx_f_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 18164 /* v_cmpx_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18164 /* v_cmpx_f_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18164 /* v_cmpx_f_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18164 /* v_cmpx_f_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18164 /* v_cmpx_f_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18164 /* v_cmpx_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18164 /* v_cmpx_f_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18164 /* v_cmpx_f_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18194 /* v_cmpx_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18194 /* v_cmpx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18194 /* v_cmpx_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18194 /* v_cmpx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18194 /* v_cmpx_f_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18194 /* v_cmpx_f_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18194 /* v_cmpx_f_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18194 /* v_cmpx_f_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18194 /* v_cmpx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18194 /* v_cmpx_f_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18194 /* v_cmpx_f_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18224 /* v_cmpx_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18224 /* v_cmpx_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18224 /* v_cmpx_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18224 /* v_cmpx_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18254 /* v_cmpx_f_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18254 /* v_cmpx_f_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18254 /* v_cmpx_f_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18254 /* v_cmpx_f_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18254 /* v_cmpx_f_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18254 /* v_cmpx_f_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18254 /* v_cmpx_f_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18284 /* v_cmpx_f_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18284 /* v_cmpx_f_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18284 /* v_cmpx_f_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18284 /* v_cmpx_f_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18284 /* v_cmpx_f_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18284 /* v_cmpx_f_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18284 /* v_cmpx_f_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18344 /* v_cmpx_f_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18344 /* v_cmpx_f_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18344 /* v_cmpx_f_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18344 /* v_cmpx_f_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18344 /* v_cmpx_f_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18344 /* v_cmpx_f_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18344 /* v_cmpx_f_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18374 /* v_cmpx_f_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18374 /* v_cmpx_f_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18374 /* v_cmpx_f_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18374 /* v_cmpx_f_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18374 /* v_cmpx_f_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18374 /* v_cmpx_f_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18374 /* v_cmpx_f_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 18434 /* v_cmpx_ge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 18434 /* v_cmpx_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18434 /* v_cmpx_ge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18434 /* v_cmpx_ge_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18434 /* v_cmpx_ge_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18434 /* v_cmpx_ge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18434 /* v_cmpx_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18434 /* v_cmpx_ge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18434 /* v_cmpx_ge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18466 /* v_cmpx_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18466 /* v_cmpx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18466 /* v_cmpx_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18466 /* v_cmpx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18466 /* v_cmpx_ge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18466 /* v_cmpx_ge_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18466 /* v_cmpx_ge_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18466 /* v_cmpx_ge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18466 /* v_cmpx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18466 /* v_cmpx_ge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18466 /* v_cmpx_ge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18498 /* v_cmpx_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18498 /* v_cmpx_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18498 /* v_cmpx_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18498 /* v_cmpx_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18530 /* v_cmpx_ge_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18530 /* v_cmpx_ge_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18530 /* v_cmpx_ge_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18530 /* v_cmpx_ge_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18530 /* v_cmpx_ge_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18530 /* v_cmpx_ge_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18530 /* v_cmpx_ge_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18562 /* v_cmpx_ge_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18562 /* v_cmpx_ge_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18562 /* v_cmpx_ge_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18562 /* v_cmpx_ge_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18562 /* v_cmpx_ge_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18562 /* v_cmpx_ge_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18562 /* v_cmpx_ge_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18626 /* v_cmpx_ge_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18626 /* v_cmpx_ge_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18626 /* v_cmpx_ge_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18626 /* v_cmpx_ge_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18626 /* v_cmpx_ge_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18626 /* v_cmpx_ge_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18626 /* v_cmpx_ge_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18658 /* v_cmpx_ge_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18658 /* v_cmpx_ge_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18658 /* v_cmpx_ge_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18658 /* v_cmpx_ge_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18658 /* v_cmpx_ge_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18658 /* v_cmpx_ge_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18658 /* v_cmpx_ge_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 18722 /* v_cmpx_gt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 18722 /* v_cmpx_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18722 /* v_cmpx_gt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18722 /* v_cmpx_gt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18722 /* v_cmpx_gt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18722 /* v_cmpx_gt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18722 /* v_cmpx_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18722 /* v_cmpx_gt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18722 /* v_cmpx_gt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18754 /* v_cmpx_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18754 /* v_cmpx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18754 /* v_cmpx_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18754 /* v_cmpx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18754 /* v_cmpx_gt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18754 /* v_cmpx_gt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18754 /* v_cmpx_gt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18754 /* v_cmpx_gt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18754 /* v_cmpx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18754 /* v_cmpx_gt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18754 /* v_cmpx_gt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18786 /* v_cmpx_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18786 /* v_cmpx_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18786 /* v_cmpx_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18786 /* v_cmpx_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18818 /* v_cmpx_gt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18818 /* v_cmpx_gt_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18818 /* v_cmpx_gt_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18818 /* v_cmpx_gt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18818 /* v_cmpx_gt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18818 /* v_cmpx_gt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18818 /* v_cmpx_gt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18850 /* v_cmpx_gt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18850 /* v_cmpx_gt_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18850 /* v_cmpx_gt_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18850 /* v_cmpx_gt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18850 /* v_cmpx_gt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18850 /* v_cmpx_gt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18850 /* v_cmpx_gt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18914 /* v_cmpx_gt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18914 /* v_cmpx_gt_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18914 /* v_cmpx_gt_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18914 /* v_cmpx_gt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18914 /* v_cmpx_gt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18914 /* v_cmpx_gt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 18914 /* v_cmpx_gt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18946 /* v_cmpx_gt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18946 /* v_cmpx_gt_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 18946 /* v_cmpx_gt_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18946 /* v_cmpx_gt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18946 /* v_cmpx_gt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18946 /* v_cmpx_gt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 18946 /* v_cmpx_gt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19010 /* v_cmpx_le_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19010 /* v_cmpx_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19010 /* v_cmpx_le_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19010 /* v_cmpx_le_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19010 /* v_cmpx_le_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19010 /* v_cmpx_le_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19010 /* v_cmpx_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19010 /* v_cmpx_le_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19010 /* v_cmpx_le_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19042 /* v_cmpx_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19042 /* v_cmpx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19042 /* v_cmpx_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19042 /* v_cmpx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19042 /* v_cmpx_le_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19042 /* v_cmpx_le_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19042 /* v_cmpx_le_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19042 /* v_cmpx_le_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19042 /* v_cmpx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19042 /* v_cmpx_le_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19042 /* v_cmpx_le_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19074 /* v_cmpx_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19074 /* v_cmpx_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19074 /* v_cmpx_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19074 /* v_cmpx_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19106 /* v_cmpx_le_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19106 /* v_cmpx_le_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19106 /* v_cmpx_le_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19106 /* v_cmpx_le_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19106 /* v_cmpx_le_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19106 /* v_cmpx_le_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19106 /* v_cmpx_le_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19138 /* v_cmpx_le_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19138 /* v_cmpx_le_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19138 /* v_cmpx_le_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19138 /* v_cmpx_le_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19138 /* v_cmpx_le_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19138 /* v_cmpx_le_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19138 /* v_cmpx_le_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19202 /* v_cmpx_le_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19202 /* v_cmpx_le_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19202 /* v_cmpx_le_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19202 /* v_cmpx_le_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19202 /* v_cmpx_le_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19202 /* v_cmpx_le_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19202 /* v_cmpx_le_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19234 /* v_cmpx_le_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19234 /* v_cmpx_le_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19234 /* v_cmpx_le_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19234 /* v_cmpx_le_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19234 /* v_cmpx_le_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19234 /* v_cmpx_le_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19234 /* v_cmpx_le_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19298 /* v_cmpx_lg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19298 /* v_cmpx_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19298 /* v_cmpx_lg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19298 /* v_cmpx_lg_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19298 /* v_cmpx_lg_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19298 /* v_cmpx_lg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19298 /* v_cmpx_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19298 /* v_cmpx_lg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19298 /* v_cmpx_lg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19330 /* v_cmpx_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19330 /* v_cmpx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19330 /* v_cmpx_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19330 /* v_cmpx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19330 /* v_cmpx_lg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19330 /* v_cmpx_lg_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19330 /* v_cmpx_lg_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19330 /* v_cmpx_lg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19330 /* v_cmpx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19330 /* v_cmpx_lg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19330 /* v_cmpx_lg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19362 /* v_cmpx_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19362 /* v_cmpx_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19362 /* v_cmpx_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19362 /* v_cmpx_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19394 /* v_cmpx_lt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19394 /* v_cmpx_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19394 /* v_cmpx_lt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19394 /* v_cmpx_lt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19394 /* v_cmpx_lt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19394 /* v_cmpx_lt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19394 /* v_cmpx_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19394 /* v_cmpx_lt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19394 /* v_cmpx_lt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19426 /* v_cmpx_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19426 /* v_cmpx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19426 /* v_cmpx_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19426 /* v_cmpx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19426 /* v_cmpx_lt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19426 /* v_cmpx_lt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19426 /* v_cmpx_lt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19426 /* v_cmpx_lt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19426 /* v_cmpx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19426 /* v_cmpx_lt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19426 /* v_cmpx_lt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19458 /* v_cmpx_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19458 /* v_cmpx_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19458 /* v_cmpx_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19458 /* v_cmpx_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19490 /* v_cmpx_lt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19490 /* v_cmpx_lt_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19490 /* v_cmpx_lt_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19490 /* v_cmpx_lt_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19490 /* v_cmpx_lt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19490 /* v_cmpx_lt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19490 /* v_cmpx_lt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19522 /* v_cmpx_lt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19522 /* v_cmpx_lt_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19522 /* v_cmpx_lt_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19522 /* v_cmpx_lt_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19522 /* v_cmpx_lt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19522 /* v_cmpx_lt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19522 /* v_cmpx_lt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19586 /* v_cmpx_lt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19586 /* v_cmpx_lt_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19586 /* v_cmpx_lt_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19586 /* v_cmpx_lt_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19586 /* v_cmpx_lt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19586 /* v_cmpx_lt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19586 /* v_cmpx_lt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19618 /* v_cmpx_lt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19618 /* v_cmpx_lt_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19618 /* v_cmpx_lt_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19618 /* v_cmpx_lt_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19618 /* v_cmpx_lt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19618 /* v_cmpx_lt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19618 /* v_cmpx_lt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19682 /* v_cmpx_ne_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19682 /* v_cmpx_ne_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19682 /* v_cmpx_ne_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19682 /* v_cmpx_ne_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19682 /* v_cmpx_ne_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19682 /* v_cmpx_ne_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19682 /* v_cmpx_ne_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19714 /* v_cmpx_ne_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19714 /* v_cmpx_ne_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19714 /* v_cmpx_ne_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19714 /* v_cmpx_ne_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19714 /* v_cmpx_ne_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19714 /* v_cmpx_ne_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19714 /* v_cmpx_ne_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19778 /* v_cmpx_ne_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19778 /* v_cmpx_ne_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19778 /* v_cmpx_ne_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19778 /* v_cmpx_ne_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19778 /* v_cmpx_ne_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19778 /* v_cmpx_ne_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19778 /* v_cmpx_ne_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19810 /* v_cmpx_ne_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19810 /* v_cmpx_ne_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19810 /* v_cmpx_ne_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19810 /* v_cmpx_ne_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19810 /* v_cmpx_ne_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19810 /* v_cmpx_ne_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19810 /* v_cmpx_ne_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19874 /* v_cmpx_neq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19874 /* v_cmpx_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19874 /* v_cmpx_neq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19874 /* v_cmpx_neq_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19874 /* v_cmpx_neq_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19874 /* v_cmpx_neq_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19874 /* v_cmpx_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19874 /* v_cmpx_neq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19874 /* v_cmpx_neq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19908 /* v_cmpx_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19908 /* v_cmpx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19908 /* v_cmpx_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19908 /* v_cmpx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19908 /* v_cmpx_neq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19908 /* v_cmpx_neq_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19908 /* v_cmpx_neq_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19908 /* v_cmpx_neq_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19908 /* v_cmpx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19908 /* v_cmpx_neq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 19908 /* v_cmpx_neq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19942 /* v_cmpx_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19942 /* v_cmpx_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19942 /* v_cmpx_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19942 /* v_cmpx_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19976 /* v_cmpx_nge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 19976 /* v_cmpx_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19976 /* v_cmpx_nge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19976 /* v_cmpx_nge_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 19976 /* v_cmpx_nge_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19976 /* v_cmpx_nge_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19976 /* v_cmpx_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19976 /* v_cmpx_nge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 19976 /* v_cmpx_nge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20010 /* v_cmpx_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20010 /* v_cmpx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20010 /* v_cmpx_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20010 /* v_cmpx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20010 /* v_cmpx_nge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20010 /* v_cmpx_nge_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20010 /* v_cmpx_nge_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20010 /* v_cmpx_nge_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20010 /* v_cmpx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20010 /* v_cmpx_nge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20010 /* v_cmpx_nge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20044 /* v_cmpx_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20044 /* v_cmpx_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20044 /* v_cmpx_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20044 /* v_cmpx_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20078 /* v_cmpx_ngt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20078 /* v_cmpx_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20078 /* v_cmpx_ngt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20078 /* v_cmpx_ngt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20078 /* v_cmpx_ngt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20078 /* v_cmpx_ngt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20078 /* v_cmpx_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20078 /* v_cmpx_ngt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20078 /* v_cmpx_ngt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20112 /* v_cmpx_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20112 /* v_cmpx_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20112 /* v_cmpx_ngt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20112 /* v_cmpx_ngt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20112 /* v_cmpx_ngt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20146 /* v_cmpx_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20146 /* v_cmpx_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20146 /* v_cmpx_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20146 /* v_cmpx_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20180 /* v_cmpx_nle_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20180 /* v_cmpx_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20180 /* v_cmpx_nle_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20180 /* v_cmpx_nle_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20180 /* v_cmpx_nle_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20180 /* v_cmpx_nle_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20180 /* v_cmpx_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20180 /* v_cmpx_nle_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20180 /* v_cmpx_nle_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20214 /* v_cmpx_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20214 /* v_cmpx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20214 /* v_cmpx_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20214 /* v_cmpx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20214 /* v_cmpx_nle_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20214 /* v_cmpx_nle_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20214 /* v_cmpx_nle_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20214 /* v_cmpx_nle_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20214 /* v_cmpx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20214 /* v_cmpx_nle_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20214 /* v_cmpx_nle_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20248 /* v_cmpx_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20248 /* v_cmpx_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20248 /* v_cmpx_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20248 /* v_cmpx_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20282 /* v_cmpx_nlg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20282 /* v_cmpx_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20282 /* v_cmpx_nlg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20282 /* v_cmpx_nlg_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20282 /* v_cmpx_nlg_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20282 /* v_cmpx_nlg_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20282 /* v_cmpx_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20282 /* v_cmpx_nlg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20282 /* v_cmpx_nlg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20316 /* v_cmpx_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20316 /* v_cmpx_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20316 /* v_cmpx_nlg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20316 /* v_cmpx_nlg_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20316 /* v_cmpx_nlg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20350 /* v_cmpx_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20350 /* v_cmpx_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20350 /* v_cmpx_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20350 /* v_cmpx_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20384 /* v_cmpx_nlt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20384 /* v_cmpx_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20384 /* v_cmpx_nlt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20384 /* v_cmpx_nlt_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20384 /* v_cmpx_nlt_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20384 /* v_cmpx_nlt_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20384 /* v_cmpx_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20384 /* v_cmpx_nlt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20384 /* v_cmpx_nlt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20418 /* v_cmpx_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20418 /* v_cmpx_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20418 /* v_cmpx_nlt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20418 /* v_cmpx_nlt_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20418 /* v_cmpx_nlt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20452 /* v_cmpx_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20452 /* v_cmpx_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20452 /* v_cmpx_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20452 /* v_cmpx_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20486 /* v_cmpx_o_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20486 /* v_cmpx_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20486 /* v_cmpx_o_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20486 /* v_cmpx_o_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20486 /* v_cmpx_o_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20486 /* v_cmpx_o_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20486 /* v_cmpx_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20486 /* v_cmpx_o_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20486 /* v_cmpx_o_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20516 /* v_cmpx_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20516 /* v_cmpx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20516 /* v_cmpx_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20516 /* v_cmpx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20516 /* v_cmpx_o_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20516 /* v_cmpx_o_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20516 /* v_cmpx_o_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20516 /* v_cmpx_o_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20516 /* v_cmpx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20516 /* v_cmpx_o_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20516 /* v_cmpx_o_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20546 /* v_cmpx_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20546 /* v_cmpx_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20546 /* v_cmpx_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20546 /* v_cmpx_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20576 /* v_cmpx_t_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20576 /* v_cmpx_t_i16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20576 /* v_cmpx_t_i16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20576 /* v_cmpx_t_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20576 /* v_cmpx_t_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20576 /* v_cmpx_t_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20576 /* v_cmpx_t_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20606 /* v_cmpx_t_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20606 /* v_cmpx_t_i32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20606 /* v_cmpx_t_i32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20606 /* v_cmpx_t_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20606 /* v_cmpx_t_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20606 /* v_cmpx_t_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20606 /* v_cmpx_t_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20666 /* v_cmpx_t_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20666 /* v_cmpx_t_u16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20666 /* v_cmpx_t_u16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20666 /* v_cmpx_t_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20666 /* v_cmpx_t_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20666 /* v_cmpx_t_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20666 /* v_cmpx_t_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20696 /* v_cmpx_t_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20696 /* v_cmpx_t_u32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20696 /* v_cmpx_t_u32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20696 /* v_cmpx_t_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20696 /* v_cmpx_t_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20696 /* v_cmpx_t_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20696 /* v_cmpx_t_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20756 /* v_cmpx_tru_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20756 /* v_cmpx_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20756 /* v_cmpx_tru_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20756 /* v_cmpx_tru_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20756 /* v_cmpx_tru_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20756 /* v_cmpx_tru_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20756 /* v_cmpx_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20756 /* v_cmpx_tru_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20756 /* v_cmpx_tru_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20790 /* v_cmpx_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20790 /* v_cmpx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20790 /* v_cmpx_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20790 /* v_cmpx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20790 /* v_cmpx_tru_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20790 /* v_cmpx_tru_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20790 /* v_cmpx_tru_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20790 /* v_cmpx_tru_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20790 /* v_cmpx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20790 /* v_cmpx_tru_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20790 /* v_cmpx_tru_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20824 /* v_cmpx_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20824 /* v_cmpx_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20824 /* v_cmpx_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20824 /* v_cmpx_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20858 /* v_cmpx_u_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20858 /* v_cmpx_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20858 /* v_cmpx_u_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20858 /* v_cmpx_u_f16 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20858 /* v_cmpx_u_f16 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20858 /* v_cmpx_u_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20858 /* v_cmpx_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20858 /* v_cmpx_u_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20858 /* v_cmpx_u_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20888 /* v_cmpx_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20888 /* v_cmpx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20888 /* v_cmpx_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20888 /* v_cmpx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20888 /* v_cmpx_u_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20888 /* v_cmpx_u_f32 */, MCK_ImmSDWASrc0Sel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20888 /* v_cmpx_u_f32 */, MCK_ImmSDWASrc1Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20888 /* v_cmpx_u_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20888 /* v_cmpx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20888 /* v_cmpx_u_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20888 /* v_cmpx_u_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20918 /* v_cmpx_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 20918 /* v_cmpx_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20918 /* v_cmpx_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 20918 /* v_cmpx_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 20948 /* v_cndmask_b32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 20948 /* v_cndmask_b32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 20948 /* v_cndmask_b32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP, 20948 /* v_cndmask_b32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 20948 /* v_cndmask_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 20948 /* v_cndmask_b32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 20948 /* v_cndmask_b32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA, 20948 /* v_cndmask_b32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 20948 /* v_cndmask_b32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA, 20948 /* v_cndmask_b32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20948 /* v_cndmask_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20948 /* v_cndmask_b32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20948 /* v_cndmask_b32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20948 /* v_cndmask_b32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20948 /* v_cndmask_b32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20948 /* v_cndmask_b32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20962 /* v_cos_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20962 /* v_cos_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 20962 /* v_cos_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20962 /* v_cos_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20962 /* v_cos_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20962 /* v_cos_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20962 /* v_cos_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 20962 /* v_cos_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 20962 /* v_cos_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 20962 /* v_cos_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 20962 /* v_cos_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 20962 /* v_cos_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 20962 /* v_cos_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20962 /* v_cos_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20962 /* v_cos_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20962 /* v_cos_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20962 /* v_cos_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20962 /* v_cos_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20962 /* v_cos_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20972 /* v_cos_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 20972 /* v_cos_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 20972 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 20972 /* v_cos_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 20972 /* v_cos_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 20972 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20972 /* v_cos_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20972 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20972 /* v_cos_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20972 /* v_cos_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 20972 /* v_cos_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 20972 /* v_cos_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 20972 /* v_cos_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 20972 /* v_cos_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 20972 /* v_cos_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 20972 /* v_cos_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20972 /* v_cos_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20972 /* v_cos_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20972 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20972 /* v_cos_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20972 /* v_cos_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 20972 /* v_cos_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20982 /* v_cubeid_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 20982 /* v_cubeid_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20982 /* v_cubeid_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 20982 /* v_cubeid_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 20982 /* v_cubeid_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 20982 /* v_cubeid_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 20995 /* v_cubema_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 20995 /* v_cubema_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 20995 /* v_cubema_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 20995 /* v_cubema_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 20995 /* v_cubema_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 20995 /* v_cubema_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21008 /* v_cubesc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21008 /* v_cubesc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21008 /* v_cubesc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21008 /* v_cubesc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21008 /* v_cubesc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21008 /* v_cubesc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21021 /* v_cubetc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21021 /* v_cubetc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21021 /* v_cubetc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21021 /* v_cubetc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21021 /* v_cubetc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21021 /* v_cubetc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21034 /* v_cvt_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21034 /* v_cvt_f16_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21034 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21034 /* v_cvt_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21034 /* v_cvt_f16_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21034 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21034 /* v_cvt_f16_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21034 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21034 /* v_cvt_f16_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21034 /* v_cvt_f16_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21034 /* v_cvt_f16_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21034 /* v_cvt_f16_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21034 /* v_cvt_f16_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21034 /* v_cvt_f16_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21034 /* v_cvt_f16_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21034 /* v_cvt_f16_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21034 /* v_cvt_f16_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21034 /* v_cvt_f16_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21034 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21034 /* v_cvt_f16_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21034 /* v_cvt_f16_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21034 /* v_cvt_f16_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21048 /* v_cvt_f16_i16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21048 /* v_cvt_f16_i16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21048 /* v_cvt_f16_i16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21048 /* v_cvt_f16_i16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21048 /* v_cvt_f16_i16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21048 /* v_cvt_f16_i16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21048 /* v_cvt_f16_i16 */, MCK_SDWAWithInt16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21048 /* v_cvt_f16_i16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21048 /* v_cvt_f16_i16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21048 /* v_cvt_f16_i16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21048 /* v_cvt_f16_i16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21048 /* v_cvt_f16_i16 */, MCK_SDWAWithInt16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21048 /* v_cvt_f16_i16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21048 /* v_cvt_f16_i16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21048 /* v_cvt_f16_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21048 /* v_cvt_f16_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21048 /* v_cvt_f16_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21062 /* v_cvt_f16_u16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21062 /* v_cvt_f16_u16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21062 /* v_cvt_f16_u16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21062 /* v_cvt_f16_u16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21062 /* v_cvt_f16_u16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21062 /* v_cvt_f16_u16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21062 /* v_cvt_f16_u16 */, MCK_SDWAWithInt16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21062 /* v_cvt_f16_u16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21062 /* v_cvt_f16_u16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21062 /* v_cvt_f16_u16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21062 /* v_cvt_f16_u16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21062 /* v_cvt_f16_u16 */, MCK_SDWAWithInt16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21062 /* v_cvt_f16_u16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21062 /* v_cvt_f16_u16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21062 /* v_cvt_f16_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21062 /* v_cvt_f16_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21062 /* v_cvt_f16_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21076 /* v_cvt_f32_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21076 /* v_cvt_f32_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21076 /* v_cvt_f32_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21076 /* v_cvt_f32_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21076 /* v_cvt_f32_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21076 /* v_cvt_f32_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21076 /* v_cvt_f32_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21076 /* v_cvt_f32_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21076 /* v_cvt_f32_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21076 /* v_cvt_f32_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21076 /* v_cvt_f32_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21076 /* v_cvt_f32_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21076 /* v_cvt_f32_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21076 /* v_cvt_f32_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21076 /* v_cvt_f32_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21076 /* v_cvt_f32_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21076 /* v_cvt_f32_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21076 /* v_cvt_f32_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21076 /* v_cvt_f32_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21076 /* v_cvt_f32_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21076 /* v_cvt_f32_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21076 /* v_cvt_f32_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21090 /* v_cvt_f32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21090 /* v_cvt_f32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21090 /* v_cvt_f32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21090 /* v_cvt_f32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21090 /* v_cvt_f32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21090 /* v_cvt_f32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 21104 /* v_cvt_f32_i32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21104 /* v_cvt_f32_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21104 /* v_cvt_f32_i32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21104 /* v_cvt_f32_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21104 /* v_cvt_f32_i32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21104 /* v_cvt_f32_i32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21104 /* v_cvt_f32_i32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21104 /* v_cvt_f32_i32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21104 /* v_cvt_f32_i32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21104 /* v_cvt_f32_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21104 /* v_cvt_f32_i32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21104 /* v_cvt_f32_i32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21104 /* v_cvt_f32_i32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21104 /* v_cvt_f32_i32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21104 /* v_cvt_f32_i32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21104 /* v_cvt_f32_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21104 /* v_cvt_f32_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21104 /* v_cvt_f32_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21104 /* v_cvt_f32_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21118 /* v_cvt_f32_u32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21118 /* v_cvt_f32_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21118 /* v_cvt_f32_u32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21118 /* v_cvt_f32_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21118 /* v_cvt_f32_u32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21118 /* v_cvt_f32_u32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21118 /* v_cvt_f32_u32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21118 /* v_cvt_f32_u32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21118 /* v_cvt_f32_u32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21118 /* v_cvt_f32_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21118 /* v_cvt_f32_u32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21118 /* v_cvt_f32_u32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21118 /* v_cvt_f32_u32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21118 /* v_cvt_f32_u32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21118 /* v_cvt_f32_u32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21118 /* v_cvt_f32_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21118 /* v_cvt_f32_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21118 /* v_cvt_f32_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21118 /* v_cvt_f32_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21132 /* v_cvt_f32_ubyte0 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21132 /* v_cvt_f32_ubyte0 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21132 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21149 /* v_cvt_f32_ubyte1 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21149 /* v_cvt_f32_ubyte1 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21149 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21166 /* v_cvt_f32_ubyte2 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21166 /* v_cvt_f32_ubyte2 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21166 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21183 /* v_cvt_f32_ubyte3 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21183 /* v_cvt_f32_ubyte3 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21183 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21200 /* v_cvt_f64_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21200 /* v_cvt_f64_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21200 /* v_cvt_f64_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21200 /* v_cvt_f64_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21200 /* v_cvt_f64_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21200 /* v_cvt_f64_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 21214 /* v_cvt_f64_i32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21214 /* v_cvt_f64_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21214 /* v_cvt_f64_i32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21214 /* v_cvt_f64_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 21228 /* v_cvt_f64_u32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21228 /* v_cvt_f64_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21228 /* v_cvt_f64_u32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21228 /* v_cvt_f64_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 21242 /* v_cvt_flr_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21242 /* v_cvt_flr_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21242 /* v_cvt_flr_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21242 /* v_cvt_flr_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21242 /* v_cvt_flr_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21242 /* v_cvt_flr_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21260 /* v_cvt_i16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21260 /* v_cvt_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21260 /* v_cvt_i16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21260 /* v_cvt_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21260 /* v_cvt_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21260 /* v_cvt_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21260 /* v_cvt_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21260 /* v_cvt_i16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21260 /* v_cvt_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21260 /* v_cvt_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21260 /* v_cvt_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21260 /* v_cvt_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21260 /* v_cvt_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21260 /* v_cvt_i16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21260 /* v_cvt_i16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21260 /* v_cvt_i16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21260 /* v_cvt_i16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21274 /* v_cvt_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21274 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21274 /* v_cvt_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21274 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21274 /* v_cvt_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21274 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21274 /* v_cvt_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21274 /* v_cvt_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21274 /* v_cvt_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21274 /* v_cvt_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21274 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21274 /* v_cvt_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21274 /* v_cvt_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21274 /* v_cvt_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21274 /* v_cvt_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21274 /* v_cvt_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21274 /* v_cvt_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21274 /* v_cvt_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21274 /* v_cvt_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21288 /* v_cvt_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21288 /* v_cvt_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21288 /* v_cvt_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21288 /* v_cvt_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGFX9|Feature_isVI, 21302 /* v_cvt_norm_i16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_isVI, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21302 /* v_cvt_norm_i16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21302 /* v_cvt_norm_i16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 21302 /* v_cvt_norm_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_HasDPP, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasDPP, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasDPP, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 21302 /* v_cvt_norm_i16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 21321 /* v_cvt_norm_u16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_isVI, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21321 /* v_cvt_norm_u16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isGFX9|Feature_HasSDWA, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21321 /* v_cvt_norm_u16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 21321 /* v_cvt_norm_u16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_HasDPP, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasDPP, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasDPP, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 21321 /* v_cvt_norm_u16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21340 /* v_cvt_off_f32_i4 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21340 /* v_cvt_off_f32_i4 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21340 /* v_cvt_off_f32_i4 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21391 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21391 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21391 /* v_cvt_pk_u8_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21391 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21391 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21391 /* v_cvt_pk_u8_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21407 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21407 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 21407 /* v_cvt_pkaccum_u8_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21407 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21407 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21407 /* v_cvt_pkaccum_u8_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGFX9|Feature_isVI, 21428 /* v_cvt_pknorm_i16_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isGFX9|Feature_isVI, 21428 /* v_cvt_pknorm_i16_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 21428 /* v_cvt_pknorm_i16_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21449 /* v_cvt_pknorm_i16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 21449 /* v_cvt_pknorm_i16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21449 /* v_cvt_pknorm_i16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 21449 /* v_cvt_pknorm_i16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGFX9|Feature_isVI, 21470 /* v_cvt_pknorm_u16_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isGFX9|Feature_isVI, 21470 /* v_cvt_pknorm_u16_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 21470 /* v_cvt_pknorm_u16_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21491 /* v_cvt_pknorm_u16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 21491 /* v_cvt_pknorm_u16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21491 /* v_cvt_pknorm_u16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 21491 /* v_cvt_pknorm_u16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21512 /* v_cvt_pkrtz_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 21512 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21512 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21512 /* v_cvt_pkrtz_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 21512 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21512 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21532 /* v_cvt_rpi_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21532 /* v_cvt_rpi_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21532 /* v_cvt_rpi_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21532 /* v_cvt_rpi_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21532 /* v_cvt_rpi_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21532 /* v_cvt_rpi_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21550 /* v_cvt_u16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21550 /* v_cvt_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21550 /* v_cvt_u16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21550 /* v_cvt_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21550 /* v_cvt_u16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21550 /* v_cvt_u16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21550 /* v_cvt_u16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21550 /* v_cvt_u16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21550 /* v_cvt_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21550 /* v_cvt_u16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21550 /* v_cvt_u16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21550 /* v_cvt_u16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21550 /* v_cvt_u16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21550 /* v_cvt_u16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21550 /* v_cvt_u16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21550 /* v_cvt_u16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21550 /* v_cvt_u16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21564 /* v_cvt_u32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21564 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21564 /* v_cvt_u32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21564 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21564 /* v_cvt_u32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21564 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21564 /* v_cvt_u32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21564 /* v_cvt_u32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21564 /* v_cvt_u32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21564 /* v_cvt_u32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21564 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21564 /* v_cvt_u32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21564 /* v_cvt_u32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21564 /* v_cvt_u32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21564 /* v_cvt_u32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21564 /* v_cvt_u32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21564 /* v_cvt_u32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21564 /* v_cvt_u32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21564 /* v_cvt_u32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21578 /* v_cvt_u32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21578 /* v_cvt_u32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21578 /* v_cvt_u32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21578 /* v_cvt_u32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVIOnly, 21592 /* v_div_fixup_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVIOnly, 21592 /* v_div_fixup_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVIOnly, 21592 /* v_div_fixup_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isGFX9, 21592 /* v_div_fixup_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isGFX9, 21592 /* v_div_fixup_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isGFX9, 21592 /* v_div_fixup_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21608 /* v_div_fixup_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21608 /* v_div_fixup_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21608 /* v_div_fixup_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21608 /* v_div_fixup_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21608 /* v_div_fixup_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21608 /* v_div_fixup_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21624 /* v_div_fixup_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21624 /* v_div_fixup_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21624 /* v_div_fixup_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21624 /* v_div_fixup_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21624 /* v_div_fixup_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21624 /* v_div_fixup_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isGFX9, 21640 /* v_div_fixup_legacy_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isGFX9, 21640 /* v_div_fixup_legacy_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isGFX9, 21640 /* v_div_fixup_legacy_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21663 /* v_div_fmas_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21663 /* v_div_fmas_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21663 /* v_div_fmas_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21663 /* v_div_fmas_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21663 /* v_div_fmas_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21663 /* v_div_fmas_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21678 /* v_div_fmas_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21678 /* v_div_fmas_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21678 /* v_div_fmas_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21678 /* v_div_fmas_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21678 /* v_div_fmas_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21678 /* v_div_fmas_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21725 /* v_dot2_f32_f16 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21725 /* v_dot2_f32_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21725 /* v_dot2_f32_f16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21725 /* v_dot2_f32_f16 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21725 /* v_dot2_f32_f16 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21740 /* v_dot2_i32_i16 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21740 /* v_dot2_i32_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21740 /* v_dot2_i32_i16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21740 /* v_dot2_i32_i16 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21740 /* v_dot2_i32_i16 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21755 /* v_dot2_u32_u16 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21755 /* v_dot2_u32_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21755 /* v_dot2_u32_u16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21755 /* v_dot2_u32_u16 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21755 /* v_dot2_u32_u16 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21770 /* v_dot4_i32_i8 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21770 /* v_dot4_i32_i8 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21770 /* v_dot4_i32_i8 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21770 /* v_dot4_i32_i8 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21770 /* v_dot4_i32_i8 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21784 /* v_dot4_u32_u8 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21784 /* v_dot4_u32_u8 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21784 /* v_dot4_u32_u8 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21784 /* v_dot4_u32_u8 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21784 /* v_dot4_u32_u8 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21798 /* v_dot8_i32_i4 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21798 /* v_dot8_i32_i4 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21798 /* v_dot8_i32_i4 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21798 /* v_dot8_i32_i4 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21798 /* v_dot8_i32_i4 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21812 /* v_dot8_u32_u4 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21812 /* v_dot8_u32_u4 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21812 /* v_dot8_u32_u4 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21812 /* v_dot8_u32_u4 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_HasDotInsts|Feature_HasVOP3PInsts, 21812 /* v_dot8_u32_u4 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21826 /* v_exp_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21826 /* v_exp_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21826 /* v_exp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21826 /* v_exp_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21826 /* v_exp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21826 /* v_exp_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21826 /* v_exp_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21826 /* v_exp_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21826 /* v_exp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21826 /* v_exp_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21826 /* v_exp_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21826 /* v_exp_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21826 /* v_exp_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21826 /* v_exp_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21826 /* v_exp_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21826 /* v_exp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21826 /* v_exp_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21826 /* v_exp_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21826 /* v_exp_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21836 /* v_exp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21836 /* v_exp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21836 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21836 /* v_exp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21836 /* v_exp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21836 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21836 /* v_exp_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21836 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21836 /* v_exp_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21836 /* v_exp_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21836 /* v_exp_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21836 /* v_exp_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21836 /* v_exp_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21836 /* v_exp_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21836 /* v_exp_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21836 /* v_exp_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21836 /* v_exp_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21836 /* v_exp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21836 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21836 /* v_exp_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21836 /* v_exp_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21836 /* v_exp_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 21846 /* v_exp_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 21846 /* v_exp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 21846 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 21846 /* v_exp_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 21846 /* v_exp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 21846 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_HasSDWA, 21846 /* v_exp_legacy_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_HasSDWA, 21846 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_HasSDWA, 21846 /* v_exp_legacy_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isCIVI|Feature_HasSDWA, 21846 /* v_exp_legacy_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isCIVI|Feature_HasSDWA, 21846 /* v_exp_legacy_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isCIVI|Feature_HasDPP, 21846 /* v_exp_legacy_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_HasDPP, 21846 /* v_exp_legacy_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isCIVI|Feature_HasDPP, 21846 /* v_exp_legacy_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isCIVI|Feature_HasDPP, 21846 /* v_exp_legacy_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isCIVI|Feature_HasDPP, 21846 /* v_exp_legacy_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21846 /* v_exp_legacy_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21846 /* v_exp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21846 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21846 /* v_exp_legacy_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21846 /* v_exp_legacy_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21846 /* v_exp_legacy_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasDPP|Feature_HasDPP, 21863 /* v_ffbh_i32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21863 /* v_ffbh_i32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21863 /* v_ffbh_i32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21863 /* v_ffbh_i32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21863 /* v_ffbh_i32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21863 /* v_ffbh_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21863 /* v_ffbh_i32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21863 /* v_ffbh_i32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21863 /* v_ffbh_i32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21863 /* v_ffbh_i32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21863 /* v_ffbh_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21863 /* v_ffbh_i32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21863 /* v_ffbh_i32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21863 /* v_ffbh_i32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21874 /* v_ffbh_u32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21874 /* v_ffbh_u32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21874 /* v_ffbh_u32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21874 /* v_ffbh_u32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21874 /* v_ffbh_u32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21874 /* v_ffbh_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21874 /* v_ffbh_u32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21874 /* v_ffbh_u32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21874 /* v_ffbh_u32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21874 /* v_ffbh_u32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21874 /* v_ffbh_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21874 /* v_ffbh_u32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21874 /* v_ffbh_u32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21874 /* v_ffbh_u32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21885 /* v_ffbl_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21885 /* v_ffbl_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21885 /* v_ffbl_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21885 /* v_ffbl_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21885 /* v_ffbl_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21885 /* v_ffbl_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21885 /* v_ffbl_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21885 /* v_ffbl_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21885 /* v_ffbl_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21885 /* v_ffbl_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21885 /* v_ffbl_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21885 /* v_ffbl_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21885 /* v_ffbl_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21885 /* v_ffbl_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21896 /* v_floor_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21896 /* v_floor_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 21896 /* v_floor_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21896 /* v_floor_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21896 /* v_floor_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21896 /* v_floor_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21896 /* v_floor_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 21896 /* v_floor_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21896 /* v_floor_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21896 /* v_floor_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21896 /* v_floor_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21896 /* v_floor_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 21896 /* v_floor_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21896 /* v_floor_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21896 /* v_floor_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21896 /* v_floor_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21896 /* v_floor_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21896 /* v_floor_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21896 /* v_floor_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21908 /* v_floor_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 21908 /* v_floor_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 21908 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 21908 /* v_floor_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 21908 /* v_floor_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 21908 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21908 /* v_floor_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21908 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21908 /* v_floor_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21908 /* v_floor_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 21908 /* v_floor_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21908 /* v_floor_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 21908 /* v_floor_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 21908 /* v_floor_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 21908 /* v_floor_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 21908 /* v_floor_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21908 /* v_floor_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21908 /* v_floor_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21908 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21908 /* v_floor_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21908 /* v_floor_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 21908 /* v_floor_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 21920 /* v_floor_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 21920 /* v_floor_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 21920 /* v_floor_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 21920 /* v_floor_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 21920 /* v_floor_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 21920 /* v_floor_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVIOnly, 21932 /* v_fma_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVIOnly, 21932 /* v_fma_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVIOnly, 21932 /* v_fma_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isGFX9, 21932 /* v_fma_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isGFX9, 21932 /* v_fma_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isGFX9, 21932 /* v_fma_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21942 /* v_fma_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21942 /* v_fma_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21942 /* v_fma_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21942 /* v_fma_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21942 /* v_fma_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21942 /* v_fma_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 21952 /* v_fma_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 21952 /* v_fma_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 21952 /* v_fma_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 21952 /* v_fma_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 21952 /* v_fma_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 21952 /* v_fma_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isGFX9, 21962 /* v_fma_legacy_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isGFX9, 21962 /* v_fma_legacy_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isGFX9, 21962 /* v_fma_legacy_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21979 /* v_fma_mix_f32 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21979 /* v_fma_mix_f32 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21979 /* v_fma_mix_f32 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21979 /* v_fma_mix_f32 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21993 /* v_fma_mixhi_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21993 /* v_fma_mixhi_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21993 /* v_fma_mixhi_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 21993 /* v_fma_mixhi_f16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 22009 /* v_fma_mixlo_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 22009 /* v_fma_mixlo_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 22009 /* v_fma_mixlo_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasFmaMixInsts|Feature_HasVOP3PInsts, 22009 /* v_fma_mixlo_f16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasDLInsts|Feature_isVI, 22025 /* v_fmac_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasDLInsts|Feature_isVI, 22025 /* v_fmac_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasDLInsts|Feature_isVI, 22025 /* v_fmac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 22025 /* v_fmac_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 22025 /* v_fmac_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 22025 /* v_fmac_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 22025 /* v_fmac_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 22025 /* v_fmac_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 22025 /* v_fmac_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 22025 /* v_fmac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 22025 /* v_fmac_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 22025 /* v_fmac_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 22025 /* v_fmac_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 22025 /* v_fmac_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22036 /* v_fract_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22036 /* v_fract_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22036 /* v_fract_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22036 /* v_fract_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22036 /* v_fract_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22036 /* v_fract_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22036 /* v_fract_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22036 /* v_fract_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22036 /* v_fract_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22036 /* v_fract_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22036 /* v_fract_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22036 /* v_fract_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22036 /* v_fract_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22036 /* v_fract_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22036 /* v_fract_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22036 /* v_fract_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22036 /* v_fract_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22036 /* v_fract_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22036 /* v_fract_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22048 /* v_fract_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22048 /* v_fract_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22048 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22048 /* v_fract_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22048 /* v_fract_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22048 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22048 /* v_fract_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22048 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22048 /* v_fract_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22048 /* v_fract_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22048 /* v_fract_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22048 /* v_fract_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 22048 /* v_fract_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 22048 /* v_fract_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 22048 /* v_fract_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22048 /* v_fract_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22048 /* v_fract_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22048 /* v_fract_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22048 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22048 /* v_fract_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22048 /* v_fract_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22048 /* v_fract_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22060 /* v_fract_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22060 /* v_fract_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22060 /* v_fract_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22060 /* v_fract_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22060 /* v_fract_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22060 /* v_fract_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22072 /* v_frexp_exp_i16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22072 /* v_frexp_exp_i16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22072 /* v_frexp_exp_i16_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22072 /* v_frexp_exp_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22072 /* v_frexp_exp_i16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22092 /* v_frexp_exp_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22092 /* v_frexp_exp_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22092 /* v_frexp_exp_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22092 /* v_frexp_exp_i32_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22092 /* v_frexp_exp_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22092 /* v_frexp_exp_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22112 /* v_frexp_exp_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22112 /* v_frexp_exp_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22112 /* v_frexp_exp_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22112 /* v_frexp_exp_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22132 /* v_frexp_mant_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22132 /* v_frexp_mant_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22132 /* v_frexp_mant_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22132 /* v_frexp_mant_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22132 /* v_frexp_mant_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22132 /* v_frexp_mant_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22132 /* v_frexp_mant_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22132 /* v_frexp_mant_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22132 /* v_frexp_mant_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22132 /* v_frexp_mant_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22132 /* v_frexp_mant_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22132 /* v_frexp_mant_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22132 /* v_frexp_mant_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22132 /* v_frexp_mant_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22132 /* v_frexp_mant_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22132 /* v_frexp_mant_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22132 /* v_frexp_mant_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22132 /* v_frexp_mant_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22132 /* v_frexp_mant_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22149 /* v_frexp_mant_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22149 /* v_frexp_mant_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22149 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22149 /* v_frexp_mant_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22149 /* v_frexp_mant_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22149 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22149 /* v_frexp_mant_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22149 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22149 /* v_frexp_mant_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22149 /* v_frexp_mant_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22149 /* v_frexp_mant_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22149 /* v_frexp_mant_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 22149 /* v_frexp_mant_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 22149 /* v_frexp_mant_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 22149 /* v_frexp_mant_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22149 /* v_frexp_mant_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22149 /* v_frexp_mant_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22149 /* v_frexp_mant_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22149 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22149 /* v_frexp_mant_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22149 /* v_frexp_mant_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22149 /* v_frexp_mant_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22166 /* v_frexp_mant_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22166 /* v_frexp_mant_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22166 /* v_frexp_mant_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22166 /* v_frexp_mant_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22166 /* v_frexp_mant_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22166 /* v_frexp_mant_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 22183 /* v_interp_mov_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 22183 /* v_interp_mov_f32 */, MCK_InterpSlot, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22183 /* v_interp_mov_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22183 /* v_interp_mov_f32 */, MCK_InterpSlot, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 22183 /* v_interp_mov_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 22183 /* v_interp_mov_f32 */, MCK_InterpSlot, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 22183 /* v_interp_mov_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 22183 /* v_interp_mov_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22200 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22200 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 22200 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22200 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 22200 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 22200 /* v_interp_p1_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 22200 /* v_interp_p1_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 22200 /* v_interp_p1_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22216 /* v_interp_p1ll_f16 */, MCK_Attr, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22216 /* v_interp_p1ll_f16 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22216 /* v_interp_p1ll_f16 */, MCK_ImmOModSI, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22216 /* v_interp_p1ll_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22216 /* v_interp_p1ll_f16 */, MCK_ImmHigh, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22234 /* v_interp_p1lv_f16 */, MCK_Attr, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22234 /* v_interp_p1lv_f16 */, MCK_RegOrImmWithFP16InputMods, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22234 /* v_interp_p1lv_f16 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22234 /* v_interp_p1lv_f16 */, MCK_ImmOModSI, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22234 /* v_interp_p1lv_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22234 /* v_interp_p1lv_f16 */, MCK_ImmHigh, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isGFX9, 22252 /* v_interp_p2_f16 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGFX9|Feature_isGFX9, 22252 /* v_interp_p2_f16 */, MCK_RegOrImmWithFP32InputMods, 18 /* 1, 4 */ },
  { Feature_isGFX9|Feature_isGFX9, 22252 /* v_interp_p2_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_isGFX9|Feature_isGFX9, 22252 /* v_interp_p2_f16 */, MCK_ImmHigh, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22252 /* v_interp_p2_f16 */, MCK_Attr, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22252 /* v_interp_p2_f16 */, MCK_RegOrImmWithFP32InputMods, 18 /* 1, 4 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22252 /* v_interp_p2_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22252 /* v_interp_p2_f16 */, MCK_ImmHigh, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22268 /* v_interp_p2_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22268 /* v_interp_p2_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 22268 /* v_interp_p2_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 22268 /* v_interp_p2_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 22268 /* v_interp_p2_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 22268 /* v_interp_p2_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22284 /* v_interp_p2_legacy_f16 */, MCK_Attr, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22284 /* v_interp_p2_legacy_f16 */, MCK_RegOrImmWithFP32InputMods, 18 /* 1, 4 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22284 /* v_interp_p2_legacy_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22284 /* v_interp_p2_legacy_f16 */, MCK_ImmHigh, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22307 /* v_ldexp_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22307 /* v_ldexp_f16 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22307 /* v_ldexp_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22307 /* v_ldexp_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22307 /* v_ldexp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22307 /* v_ldexp_f16 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22307 /* v_ldexp_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22307 /* v_ldexp_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22307 /* v_ldexp_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22307 /* v_ldexp_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22307 /* v_ldexp_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_SDWAWithInt32InputMods, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22307 /* v_ldexp_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 22319 /* v_ldexp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22319 /* v_ldexp_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 22319 /* v_ldexp_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22319 /* v_ldexp_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22319 /* v_ldexp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22319 /* v_ldexp_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22319 /* v_ldexp_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22319 /* v_ldexp_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22331 /* v_ldexp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22331 /* v_ldexp_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 22331 /* v_ldexp_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22331 /* v_ldexp_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22331 /* v_ldexp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22331 /* v_ldexp_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22331 /* v_ldexp_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22331 /* v_ldexp_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 22353 /* v_log_clamp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 22353 /* v_log_clamp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 22353 /* v_log_clamp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22369 /* v_log_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22369 /* v_log_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22369 /* v_log_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22369 /* v_log_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22369 /* v_log_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22369 /* v_log_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22369 /* v_log_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22369 /* v_log_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22369 /* v_log_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22369 /* v_log_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22369 /* v_log_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22369 /* v_log_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22369 /* v_log_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22369 /* v_log_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22369 /* v_log_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22369 /* v_log_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22369 /* v_log_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22369 /* v_log_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22369 /* v_log_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22379 /* v_log_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 22379 /* v_log_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22379 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22379 /* v_log_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 22379 /* v_log_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22379 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22379 /* v_log_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22379 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22379 /* v_log_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22379 /* v_log_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 22379 /* v_log_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22379 /* v_log_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 22379 /* v_log_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 22379 /* v_log_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 22379 /* v_log_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 22379 /* v_log_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22379 /* v_log_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22379 /* v_log_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22379 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22379 /* v_log_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22379 /* v_log_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22379 /* v_log_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 22389 /* v_log_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 22389 /* v_log_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 22389 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 22389 /* v_log_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 22389 /* v_log_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 22389 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_HasSDWA, 22389 /* v_log_legacy_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_HasSDWA, 22389 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_HasSDWA, 22389 /* v_log_legacy_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isCIVI|Feature_HasSDWA, 22389 /* v_log_legacy_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isCIVI|Feature_HasSDWA, 22389 /* v_log_legacy_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isCIVI|Feature_HasDPP, 22389 /* v_log_legacy_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_HasDPP, 22389 /* v_log_legacy_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isCIVI|Feature_HasDPP, 22389 /* v_log_legacy_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isCIVI|Feature_HasDPP, 22389 /* v_log_legacy_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isCIVI|Feature_HasDPP, 22389 /* v_log_legacy_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22389 /* v_log_legacy_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22389 /* v_log_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22389 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22389 /* v_log_legacy_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22389 /* v_log_legacy_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22389 /* v_log_legacy_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22457 /* v_lshlrev_b16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22457 /* v_lshlrev_b16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22457 /* v_lshlrev_b16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22457 /* v_lshlrev_b16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22457 /* v_lshlrev_b16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22457 /* v_lshlrev_b16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22457 /* v_lshlrev_b16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22457 /* v_lshlrev_b16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22457 /* v_lshlrev_b16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22471 /* v_lshlrev_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22471 /* v_lshlrev_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 22471 /* v_lshlrev_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22471 /* v_lshlrev_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22471 /* v_lshlrev_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 22471 /* v_lshlrev_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22471 /* v_lshlrev_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22471 /* v_lshlrev_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22471 /* v_lshlrev_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22521 /* v_lshrrev_b16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22521 /* v_lshrrev_b16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22521 /* v_lshrrev_b16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22521 /* v_lshrrev_b16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22521 /* v_lshrrev_b16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22521 /* v_lshrrev_b16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22521 /* v_lshrrev_b16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22521 /* v_lshrrev_b16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22521 /* v_lshrrev_b16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22535 /* v_lshrrev_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22535 /* v_lshrrev_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 22535 /* v_lshrrev_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22535 /* v_lshrrev_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22535 /* v_lshrrev_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 22535 /* v_lshrrev_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22535 /* v_lshrrev_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22535 /* v_lshrrev_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22535 /* v_lshrrev_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22563 /* v_mac_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22563 /* v_mac_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22563 /* v_mac_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22563 /* v_mac_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22563 /* v_mac_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22563 /* v_mac_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22563 /* v_mac_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22563 /* v_mac_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22563 /* v_mac_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22563 /* v_mac_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22563 /* v_mac_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22563 /* v_mac_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22563 /* v_mac_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22563 /* v_mac_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22573 /* v_mac_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 22573 /* v_mac_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22573 /* v_mac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22573 /* v_mac_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 22573 /* v_mac_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22573 /* v_mac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22573 /* v_mac_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 22573 /* v_mac_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22573 /* v_mac_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 22573 /* v_mac_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22573 /* v_mac_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22573 /* v_mac_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 22573 /* v_mac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 22573 /* v_mac_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 22573 /* v_mac_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22573 /* v_mac_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 22573 /* v_mac_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 22583 /* v_mac_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 22583 /* v_mac_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 22583 /* v_mac_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22600 /* v_mad_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22600 /* v_mad_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22600 /* v_mad_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isGFX9, 22600 /* v_mad_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGFX9|Feature_isGFX9, 22600 /* v_mad_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isGFX9, 22600 /* v_mad_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22610 /* v_mad_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 22610 /* v_mad_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22610 /* v_mad_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22610 /* v_mad_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 22610 /* v_mad_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 22610 /* v_mad_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22620 /* v_mad_i16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isGFX9, 22620 /* v_mad_i16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isGFX9, 22620 /* v_mad_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 22630 /* v_mad_i32_i16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 22630 /* v_mad_i32_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22644 /* v_mad_i32_i24 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22644 /* v_mad_i32_i24 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 22658 /* v_mad_i64_i32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 22658 /* v_mad_i64_i32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22672 /* v_mad_legacy_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22672 /* v_mad_legacy_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22672 /* v_mad_legacy_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22689 /* v_mad_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 22689 /* v_mad_legacy_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22689 /* v_mad_legacy_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22689 /* v_mad_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 22689 /* v_mad_legacy_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 22689 /* v_mad_legacy_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22706 /* v_mad_legacy_i16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isGFX9, 22723 /* v_mad_legacy_u16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22740 /* v_mad_mix_f32 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22740 /* v_mad_mix_f32 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22740 /* v_mad_mix_f32 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22740 /* v_mad_mix_f32 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22754 /* v_mad_mixhi_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22754 /* v_mad_mixhi_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22754 /* v_mad_mixhi_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22754 /* v_mad_mixhi_f16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22770 /* v_mad_mixlo_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22770 /* v_mad_mixlo_f16 */, MCK_ImmClampSI, 64 /* 6 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22770 /* v_mad_mixlo_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_HasMadMixInsts|Feature_HasVOP3PInsts, 22770 /* v_mad_mixlo_f16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVIOnly, 22786 /* v_mad_u16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isGFX9, 22786 /* v_mad_u16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isGFX9, 22786 /* v_mad_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 22796 /* v_mad_u32_u16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 22796 /* v_mad_u32_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22810 /* v_mad_u32_u24 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22810 /* v_mad_u32_u24 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 22824 /* v_mad_u64_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 22824 /* v_mad_u64_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22838 /* v_madak_f16 */, MCK_KImmFP16, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 22850 /* v_madak_f32 */, MCK_KImmFP32, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22850 /* v_madak_f32 */, MCK_KImmFP32, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22862 /* v_madmk_f16 */, MCK_KImmFP16, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 22874 /* v_madmk_f32 */, MCK_KImmFP32, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 22874 /* v_madmk_f32 */, MCK_KImmFP32, 4 /* 2 */ },
  { Feature_isGFX9|Feature_isVI, 22886 /* v_max3_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGFX9|Feature_isVI, 22886 /* v_max3_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 22886 /* v_max3_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22897 /* v_max3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 22897 /* v_max3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 22897 /* v_max3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22897 /* v_max3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 22897 /* v_max3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 22897 /* v_max3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 22908 /* v_max3_i16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 22908 /* v_max3_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 22930 /* v_max3_u16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 22930 /* v_max3_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22952 /* v_max_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22952 /* v_max_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 22952 /* v_max_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22952 /* v_max_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22952 /* v_max_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22952 /* v_max_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22952 /* v_max_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22952 /* v_max_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22952 /* v_max_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22952 /* v_max_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22952 /* v_max_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22952 /* v_max_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22952 /* v_max_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22952 /* v_max_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22952 /* v_max_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 22962 /* v_max_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 22962 /* v_max_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22962 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22962 /* v_max_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 22962 /* v_max_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22962 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22962 /* v_max_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 22962 /* v_max_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22962 /* v_max_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 22962 /* v_max_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22962 /* v_max_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22962 /* v_max_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 22962 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 22962 /* v_max_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 22962 /* v_max_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22962 /* v_max_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 22962 /* v_max_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22962 /* v_max_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 22972 /* v_max_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 22972 /* v_max_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 22972 /* v_max_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 22972 /* v_max_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 22972 /* v_max_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 22972 /* v_max_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22982 /* v_max_i16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22982 /* v_max_i16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22982 /* v_max_i16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 22982 /* v_max_i16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22982 /* v_max_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22982 /* v_max_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22982 /* v_max_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22982 /* v_max_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22982 /* v_max_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 22982 /* v_max_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22982 /* v_max_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22982 /* v_max_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22982 /* v_max_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22982 /* v_max_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22982 /* v_max_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22982 /* v_max_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22992 /* v_max_i32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 22992 /* v_max_i32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 22992 /* v_max_i32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 22992 /* v_max_i32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22992 /* v_max_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 22992 /* v_max_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 22992 /* v_max_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 22992 /* v_max_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 22992 /* v_max_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 22992 /* v_max_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22992 /* v_max_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22992 /* v_max_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22992 /* v_max_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22992 /* v_max_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22992 /* v_max_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 22992 /* v_max_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 23002 /* v_max_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 23002 /* v_max_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 23002 /* v_max_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23019 /* v_max_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23019 /* v_max_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23019 /* v_max_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23019 /* v_max_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23019 /* v_max_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23019 /* v_max_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23019 /* v_max_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23019 /* v_max_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23019 /* v_max_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23019 /* v_max_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23019 /* v_max_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23019 /* v_max_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23019 /* v_max_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23019 /* v_max_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23019 /* v_max_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23019 /* v_max_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23029 /* v_max_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23029 /* v_max_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23029 /* v_max_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23029 /* v_max_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23029 /* v_max_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23029 /* v_max_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23029 /* v_max_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23029 /* v_max_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23029 /* v_max_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23029 /* v_max_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23029 /* v_max_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23029 /* v_max_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23029 /* v_max_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23029 /* v_max_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23029 /* v_max_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23029 /* v_max_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23077 /* v_med3_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGFX9|Feature_isVI, 23077 /* v_med3_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23077 /* v_med3_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23088 /* v_med3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 23088 /* v_med3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 23088 /* v_med3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23088 /* v_med3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 23088 /* v_med3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 23088 /* v_med3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 23099 /* v_med3_i16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23099 /* v_med3_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 23121 /* v_med3_u16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23121 /* v_med3_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 23143 /* v_min3_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGFX9|Feature_isVI, 23143 /* v_min3_f16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23143 /* v_min3_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23154 /* v_min3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 23154 /* v_min3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 23154 /* v_min3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23154 /* v_min3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 23154 /* v_min3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 23154 /* v_min3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 23165 /* v_min3_i16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23165 /* v_min3_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 23187 /* v_min3_u16 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23187 /* v_min3_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23209 /* v_min_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23209 /* v_min_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23209 /* v_min_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23209 /* v_min_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23209 /* v_min_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23209 /* v_min_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23209 /* v_min_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23209 /* v_min_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23209 /* v_min_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23209 /* v_min_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23209 /* v_min_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23209 /* v_min_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23209 /* v_min_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23209 /* v_min_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23209 /* v_min_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 23219 /* v_min_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 23219 /* v_min_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23219 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23219 /* v_min_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 23219 /* v_min_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23219 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23219 /* v_min_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 23219 /* v_min_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23219 /* v_min_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23219 /* v_min_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23219 /* v_min_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23219 /* v_min_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23219 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23219 /* v_min_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23219 /* v_min_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23219 /* v_min_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23219 /* v_min_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23219 /* v_min_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 23229 /* v_min_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 23229 /* v_min_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23229 /* v_min_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23229 /* v_min_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 23229 /* v_min_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23229 /* v_min_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23239 /* v_min_i16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23239 /* v_min_i16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23239 /* v_min_i16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23239 /* v_min_i16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23239 /* v_min_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23239 /* v_min_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23239 /* v_min_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23239 /* v_min_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23239 /* v_min_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23239 /* v_min_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23239 /* v_min_i16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23239 /* v_min_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23239 /* v_min_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23239 /* v_min_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23239 /* v_min_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23239 /* v_min_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23249 /* v_min_i32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23249 /* v_min_i32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23249 /* v_min_i32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23249 /* v_min_i32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23249 /* v_min_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23249 /* v_min_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23249 /* v_min_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23249 /* v_min_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23249 /* v_min_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23249 /* v_min_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23249 /* v_min_i32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23249 /* v_min_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23249 /* v_min_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23249 /* v_min_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23249 /* v_min_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23249 /* v_min_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 23259 /* v_min_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 23259 /* v_min_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 23259 /* v_min_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23276 /* v_min_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23276 /* v_min_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23276 /* v_min_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23276 /* v_min_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23276 /* v_min_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23276 /* v_min_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23276 /* v_min_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23276 /* v_min_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23276 /* v_min_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23276 /* v_min_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23276 /* v_min_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23276 /* v_min_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23276 /* v_min_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23276 /* v_min_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23276 /* v_min_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23276 /* v_min_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23286 /* v_min_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23286 /* v_min_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23286 /* v_min_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23286 /* v_min_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23286 /* v_min_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23286 /* v_min_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23286 /* v_min_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23286 /* v_min_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23286 /* v_min_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23286 /* v_min_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23286 /* v_min_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23286 /* v_min_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23286 /* v_min_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23286 /* v_min_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23286 /* v_min_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23286 /* v_min_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasDPP|Feature_HasDPP, 23296 /* v_mov_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 23296 /* v_mov_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 23296 /* v_mov_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23296 /* v_mov_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23296 /* v_mov_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23296 /* v_mov_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23296 /* v_mov_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23296 /* v_mov_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23296 /* v_mov_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23296 /* v_mov_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23296 /* v_mov_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23296 /* v_mov_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23296 /* v_mov_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23296 /* v_mov_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23306 /* v_mov_fed_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 23306 /* v_mov_fed_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 23306 /* v_mov_fed_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23306 /* v_mov_fed_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23306 /* v_mov_fed_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23306 /* v_mov_fed_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23306 /* v_mov_fed_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23306 /* v_mov_fed_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23306 /* v_mov_fed_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23306 /* v_mov_fed_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23306 /* v_mov_fed_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23306 /* v_mov_fed_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23306 /* v_mov_fed_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23306 /* v_mov_fed_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23363 /* v_mqsad_pk_u16_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23363 /* v_mqsad_pk_u16_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 23381 /* v_mqsad_u32_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 23381 /* v_mqsad_u32_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23396 /* v_msad_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23396 /* v_msad_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23406 /* v_mul_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23406 /* v_mul_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23406 /* v_mul_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23406 /* v_mul_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23406 /* v_mul_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23406 /* v_mul_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23406 /* v_mul_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23406 /* v_mul_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23406 /* v_mul_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23406 /* v_mul_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23406 /* v_mul_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23406 /* v_mul_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23406 /* v_mul_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23406 /* v_mul_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23406 /* v_mul_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 23416 /* v_mul_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 23416 /* v_mul_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23416 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23416 /* v_mul_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 23416 /* v_mul_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23416 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23416 /* v_mul_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 23416 /* v_mul_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23416 /* v_mul_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23416 /* v_mul_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23416 /* v_mul_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23416 /* v_mul_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23416 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23416 /* v_mul_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23416 /* v_mul_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23416 /* v_mul_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23416 /* v_mul_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23416 /* v_mul_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 23426 /* v_mul_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 23426 /* v_mul_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23426 /* v_mul_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23426 /* v_mul_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 23426 /* v_mul_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23426 /* v_mul_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23449 /* v_mul_hi_i32_i24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23449 /* v_mul_hi_i32_i24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23449 /* v_mul_hi_i32_i24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23479 /* v_mul_hi_u32_u24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23479 /* v_mul_hi_u32_u24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23479 /* v_mul_hi_u32_u24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23496 /* v_mul_i32_i24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23496 /* v_mul_i32_i24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23496 /* v_mul_i32_i24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23496 /* v_mul_i32_i24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23496 /* v_mul_i32_i24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23496 /* v_mul_i32_i24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23496 /* v_mul_i32_i24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23496 /* v_mul_i32_i24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23496 /* v_mul_i32_i24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 23510 /* v_mul_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 23510 /* v_mul_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 23510 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23510 /* v_mul_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 23510 /* v_mul_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 23510 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23510 /* v_mul_legacy_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 23510 /* v_mul_legacy_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23510 /* v_mul_legacy_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23510 /* v_mul_legacy_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23510 /* v_mul_legacy_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23510 /* v_mul_legacy_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23510 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23510 /* v_mul_legacy_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23540 /* v_mul_lo_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23540 /* v_mul_lo_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23540 /* v_mul_lo_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23540 /* v_mul_lo_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23540 /* v_mul_lo_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23540 /* v_mul_lo_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23540 /* v_mul_lo_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23540 /* v_mul_lo_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23540 /* v_mul_lo_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23566 /* v_mul_u32_u24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23566 /* v_mul_u32_u24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23566 /* v_mul_u32_u24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23566 /* v_mul_u32_u24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23566 /* v_mul_u32_u24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23566 /* v_mul_u32_u24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23566 /* v_mul_u32_u24 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23566 /* v_mul_u32_u24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23566 /* v_mul_u32_u24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 23580 /* v_mullit_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isSICI|Feature_isSICI, 23580 /* v_mullit_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 23580 /* v_mullit_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23599 /* v_not_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 23599 /* v_not_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 23599 /* v_not_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23599 /* v_not_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23599 /* v_not_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23599 /* v_not_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23599 /* v_not_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23599 /* v_not_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23599 /* v_not_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23599 /* v_not_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23599 /* v_not_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23599 /* v_not_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23599 /* v_not_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23599 /* v_not_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23619 /* v_or_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 23619 /* v_or_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 23619 /* v_or_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 23619 /* v_or_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23619 /* v_or_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 23619 /* v_or_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 23619 /* v_or_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 23619 /* v_or_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 23619 /* v_or_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 23619 /* v_or_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23619 /* v_or_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23619 /* v_or_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23619 /* v_or_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23619 /* v_or_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23619 /* v_or_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23619 /* v_or_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGFX9|Feature_isVI, 23628 /* v_pack_b32_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isGFX9|Feature_isVI, 23628 /* v_pack_b32_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 23628 /* v_pack_b32_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23654 /* v_pk_add_f16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23654 /* v_pk_add_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23654 /* v_pk_add_f16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23654 /* v_pk_add_f16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23654 /* v_pk_add_f16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23667 /* v_pk_add_i16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23667 /* v_pk_add_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23667 /* v_pk_add_i16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23667 /* v_pk_add_i16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23667 /* v_pk_add_i16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23680 /* v_pk_add_u16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23680 /* v_pk_add_u16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23680 /* v_pk_add_u16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23680 /* v_pk_add_u16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23680 /* v_pk_add_u16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23693 /* v_pk_ashrrev_i16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23693 /* v_pk_ashrrev_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23693 /* v_pk_ashrrev_i16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23693 /* v_pk_ashrrev_i16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23693 /* v_pk_ashrrev_i16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23710 /* v_pk_fma_f16 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23710 /* v_pk_fma_f16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23710 /* v_pk_fma_f16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23710 /* v_pk_fma_f16 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23710 /* v_pk_fma_f16 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23723 /* v_pk_lshlrev_b16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23723 /* v_pk_lshlrev_b16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23723 /* v_pk_lshlrev_b16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23723 /* v_pk_lshlrev_b16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23723 /* v_pk_lshlrev_b16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23740 /* v_pk_lshrrev_b16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23740 /* v_pk_lshrrev_b16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23740 /* v_pk_lshrrev_b16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23740 /* v_pk_lshrrev_b16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23740 /* v_pk_lshrrev_b16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23757 /* v_pk_mad_i16 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23757 /* v_pk_mad_i16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23757 /* v_pk_mad_i16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23757 /* v_pk_mad_i16 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23757 /* v_pk_mad_i16 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23770 /* v_pk_mad_u16 */, MCK_ImmClampSI, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23770 /* v_pk_mad_u16 */, MCK_ImmOpSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23770 /* v_pk_mad_u16 */, MCK_ImmOpSelHi, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23770 /* v_pk_mad_u16 */, MCK_ImmNegLo, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23770 /* v_pk_mad_u16 */, MCK_ImmNegHi, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23783 /* v_pk_max_f16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23783 /* v_pk_max_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23783 /* v_pk_max_f16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23783 /* v_pk_max_f16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23783 /* v_pk_max_f16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23796 /* v_pk_max_i16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23796 /* v_pk_max_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23796 /* v_pk_max_i16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23796 /* v_pk_max_i16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23796 /* v_pk_max_i16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23809 /* v_pk_max_u16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23809 /* v_pk_max_u16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23809 /* v_pk_max_u16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23809 /* v_pk_max_u16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23809 /* v_pk_max_u16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23822 /* v_pk_min_f16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23822 /* v_pk_min_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23822 /* v_pk_min_f16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23822 /* v_pk_min_f16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23822 /* v_pk_min_f16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23835 /* v_pk_min_i16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23835 /* v_pk_min_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23835 /* v_pk_min_i16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23835 /* v_pk_min_i16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23835 /* v_pk_min_i16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23848 /* v_pk_min_u16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23848 /* v_pk_min_u16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23848 /* v_pk_min_u16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23848 /* v_pk_min_u16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23848 /* v_pk_min_u16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23861 /* v_pk_mul_f16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23861 /* v_pk_mul_f16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23861 /* v_pk_mul_f16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23861 /* v_pk_mul_f16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23861 /* v_pk_mul_f16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23874 /* v_pk_mul_lo_u16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23874 /* v_pk_mul_lo_u16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23874 /* v_pk_mul_lo_u16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23874 /* v_pk_mul_lo_u16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23874 /* v_pk_mul_lo_u16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23890 /* v_pk_sub_i16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23890 /* v_pk_sub_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23890 /* v_pk_sub_i16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23890 /* v_pk_sub_i16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23890 /* v_pk_sub_i16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23903 /* v_pk_sub_u16 */, MCK_ImmClampSI, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23903 /* v_pk_sub_u16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23903 /* v_pk_sub_u16 */, MCK_ImmOpSelHi, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23903 /* v_pk_sub_u16 */, MCK_ImmNegLo, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasVOP3PInsts, 23903 /* v_pk_sub_u16 */, MCK_ImmNegHi, 64 /* 6 */ },
  { Feature_isCIVI|Feature_isCIOnly, 23916 /* v_qsad_pk_u16_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 23916 /* v_qsad_pk_u16_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 23933 /* v_rcp_clamp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 23933 /* v_rcp_clamp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 23933 /* v_rcp_clamp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 23949 /* v_rcp_clamp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 23949 /* v_rcp_clamp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 23949 /* v_rcp_clamp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23965 /* v_rcp_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23965 /* v_rcp_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 23965 /* v_rcp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23965 /* v_rcp_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23965 /* v_rcp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23965 /* v_rcp_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23965 /* v_rcp_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 23965 /* v_rcp_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23965 /* v_rcp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23965 /* v_rcp_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23965 /* v_rcp_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23965 /* v_rcp_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 23965 /* v_rcp_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23965 /* v_rcp_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23965 /* v_rcp_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23965 /* v_rcp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23965 /* v_rcp_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23965 /* v_rcp_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23965 /* v_rcp_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 23975 /* v_rcp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 23975 /* v_rcp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 23975 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 23975 /* v_rcp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 23975 /* v_rcp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23975 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23975 /* v_rcp_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23975 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23975 /* v_rcp_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23975 /* v_rcp_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23975 /* v_rcp_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23975 /* v_rcp_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 23975 /* v_rcp_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 23975 /* v_rcp_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 23975 /* v_rcp_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23975 /* v_rcp_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23975 /* v_rcp_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23975 /* v_rcp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23975 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23975 /* v_rcp_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23975 /* v_rcp_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23975 /* v_rcp_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 23985 /* v_rcp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 23985 /* v_rcp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 23985 /* v_rcp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 23985 /* v_rcp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 23985 /* v_rcp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23985 /* v_rcp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 23995 /* v_rcp_iflag_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 23995 /* v_rcp_iflag_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 23995 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 23995 /* v_rcp_iflag_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 23995 /* v_rcp_iflag_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 23995 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23995 /* v_rcp_iflag_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23995 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23995 /* v_rcp_iflag_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23995 /* v_rcp_iflag_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 23995 /* v_rcp_iflag_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23995 /* v_rcp_iflag_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 23995 /* v_rcp_iflag_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 23995 /* v_rcp_iflag_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 23995 /* v_rcp_iflag_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 23995 /* v_rcp_iflag_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23995 /* v_rcp_iflag_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23995 /* v_rcp_iflag_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23995 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23995 /* v_rcp_iflag_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23995 /* v_rcp_iflag_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 23995 /* v_rcp_iflag_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 24011 /* v_rcp_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 24011 /* v_rcp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 24011 /* v_rcp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24063 /* v_rndne_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24063 /* v_rndne_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24063 /* v_rndne_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24063 /* v_rndne_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24063 /* v_rndne_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24063 /* v_rndne_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24063 /* v_rndne_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24063 /* v_rndne_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24063 /* v_rndne_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24063 /* v_rndne_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24063 /* v_rndne_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24063 /* v_rndne_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24063 /* v_rndne_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24063 /* v_rndne_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24063 /* v_rndne_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24063 /* v_rndne_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24063 /* v_rndne_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24063 /* v_rndne_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24063 /* v_rndne_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24075 /* v_rndne_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24075 /* v_rndne_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24075 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24075 /* v_rndne_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24075 /* v_rndne_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24075 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24075 /* v_rndne_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24075 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24075 /* v_rndne_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24075 /* v_rndne_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24075 /* v_rndne_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24075 /* v_rndne_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 24075 /* v_rndne_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 24075 /* v_rndne_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 24075 /* v_rndne_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24075 /* v_rndne_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24075 /* v_rndne_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24075 /* v_rndne_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24075 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24075 /* v_rndne_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24075 /* v_rndne_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24075 /* v_rndne_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 24087 /* v_rndne_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 24087 /* v_rndne_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 24087 /* v_rndne_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 24087 /* v_rndne_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 24087 /* v_rndne_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 24087 /* v_rndne_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 24099 /* v_rsq_clamp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 24099 /* v_rsq_clamp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 24099 /* v_rsq_clamp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 24115 /* v_rsq_clamp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 24115 /* v_rsq_clamp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 24115 /* v_rsq_clamp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24131 /* v_rsq_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24131 /* v_rsq_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24131 /* v_rsq_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24131 /* v_rsq_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24131 /* v_rsq_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24131 /* v_rsq_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24131 /* v_rsq_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24131 /* v_rsq_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24131 /* v_rsq_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24131 /* v_rsq_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24131 /* v_rsq_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24131 /* v_rsq_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24131 /* v_rsq_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24131 /* v_rsq_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24131 /* v_rsq_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24131 /* v_rsq_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24131 /* v_rsq_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24131 /* v_rsq_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24131 /* v_rsq_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24141 /* v_rsq_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24141 /* v_rsq_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24141 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24141 /* v_rsq_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24141 /* v_rsq_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24141 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24141 /* v_rsq_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24141 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24141 /* v_rsq_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24141 /* v_rsq_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24141 /* v_rsq_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24141 /* v_rsq_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 24141 /* v_rsq_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 24141 /* v_rsq_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 24141 /* v_rsq_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24141 /* v_rsq_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24141 /* v_rsq_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24141 /* v_rsq_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24141 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24141 /* v_rsq_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24141 /* v_rsq_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24141 /* v_rsq_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24151 /* v_rsq_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24151 /* v_rsq_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24151 /* v_rsq_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24151 /* v_rsq_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24151 /* v_rsq_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24151 /* v_rsq_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 24161 /* v_rsq_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 24161 /* v_rsq_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 24161 /* v_rsq_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 24178 /* v_sad_hi_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24178 /* v_sad_hi_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 24190 /* v_sad_u16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24190 /* v_sad_u16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 24200 /* v_sad_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24200 /* v_sad_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 24210 /* v_sad_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24210 /* v_sad_u8 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasDPP, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasDPP, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGFX9|Feature_HasSDWA, 24219 /* v_sat_pk_u8_i16 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_isGFX9|Feature_HasSDWA, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasSDWA, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasSDWA, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isGFX9|Feature_HasSDWA, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24219 /* v_sat_pk_u8_i16 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24219 /* v_sat_pk_u8_i16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isGFX9|Feature_HasDPP, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isGFX9|Feature_HasDPP, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isGFX9|Feature_HasDPP, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24235 /* v_screen_partition_4se_b32 */, MCK_SDWAWithInt32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24235 /* v_screen_partition_4se_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24262 /* v_sin_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24262 /* v_sin_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24262 /* v_sin_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24262 /* v_sin_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24262 /* v_sin_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24262 /* v_sin_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24262 /* v_sin_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24262 /* v_sin_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24262 /* v_sin_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24262 /* v_sin_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24262 /* v_sin_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24262 /* v_sin_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24262 /* v_sin_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24262 /* v_sin_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24262 /* v_sin_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24262 /* v_sin_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24262 /* v_sin_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24262 /* v_sin_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24262 /* v_sin_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24272 /* v_sin_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24272 /* v_sin_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24272 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24272 /* v_sin_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24272 /* v_sin_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24272 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24272 /* v_sin_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24272 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24272 /* v_sin_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24272 /* v_sin_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24272 /* v_sin_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24272 /* v_sin_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 24272 /* v_sin_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 24272 /* v_sin_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 24272 /* v_sin_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24272 /* v_sin_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24272 /* v_sin_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24272 /* v_sin_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24272 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24272 /* v_sin_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24272 /* v_sin_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24272 /* v_sin_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24282 /* v_sqrt_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24282 /* v_sqrt_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24282 /* v_sqrt_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24282 /* v_sqrt_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24282 /* v_sqrt_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24282 /* v_sqrt_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24282 /* v_sqrt_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24282 /* v_sqrt_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24282 /* v_sqrt_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24282 /* v_sqrt_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24282 /* v_sqrt_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24282 /* v_sqrt_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24282 /* v_sqrt_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24282 /* v_sqrt_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24282 /* v_sqrt_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24282 /* v_sqrt_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24282 /* v_sqrt_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24282 /* v_sqrt_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24282 /* v_sqrt_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24293 /* v_sqrt_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24293 /* v_sqrt_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24293 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24293 /* v_sqrt_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24293 /* v_sqrt_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24293 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24293 /* v_sqrt_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24293 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24293 /* v_sqrt_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24293 /* v_sqrt_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24293 /* v_sqrt_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24293 /* v_sqrt_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 24293 /* v_sqrt_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 24293 /* v_sqrt_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 24293 /* v_sqrt_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24293 /* v_sqrt_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24293 /* v_sqrt_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24293 /* v_sqrt_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24293 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24293 /* v_sqrt_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24293 /* v_sqrt_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24293 /* v_sqrt_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24304 /* v_sqrt_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24304 /* v_sqrt_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24304 /* v_sqrt_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24304 /* v_sqrt_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24304 /* v_sqrt_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24304 /* v_sqrt_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24315 /* v_sub_co_u32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24328 /* v_sub_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24328 /* v_sub_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24328 /* v_sub_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24328 /* v_sub_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24328 /* v_sub_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24328 /* v_sub_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24328 /* v_sub_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24328 /* v_sub_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24328 /* v_sub_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24328 /* v_sub_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24328 /* v_sub_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24328 /* v_sub_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24328 /* v_sub_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24328 /* v_sub_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24328 /* v_sub_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 24338 /* v_sub_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 24338 /* v_sub_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 24338 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24338 /* v_sub_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 24338 /* v_sub_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24338 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 24338 /* v_sub_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 24338 /* v_sub_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 24338 /* v_sub_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 24338 /* v_sub_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 24338 /* v_sub_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 24338 /* v_sub_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 24338 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 24338 /* v_sub_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 24338 /* v_sub_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 24338 /* v_sub_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 24338 /* v_sub_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24338 /* v_sub_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGFX9|Feature_isVI, 24348 /* v_sub_i16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGFX9|Feature_isVI, 24348 /* v_sub_i16 */, MCK_ImmOpSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24368 /* v_sub_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24368 /* v_sub_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24368 /* v_sub_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24368 /* v_sub_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24368 /* v_sub_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24368 /* v_sub_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24368 /* v_sub_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24368 /* v_sub_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24368 /* v_sub_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24368 /* v_sub_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24368 /* v_sub_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24368 /* v_sub_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24368 /* v_sub_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24368 /* v_sub_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24368 /* v_sub_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24368 /* v_sub_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24378 /* v_sub_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24378 /* v_sub_u32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24388 /* v_subb_co_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24402 /* v_subb_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24413 /* v_subbrev_co_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24430 /* v_subbrev_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24444 /* v_subrev_co_u32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24460 /* v_subrev_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24460 /* v_subrev_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24460 /* v_subrev_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24460 /* v_subrev_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24460 /* v_subrev_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24460 /* v_subrev_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24460 /* v_subrev_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24460 /* v_subrev_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24460 /* v_subrev_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24460 /* v_subrev_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24460 /* v_subrev_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24460 /* v_subrev_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24460 /* v_subrev_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24460 /* v_subrev_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_SDWAWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24460 /* v_subrev_f16 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 24473 /* v_subrev_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 24473 /* v_subrev_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 24473 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24473 /* v_subrev_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 24473 /* v_subrev_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24473 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 24473 /* v_subrev_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasDPP, 24473 /* v_subrev_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 24473 /* v_subrev_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 24473 /* v_subrev_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 24473 /* v_subrev_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 24473 /* v_subrev_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 24473 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 24473 /* v_subrev_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 24473 /* v_subrev_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 24473 /* v_subrev_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 24473 /* v_subrev_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_SDWAWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24473 /* v_subrev_f32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24499 /* v_subrev_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24499 /* v_subrev_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24499 /* v_subrev_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24499 /* v_subrev_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24499 /* v_subrev_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24499 /* v_subrev_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24499 /* v_subrev_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24499 /* v_subrev_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24499 /* v_subrev_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24499 /* v_subrev_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24499 /* v_subrev_u16 */, MCK_SDWAWithInt16InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24499 /* v_subrev_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24499 /* v_subrev_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24499 /* v_subrev_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24499 /* v_subrev_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24499 /* v_subrev_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_HasAddNoCarryInsts|Feature_HasDPP|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasDPP|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9|Feature_isGFX9, 24512 /* v_subrev_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_SDWAWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_HasSDWA|Feature_isVIOnly, 24512 /* v_subrev_u32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 24536 /* v_trig_preop_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24536 /* v_trig_preop_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 24536 /* v_trig_preop_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 24536 /* v_trig_preop_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24536 /* v_trig_preop_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24536 /* v_trig_preop_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24536 /* v_trig_preop_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 24536 /* v_trig_preop_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24553 /* v_trunc_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24553 /* v_trunc_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_isVI, 24553 /* v_trunc_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24553 /* v_trunc_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24553 /* v_trunc_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24553 /* v_trunc_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24553 /* v_trunc_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_Has16BitInsts|Feature_HasSDWA, 24553 /* v_trunc_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24553 /* v_trunc_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24553 /* v_trunc_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24553 /* v_trunc_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24553 /* v_trunc_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_Has16BitInsts|Feature_HasDPP, 24553 /* v_trunc_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24553 /* v_trunc_f16 */, MCK_SDWAWithFP16InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24553 /* v_trunc_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24553 /* v_trunc_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24553 /* v_trunc_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24553 /* v_trunc_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24553 /* v_trunc_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 24565 /* v_trunc_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 24565 /* v_trunc_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 24565 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 24565 /* v_trunc_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 24565 /* v_trunc_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 24565 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24565 /* v_trunc_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24565 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24565 /* v_trunc_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24565 /* v_trunc_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_HasSDWA|Feature_HasSDWA, 24565 /* v_trunc_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24565 /* v_trunc_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_HasDPP|Feature_HasDPP, 24565 /* v_trunc_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_HasDPP|Feature_HasDPP, 24565 /* v_trunc_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_HasDPP|Feature_HasDPP, 24565 /* v_trunc_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_HasDPP|Feature_HasDPP, 24565 /* v_trunc_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24565 /* v_trunc_f32 */, MCK_SDWAWithFP32InputMods, 2 /* 1 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24565 /* v_trunc_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24565 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24565 /* v_trunc_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24565 /* v_trunc_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24565 /* v_trunc_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 24577 /* v_trunc_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 24577 /* v_trunc_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 24577 /* v_trunc_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 24577 /* v_trunc_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 24577 /* v_trunc_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 24577 /* v_trunc_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 24615 /* v_xnor_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 24615 /* v_xnor_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 24615 /* v_xnor_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_HasDLInsts|Feature_HasDPP, 24615 /* v_xnor_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 24615 /* v_xnor_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 24615 /* v_xnor_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 24615 /* v_xnor_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 24615 /* v_xnor_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 24615 /* v_xnor_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasDLInsts|Feature_HasSDWA, 24615 /* v_xnor_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasDLInsts|Feature_HasSDWA9, 24615 /* v_xnor_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasDLInsts|Feature_HasSDWA9, 24615 /* v_xnor_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasDLInsts|Feature_HasSDWA9, 24615 /* v_xnor_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasDLInsts|Feature_HasSDWA9, 24615 /* v_xnor_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasDLInsts|Feature_HasSDWA9, 24615 /* v_xnor_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasDLInsts|Feature_HasSDWA9, 24615 /* v_xnor_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 24626 /* v_xor_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasDPP, 24626 /* v_xor_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasDPP, 24626 /* v_xor_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isGCN|Feature_HasDPP, 24626 /* v_xor_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 24626 /* v_xor_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_HasSDWA, 24626 /* v_xor_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_HasSDWA, 24626 /* v_xor_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_HasSDWA, 24626 /* v_xor_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_HasSDWA, 24626 /* v_xor_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_HasSDWA, 24626 /* v_xor_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24626 /* v_xor_b32 */, MCK_SDWAWithInt32InputMods, 6 /* 1, 2 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24626 /* v_xor_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24626 /* v_xor_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24626 /* v_xor_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24626 /* v_xor_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_HasSDWA9|Feature_HasSDWA9, 24626 /* v_xor_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
};

OperandMatchResultTy AMDGPUAsmParser::
tryCustomParseOperand(OperandVector &Operands,
                      unsigned MCK) {

  switch(MCK) {
  case MCK_Attr:
    return parseInterpAttr(Operands);
  case MCK_ExpTgt:
    return parseExpTgt(Operands);
  case MCK_RegOrImmWithFP16InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_SDWAWithFP16InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_RegOrImmWithFP32InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_SDWAWithFP32InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_RegOrImmWithFP64InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_VRegWithFPInputMods:
    return parseRegWithFPInputMods(Operands);
  case MCK_SDWAWithInt16InputMods:
    return parseRegOrImmWithIntInputMods(Operands);
  case MCK_RegOrImmWithInt32InputMods:
    return parseRegOrImmWithIntInputMods(Operands);
  case MCK_SDWAWithInt32InputMods:
    return parseRegOrImmWithIntInputMods(Operands);
  case MCK_RegOrImmWithInt64InputMods:
    return parseRegOrImmWithIntInputMods(Operands);
  case MCK_OpSelMods:
    return parseRegOrImm(Operands);
  case MCK_VRegWithIntInputMods:
    return parseRegWithIntInputMods(Operands);
  case MCK_InterpSlot:
    return parseInterpSlot(Operands);
  case MCK_KImmFP16:
    return parseImm(Operands);
  case MCK_KImmFP32:
    return parseImm(Operands);
  case MCK_PackedFP16InputMods:
    return parseRegOrImm(Operands);
  case MCK_PackedInt16InputMods:
    return parseRegOrImm(Operands);
  case MCK_SWaitCnt:
    return parseSWaitCntOps(Operands);
  case MCK_SendMsg:
    return parseSendMsgOp(Operands);
  case MCK_SoppBrTarget:
    return parseSOppBrTarget(Operands);
  case MCK_Swizzle:
    return parseSwizzleOp(Operands);
  case MCK_VReg32OrOff:
    return parseVReg32OrOff(Operands);
  case MCK_ImmOffen:
    return parseOptionalOperand(Operands);
  case MCK_ImmIdxen:
    return parseOptionalOperand(Operands);
  case MCK_ImmAddr64:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffsetU12:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffsetS13:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffset:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffset0:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffset1:
    return parseOptionalOperand(Operands);
  case MCK_ImmGDS:
    return parseOptionalOperand(Operands);
  case MCK_ImmOModSI:
    return parseOptionalOperand(Operands);
  case MCK_ImmClampSI:
    return parseOptionalOperand(Operands);
  case MCK_ImmHigh:
    return parseOptionalOperand(Operands);
  case MCK_ImmGLC:
    return parseOptionalOperand(Operands);
  case MCK_ImmSLC:
    return parseOptionalOperand(Operands);
  case MCK_ImmTFE:
    return parseOptionalOperand(Operands);
  case MCK_ImmUNorm:
    return parseOptionalOperand(Operands);
  case MCK_ImmDA:
    return parseOptionalOperand(Operands);
  case MCK_ImmR128A16:
    return parseOptionalOperand(Operands);
  case MCK_ImmD16:
    return parseOptionalOperand(Operands);
  case MCK_ImmLWE:
    return parseOptionalOperand(Operands);
  case MCK_ImmExpCompr:
    return parseOptionalOperand(Operands);
  case MCK_ImmExpVM:
    return parseOptionalOperand(Operands);
  case MCK_ImmFORMAT:
    return parseOptionalOperand(Operands);
  case MCK_ImmDMask:
    return parseOptionalOperand(Operands);
  case MCK_ImmDPPCtrl:
    return parseDPPCtrl(Operands);
  case MCK_ImmRowMask:
    return parseOptionalOperand(Operands);
  case MCK_ImmBankMask:
    return parseOptionalOperand(Operands);
  case MCK_ImmBoundCtrl:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWADstSel:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWASrc0Sel:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWASrc1Sel:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWADstUnused:
    return parseOptionalOperand(Operands);
  case MCK_ImmOpSel:
    return parseOptionalOperand(Operands);
  case MCK_ImmOpSelHi:
    return parseOptionalOperand(Operands);
  case MCK_ImmNegLo:
    return parseOptionalOperand(Operands);
  case MCK_ImmNegHi:
    return parseOptionalOperand(Operands);
  case MCK_ImmHwreg:
    return parseHwreg(Operands);
  case MCK_ImmExpTgt:
    return parseExpTgt(Operands);
  case MCK_ImmSMRDOffset8:
    return parseOptionalOperand(Operands);
  case MCK_ImmSMRDOffset20:
    return parseOptionalOperand(Operands);
  case MCK_ImmSMRDLiteralOffset:
    return parseOptionalOperand(Operands);
  default:
    return MatchOperand_NoMatch;
  }
  return MatchOperand_NoMatch;
}

OperandMatchResultTy AMDGPUAsmParser::
MatchOperandParserImpl(OperandVector &Operands,
                       StringRef Mnemonic,
                       bool ParseForAllFeatures) {
  // Get the current feature set.
  uint64_t AvailableFeatures = getAvailableFeatures();

  // Get the next operand index.
  unsigned NextOpNum = Operands.size() - 1;
  // Search the table.
  auto MnemonicRange =
    std::equal_range(std::begin(OperandMatchTable), std::end(OperandMatchTable),
                     Mnemonic, LessOpcodeOperand());

  if (MnemonicRange.first == MnemonicRange.second)
    return MatchOperand_NoMatch;

  for (const OperandMatchEntry *it = MnemonicRange.first,
       *ie = MnemonicRange.second; it != ie; ++it) {
    // equal_range guarantees that instruction mnemonic matches.
    assert(Mnemonic == it->getMnemonic());

    // check if the available features match
    if (!ParseForAllFeatures && (AvailableFeatures & it->RequiredFeatures) != it->RequiredFeatures)
        continue;

    // check if the operand in question has a custom parser.
    if (!(it->OperandMask & (1 << NextOpNum)))
      continue;

    // call custom parse method to handle the operand
    OperandMatchResultTy Result = tryCustomParseOperand(Operands, it->Class);
    if (Result != MatchOperand_NoMatch)
      return Result;
  }

  // Okay, we had no match.
  return MatchOperand_NoMatch;
}

#endif // GET_MATCHER_IMPLEMENTATION


#ifdef GET_MNEMONIC_SPELL_CHECKER
#undef GET_MNEMONIC_SPELL_CHECKER

static std::string AMDGPUMnemonicSpellCheck(StringRef S, uint64_t FBS, unsigned VariantID) {
  const unsigned MaxEditDist = 2;
  std::vector<StringRef> Candidates;
  StringRef Prev = "";

  // Find the appropriate table for this asm variant.
  const MatchEntry *Start, *End;
  switch (VariantID) {
  default: llvm_unreachable("invalid variant!");
  case 0: Start = std::begin(MatchTable0); End = std::end(MatchTable0); break;
  case 1: Start = std::begin(MatchTable1); End = std::end(MatchTable1); break;
  case 2: Start = std::begin(MatchTable2); End = std::end(MatchTable2); break;
  case 3: Start = std::begin(MatchTable3); End = std::end(MatchTable3); break;
  case 4: Start = std::begin(MatchTable4); End = std::end(MatchTable4); break;
  }

  for (auto I = Start; I < End; I++) {
    // Ignore unsupported instructions.
    if ((FBS & I->RequiredFeatures) != I->RequiredFeatures)
      continue;

    StringRef T = I->getMnemonic();
    // Avoid recomputing the edit distance for the same string.
    if (T.equals(Prev))
      continue;

    Prev = T;
    unsigned Dist = S.edit_distance(T, false, MaxEditDist);
    if (Dist <= MaxEditDist)
      Candidates.push_back(T);
  }

  if (Candidates.empty())
    return "";

  std::string Res = ", did you mean: ";
  unsigned i = 0;
  for( ; i < Candidates.size() - 1; i++)
    Res += Candidates[i].str() + ", ";
  return Res + Candidates[i].str() + "?";
}

#endif // GET_MNEMONIC_SPELL_CHECKER

